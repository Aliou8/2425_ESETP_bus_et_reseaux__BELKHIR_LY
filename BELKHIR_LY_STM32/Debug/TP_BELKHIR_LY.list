
TP_BELKHIR_LY.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000054b0  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000258  08005680  08005680  00006680  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080058d8  080058d8  00007078  2**0
                  CONTENTS
  4 .ARM          00000008  080058d8  080058d8  000068d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080058e0  080058e0  00007078  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080058e0  080058e0  000068e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080058e4  080058e4  000068e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000078  20000000  080058e8  00007000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000388  20000078  08005960  00007078  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000400  08005960  00007400  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00007078  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000ed1d  00000000  00000000  000070a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000290d  00000000  00000000  00015dc5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000cf0  00000000  00000000  000186d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000009ed  00000000  00000000  000193c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00022f40  00000000  00000000  00019db5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00012ab1  00000000  00000000  0003ccf5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000cf713  00000000  00000000  0004f7a6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0011eeb9  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00003da0  00000000  00000000  0011eefc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000062  00000000  00000000  00122c9c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000078 	.word	0x20000078
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08005668 	.word	0x08005668

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	2000007c 	.word	0x2000007c
 800020c:	08005668 	.word	0x08005668

08000210 <strcmp>:
 8000210:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000214:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000218:	2a01      	cmp	r2, #1
 800021a:	bf28      	it	cs
 800021c:	429a      	cmpcs	r2, r3
 800021e:	d0f7      	beq.n	8000210 <strcmp>
 8000220:	1ad0      	subs	r0, r2, r3
 8000222:	4770      	bx	lr
	...

08000230 <memchr>:
 8000230:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000234:	2a10      	cmp	r2, #16
 8000236:	db2b      	blt.n	8000290 <memchr+0x60>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	d008      	beq.n	8000250 <memchr+0x20>
 800023e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000242:	3a01      	subs	r2, #1
 8000244:	428b      	cmp	r3, r1
 8000246:	d02d      	beq.n	80002a4 <memchr+0x74>
 8000248:	f010 0f07 	tst.w	r0, #7
 800024c:	b342      	cbz	r2, 80002a0 <memchr+0x70>
 800024e:	d1f6      	bne.n	800023e <memchr+0xe>
 8000250:	b4f0      	push	{r4, r5, r6, r7}
 8000252:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000256:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800025a:	f022 0407 	bic.w	r4, r2, #7
 800025e:	f07f 0700 	mvns.w	r7, #0
 8000262:	2300      	movs	r3, #0
 8000264:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000268:	3c08      	subs	r4, #8
 800026a:	ea85 0501 	eor.w	r5, r5, r1
 800026e:	ea86 0601 	eor.w	r6, r6, r1
 8000272:	fa85 f547 	uadd8	r5, r5, r7
 8000276:	faa3 f587 	sel	r5, r3, r7
 800027a:	fa86 f647 	uadd8	r6, r6, r7
 800027e:	faa5 f687 	sel	r6, r5, r7
 8000282:	b98e      	cbnz	r6, 80002a8 <memchr+0x78>
 8000284:	d1ee      	bne.n	8000264 <memchr+0x34>
 8000286:	bcf0      	pop	{r4, r5, r6, r7}
 8000288:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800028c:	f002 0207 	and.w	r2, r2, #7
 8000290:	b132      	cbz	r2, 80002a0 <memchr+0x70>
 8000292:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000296:	3a01      	subs	r2, #1
 8000298:	ea83 0301 	eor.w	r3, r3, r1
 800029c:	b113      	cbz	r3, 80002a4 <memchr+0x74>
 800029e:	d1f8      	bne.n	8000292 <memchr+0x62>
 80002a0:	2000      	movs	r0, #0
 80002a2:	4770      	bx	lr
 80002a4:	3801      	subs	r0, #1
 80002a6:	4770      	bx	lr
 80002a8:	2d00      	cmp	r5, #0
 80002aa:	bf06      	itte	eq
 80002ac:	4635      	moveq	r5, r6
 80002ae:	3803      	subeq	r0, #3
 80002b0:	3807      	subne	r0, #7
 80002b2:	f015 0f01 	tst.w	r5, #1
 80002b6:	d107      	bne.n	80002c8 <memchr+0x98>
 80002b8:	3001      	adds	r0, #1
 80002ba:	f415 7f80 	tst.w	r5, #256	@ 0x100
 80002be:	bf02      	ittt	eq
 80002c0:	3001      	addeq	r0, #1
 80002c2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002c6:	3001      	addeq	r0, #1
 80002c8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ca:	3801      	subs	r0, #1
 80002cc:	4770      	bx	lr
 80002ce:	bf00      	nop

080002d0 <__aeabi_uldivmod>:
 80002d0:	b953      	cbnz	r3, 80002e8 <__aeabi_uldivmod+0x18>
 80002d2:	b94a      	cbnz	r2, 80002e8 <__aeabi_uldivmod+0x18>
 80002d4:	2900      	cmp	r1, #0
 80002d6:	bf08      	it	eq
 80002d8:	2800      	cmpeq	r0, #0
 80002da:	bf1c      	itt	ne
 80002dc:	f04f 31ff 	movne.w	r1, #4294967295
 80002e0:	f04f 30ff 	movne.w	r0, #4294967295
 80002e4:	f000 b96a 	b.w	80005bc <__aeabi_idiv0>
 80002e8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ec:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002f0:	f000 f806 	bl	8000300 <__udivmoddi4>
 80002f4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002f8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002fc:	b004      	add	sp, #16
 80002fe:	4770      	bx	lr

08000300 <__udivmoddi4>:
 8000300:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000304:	9d08      	ldr	r5, [sp, #32]
 8000306:	460c      	mov	r4, r1
 8000308:	2b00      	cmp	r3, #0
 800030a:	d14e      	bne.n	80003aa <__udivmoddi4+0xaa>
 800030c:	4694      	mov	ip, r2
 800030e:	458c      	cmp	ip, r1
 8000310:	4686      	mov	lr, r0
 8000312:	fab2 f282 	clz	r2, r2
 8000316:	d962      	bls.n	80003de <__udivmoddi4+0xde>
 8000318:	b14a      	cbz	r2, 800032e <__udivmoddi4+0x2e>
 800031a:	f1c2 0320 	rsb	r3, r2, #32
 800031e:	4091      	lsls	r1, r2
 8000320:	fa20 f303 	lsr.w	r3, r0, r3
 8000324:	fa0c fc02 	lsl.w	ip, ip, r2
 8000328:	4319      	orrs	r1, r3
 800032a:	fa00 fe02 	lsl.w	lr, r0, r2
 800032e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000332:	fa1f f68c 	uxth.w	r6, ip
 8000336:	fbb1 f4f7 	udiv	r4, r1, r7
 800033a:	ea4f 431e 	mov.w	r3, lr, lsr #16
 800033e:	fb07 1114 	mls	r1, r7, r4, r1
 8000342:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000346:	fb04 f106 	mul.w	r1, r4, r6
 800034a:	4299      	cmp	r1, r3
 800034c:	d90a      	bls.n	8000364 <__udivmoddi4+0x64>
 800034e:	eb1c 0303 	adds.w	r3, ip, r3
 8000352:	f104 30ff 	add.w	r0, r4, #4294967295
 8000356:	f080 8112 	bcs.w	800057e <__udivmoddi4+0x27e>
 800035a:	4299      	cmp	r1, r3
 800035c:	f240 810f 	bls.w	800057e <__udivmoddi4+0x27e>
 8000360:	3c02      	subs	r4, #2
 8000362:	4463      	add	r3, ip
 8000364:	1a59      	subs	r1, r3, r1
 8000366:	fa1f f38e 	uxth.w	r3, lr
 800036a:	fbb1 f0f7 	udiv	r0, r1, r7
 800036e:	fb07 1110 	mls	r1, r7, r0, r1
 8000372:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000376:	fb00 f606 	mul.w	r6, r0, r6
 800037a:	429e      	cmp	r6, r3
 800037c:	d90a      	bls.n	8000394 <__udivmoddi4+0x94>
 800037e:	eb1c 0303 	adds.w	r3, ip, r3
 8000382:	f100 31ff 	add.w	r1, r0, #4294967295
 8000386:	f080 80fc 	bcs.w	8000582 <__udivmoddi4+0x282>
 800038a:	429e      	cmp	r6, r3
 800038c:	f240 80f9 	bls.w	8000582 <__udivmoddi4+0x282>
 8000390:	4463      	add	r3, ip
 8000392:	3802      	subs	r0, #2
 8000394:	1b9b      	subs	r3, r3, r6
 8000396:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 800039a:	2100      	movs	r1, #0
 800039c:	b11d      	cbz	r5, 80003a6 <__udivmoddi4+0xa6>
 800039e:	40d3      	lsrs	r3, r2
 80003a0:	2200      	movs	r2, #0
 80003a2:	e9c5 3200 	strd	r3, r2, [r5]
 80003a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80003aa:	428b      	cmp	r3, r1
 80003ac:	d905      	bls.n	80003ba <__udivmoddi4+0xba>
 80003ae:	b10d      	cbz	r5, 80003b4 <__udivmoddi4+0xb4>
 80003b0:	e9c5 0100 	strd	r0, r1, [r5]
 80003b4:	2100      	movs	r1, #0
 80003b6:	4608      	mov	r0, r1
 80003b8:	e7f5      	b.n	80003a6 <__udivmoddi4+0xa6>
 80003ba:	fab3 f183 	clz	r1, r3
 80003be:	2900      	cmp	r1, #0
 80003c0:	d146      	bne.n	8000450 <__udivmoddi4+0x150>
 80003c2:	42a3      	cmp	r3, r4
 80003c4:	d302      	bcc.n	80003cc <__udivmoddi4+0xcc>
 80003c6:	4290      	cmp	r0, r2
 80003c8:	f0c0 80f0 	bcc.w	80005ac <__udivmoddi4+0x2ac>
 80003cc:	1a86      	subs	r6, r0, r2
 80003ce:	eb64 0303 	sbc.w	r3, r4, r3
 80003d2:	2001      	movs	r0, #1
 80003d4:	2d00      	cmp	r5, #0
 80003d6:	d0e6      	beq.n	80003a6 <__udivmoddi4+0xa6>
 80003d8:	e9c5 6300 	strd	r6, r3, [r5]
 80003dc:	e7e3      	b.n	80003a6 <__udivmoddi4+0xa6>
 80003de:	2a00      	cmp	r2, #0
 80003e0:	f040 8090 	bne.w	8000504 <__udivmoddi4+0x204>
 80003e4:	eba1 040c 	sub.w	r4, r1, ip
 80003e8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80003ec:	fa1f f78c 	uxth.w	r7, ip
 80003f0:	2101      	movs	r1, #1
 80003f2:	fbb4 f6f8 	udiv	r6, r4, r8
 80003f6:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80003fa:	fb08 4416 	mls	r4, r8, r6, r4
 80003fe:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000402:	fb07 f006 	mul.w	r0, r7, r6
 8000406:	4298      	cmp	r0, r3
 8000408:	d908      	bls.n	800041c <__udivmoddi4+0x11c>
 800040a:	eb1c 0303 	adds.w	r3, ip, r3
 800040e:	f106 34ff 	add.w	r4, r6, #4294967295
 8000412:	d202      	bcs.n	800041a <__udivmoddi4+0x11a>
 8000414:	4298      	cmp	r0, r3
 8000416:	f200 80cd 	bhi.w	80005b4 <__udivmoddi4+0x2b4>
 800041a:	4626      	mov	r6, r4
 800041c:	1a1c      	subs	r4, r3, r0
 800041e:	fa1f f38e 	uxth.w	r3, lr
 8000422:	fbb4 f0f8 	udiv	r0, r4, r8
 8000426:	fb08 4410 	mls	r4, r8, r0, r4
 800042a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 800042e:	fb00 f707 	mul.w	r7, r0, r7
 8000432:	429f      	cmp	r7, r3
 8000434:	d908      	bls.n	8000448 <__udivmoddi4+0x148>
 8000436:	eb1c 0303 	adds.w	r3, ip, r3
 800043a:	f100 34ff 	add.w	r4, r0, #4294967295
 800043e:	d202      	bcs.n	8000446 <__udivmoddi4+0x146>
 8000440:	429f      	cmp	r7, r3
 8000442:	f200 80b0 	bhi.w	80005a6 <__udivmoddi4+0x2a6>
 8000446:	4620      	mov	r0, r4
 8000448:	1bdb      	subs	r3, r3, r7
 800044a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 800044e:	e7a5      	b.n	800039c <__udivmoddi4+0x9c>
 8000450:	f1c1 0620 	rsb	r6, r1, #32
 8000454:	408b      	lsls	r3, r1
 8000456:	fa22 f706 	lsr.w	r7, r2, r6
 800045a:	431f      	orrs	r7, r3
 800045c:	fa20 fc06 	lsr.w	ip, r0, r6
 8000460:	fa04 f301 	lsl.w	r3, r4, r1
 8000464:	ea43 030c 	orr.w	r3, r3, ip
 8000468:	40f4      	lsrs	r4, r6
 800046a:	fa00 f801 	lsl.w	r8, r0, r1
 800046e:	0c38      	lsrs	r0, r7, #16
 8000470:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000474:	fbb4 fef0 	udiv	lr, r4, r0
 8000478:	fa1f fc87 	uxth.w	ip, r7
 800047c:	fb00 441e 	mls	r4, r0, lr, r4
 8000480:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000484:	fb0e f90c 	mul.w	r9, lr, ip
 8000488:	45a1      	cmp	r9, r4
 800048a:	fa02 f201 	lsl.w	r2, r2, r1
 800048e:	d90a      	bls.n	80004a6 <__udivmoddi4+0x1a6>
 8000490:	193c      	adds	r4, r7, r4
 8000492:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000496:	f080 8084 	bcs.w	80005a2 <__udivmoddi4+0x2a2>
 800049a:	45a1      	cmp	r9, r4
 800049c:	f240 8081 	bls.w	80005a2 <__udivmoddi4+0x2a2>
 80004a0:	f1ae 0e02 	sub.w	lr, lr, #2
 80004a4:	443c      	add	r4, r7
 80004a6:	eba4 0409 	sub.w	r4, r4, r9
 80004aa:	fa1f f983 	uxth.w	r9, r3
 80004ae:	fbb4 f3f0 	udiv	r3, r4, r0
 80004b2:	fb00 4413 	mls	r4, r0, r3, r4
 80004b6:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 80004ba:	fb03 fc0c 	mul.w	ip, r3, ip
 80004be:	45a4      	cmp	ip, r4
 80004c0:	d907      	bls.n	80004d2 <__udivmoddi4+0x1d2>
 80004c2:	193c      	adds	r4, r7, r4
 80004c4:	f103 30ff 	add.w	r0, r3, #4294967295
 80004c8:	d267      	bcs.n	800059a <__udivmoddi4+0x29a>
 80004ca:	45a4      	cmp	ip, r4
 80004cc:	d965      	bls.n	800059a <__udivmoddi4+0x29a>
 80004ce:	3b02      	subs	r3, #2
 80004d0:	443c      	add	r4, r7
 80004d2:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 80004d6:	fba0 9302 	umull	r9, r3, r0, r2
 80004da:	eba4 040c 	sub.w	r4, r4, ip
 80004de:	429c      	cmp	r4, r3
 80004e0:	46ce      	mov	lr, r9
 80004e2:	469c      	mov	ip, r3
 80004e4:	d351      	bcc.n	800058a <__udivmoddi4+0x28a>
 80004e6:	d04e      	beq.n	8000586 <__udivmoddi4+0x286>
 80004e8:	b155      	cbz	r5, 8000500 <__udivmoddi4+0x200>
 80004ea:	ebb8 030e 	subs.w	r3, r8, lr
 80004ee:	eb64 040c 	sbc.w	r4, r4, ip
 80004f2:	fa04 f606 	lsl.w	r6, r4, r6
 80004f6:	40cb      	lsrs	r3, r1
 80004f8:	431e      	orrs	r6, r3
 80004fa:	40cc      	lsrs	r4, r1
 80004fc:	e9c5 6400 	strd	r6, r4, [r5]
 8000500:	2100      	movs	r1, #0
 8000502:	e750      	b.n	80003a6 <__udivmoddi4+0xa6>
 8000504:	f1c2 0320 	rsb	r3, r2, #32
 8000508:	fa20 f103 	lsr.w	r1, r0, r3
 800050c:	fa0c fc02 	lsl.w	ip, ip, r2
 8000510:	fa24 f303 	lsr.w	r3, r4, r3
 8000514:	4094      	lsls	r4, r2
 8000516:	430c      	orrs	r4, r1
 8000518:	ea4f 481c 	mov.w	r8, ip, lsr #16
 800051c:	fa00 fe02 	lsl.w	lr, r0, r2
 8000520:	fa1f f78c 	uxth.w	r7, ip
 8000524:	fbb3 f0f8 	udiv	r0, r3, r8
 8000528:	fb08 3110 	mls	r1, r8, r0, r3
 800052c:	0c23      	lsrs	r3, r4, #16
 800052e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000532:	fb00 f107 	mul.w	r1, r0, r7
 8000536:	4299      	cmp	r1, r3
 8000538:	d908      	bls.n	800054c <__udivmoddi4+0x24c>
 800053a:	eb1c 0303 	adds.w	r3, ip, r3
 800053e:	f100 36ff 	add.w	r6, r0, #4294967295
 8000542:	d22c      	bcs.n	800059e <__udivmoddi4+0x29e>
 8000544:	4299      	cmp	r1, r3
 8000546:	d92a      	bls.n	800059e <__udivmoddi4+0x29e>
 8000548:	3802      	subs	r0, #2
 800054a:	4463      	add	r3, ip
 800054c:	1a5b      	subs	r3, r3, r1
 800054e:	b2a4      	uxth	r4, r4
 8000550:	fbb3 f1f8 	udiv	r1, r3, r8
 8000554:	fb08 3311 	mls	r3, r8, r1, r3
 8000558:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800055c:	fb01 f307 	mul.w	r3, r1, r7
 8000560:	42a3      	cmp	r3, r4
 8000562:	d908      	bls.n	8000576 <__udivmoddi4+0x276>
 8000564:	eb1c 0404 	adds.w	r4, ip, r4
 8000568:	f101 36ff 	add.w	r6, r1, #4294967295
 800056c:	d213      	bcs.n	8000596 <__udivmoddi4+0x296>
 800056e:	42a3      	cmp	r3, r4
 8000570:	d911      	bls.n	8000596 <__udivmoddi4+0x296>
 8000572:	3902      	subs	r1, #2
 8000574:	4464      	add	r4, ip
 8000576:	1ae4      	subs	r4, r4, r3
 8000578:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800057c:	e739      	b.n	80003f2 <__udivmoddi4+0xf2>
 800057e:	4604      	mov	r4, r0
 8000580:	e6f0      	b.n	8000364 <__udivmoddi4+0x64>
 8000582:	4608      	mov	r0, r1
 8000584:	e706      	b.n	8000394 <__udivmoddi4+0x94>
 8000586:	45c8      	cmp	r8, r9
 8000588:	d2ae      	bcs.n	80004e8 <__udivmoddi4+0x1e8>
 800058a:	ebb9 0e02 	subs.w	lr, r9, r2
 800058e:	eb63 0c07 	sbc.w	ip, r3, r7
 8000592:	3801      	subs	r0, #1
 8000594:	e7a8      	b.n	80004e8 <__udivmoddi4+0x1e8>
 8000596:	4631      	mov	r1, r6
 8000598:	e7ed      	b.n	8000576 <__udivmoddi4+0x276>
 800059a:	4603      	mov	r3, r0
 800059c:	e799      	b.n	80004d2 <__udivmoddi4+0x1d2>
 800059e:	4630      	mov	r0, r6
 80005a0:	e7d4      	b.n	800054c <__udivmoddi4+0x24c>
 80005a2:	46d6      	mov	lr, sl
 80005a4:	e77f      	b.n	80004a6 <__udivmoddi4+0x1a6>
 80005a6:	4463      	add	r3, ip
 80005a8:	3802      	subs	r0, #2
 80005aa:	e74d      	b.n	8000448 <__udivmoddi4+0x148>
 80005ac:	4606      	mov	r6, r0
 80005ae:	4623      	mov	r3, r4
 80005b0:	4608      	mov	r0, r1
 80005b2:	e70f      	b.n	80003d4 <__udivmoddi4+0xd4>
 80005b4:	3e02      	subs	r6, #2
 80005b6:	4463      	add	r3, ip
 80005b8:	e730      	b.n	800041c <__udivmoddi4+0x11c>
 80005ba:	bf00      	nop

080005bc <__aeabi_idiv0>:
 80005bc:	4770      	bx	lr
 80005be:	bf00      	nop

080005c0 <uart_read>:

static char printfBuffer[BUFFER_SIZE];
static BMP280_CompenParameter_t paramPI ;

// Fonction pour lire un caractère via UART
static char uart_read() {
 80005c0:	b580      	push	{r7, lr}
 80005c2:	b082      	sub	sp, #8
 80005c4:	af00      	add	r7, sp, #0

    char c;
    HAL_UART_Receive(&UART_PI, (uint8_t *)(&c), 1, HAL_MAX_DELAY);
 80005c6:	1df9      	adds	r1, r7, #7
 80005c8:	f04f 33ff 	mov.w	r3, #4294967295
 80005cc:	2201      	movs	r2, #1
 80005ce:	4804      	ldr	r0, [pc, #16]	@ (80005e0 <uart_read+0x20>)
 80005d0:	f003 fb0b 	bl	8003bea <HAL_UART_Receive>
    return c;
 80005d4:	79fb      	ldrb	r3, [r7, #7]
}
 80005d6:	4618      	mov	r0, r3
 80005d8:	3708      	adds	r7, #8
 80005da:	46bd      	mov	sp, r7
 80005dc:	bd80      	pop	{r7, pc}
 80005de:	bf00      	nop
 80005e0:	20000220 	.word	0x20000220

080005e4 <uart_write>:

// Fonction pour écrire une chaîne via UART
static int uart_write(char *s, uint16_t size) {
 80005e4:	b580      	push	{r7, lr}
 80005e6:	b082      	sub	sp, #8
 80005e8:	af00      	add	r7, sp, #0
 80005ea:	6078      	str	r0, [r7, #4]
 80005ec:	460b      	mov	r3, r1
 80005ee:	807b      	strh	r3, [r7, #2]
    HAL_UART_Transmit(&UART_PI, (uint8_t *)s, size, HAL_MAX_DELAY);
 80005f0:	887a      	ldrh	r2, [r7, #2]
 80005f2:	f04f 33ff 	mov.w	r3, #4294967295
 80005f6:	6879      	ldr	r1, [r7, #4]
 80005f8:	4803      	ldr	r0, [pc, #12]	@ (8000608 <uart_write+0x24>)
 80005fa:	f003 fa6b 	bl	8003ad4 <HAL_UART_Transmit>
    return size;
 80005fe:	887b      	ldrh	r3, [r7, #2]
}
 8000600:	4618      	mov	r0, r3
 8000602:	3708      	adds	r7, #8
 8000604:	46bd      	mov	sp, r7
 8000606:	bd80      	pop	{r7, pc}
 8000608:	20000220 	.word	0x20000220

0800060c <PI_Init>:

// Initialisation de la communication
void PI_Init(void) {
 800060c:	b580      	push	{r7, lr}
 800060e:	b082      	sub	sp, #8
 8000610:	af00      	add	r7, sp, #0
    int size = snprintf(printfBuffer, BUFFER_SIZE, "\r\nCommunication entre STM32 et Raspberry PI\r\n");
 8000612:	4a08      	ldr	r2, [pc, #32]	@ (8000634 <PI_Init+0x28>)
 8000614:	2164      	movs	r1, #100	@ 0x64
 8000616:	4808      	ldr	r0, [pc, #32]	@ (8000638 <PI_Init+0x2c>)
 8000618:	f003 ffe0 	bl	80045dc <sniprintf>
 800061c:	6078      	str	r0, [r7, #4]
    uart_write(printfBuffer, size);
 800061e:	687b      	ldr	r3, [r7, #4]
 8000620:	b29b      	uxth	r3, r3
 8000622:	4619      	mov	r1, r3
 8000624:	4804      	ldr	r0, [pc, #16]	@ (8000638 <PI_Init+0x2c>)
 8000626:	f7ff ffdd 	bl	80005e4 <uart_write>
}
 800062a:	bf00      	nop
 800062c:	3708      	adds	r7, #8
 800062e:	46bd      	mov	sp, r7
 8000630:	bd80      	pop	{r7, pc}
 8000632:	bf00      	nop
 8000634:	08005680 	.word	0x08005680
 8000638:	20000094 	.word	0x20000094

0800063c <PI_GetCommand>:

// Fonction pour traiter les commandes
static void PI_GetCommand(char *buffer) {
 800063c:	b580      	push	{r7, lr}
 800063e:	b088      	sub	sp, #32
 8000640:	af00      	add	r7, sp, #0
 8000642:	6078      	str	r0, [r7, #4]
	BMP280_ReadCalibrationData() ;
 8000644:	f000 f94a 	bl	80008dc <BMP280_ReadCalibrationData>
	ParameterFill(&paramPI);
 8000648:	4823      	ldr	r0, [pc, #140]	@ (80006d8 <PI_GetCommand+0x9c>)
 800064a:	f000 f979 	bl	8000940 <ParameterFill>

    uint32_t temperature =BMP280_ConvertTemperature(BMP280_ReadTemperature(), &paramPI);
 800064e:	f000 fa09 	bl	8000a64 <BMP280_ReadTemperature>
 8000652:	4603      	mov	r3, r0
 8000654:	4920      	ldr	r1, [pc, #128]	@ (80006d8 <PI_GetCommand+0x9c>)
 8000656:	4618      	mov	r0, r3
 8000658:	f000 fa20 	bl	8000a9c <BMP280_ConvertTemperature>
 800065c:	61f8      	str	r0, [r7, #28]
    uint32_t pression = BMP280_ReadPressure();
 800065e:	f000 fa5b 	bl	8000b18 <BMP280_ReadPressure>
 8000662:	61b8      	str	r0, [r7, #24]

    // Vérifiez la commande et construisez la réponse sans afficher la commande
    if (strcmp(buffer, "GET_T") == 0) {
 8000664:	491d      	ldr	r1, [pc, #116]	@ (80006dc <PI_GetCommand+0xa0>)
 8000666:	6878      	ldr	r0, [r7, #4]
 8000668:	f7ff fdd2 	bl	8000210 <strcmp>
 800066c:	4603      	mov	r3, r0
 800066e:	2b00      	cmp	r3, #0
 8000670:	d10d      	bne.n	800068e <PI_GetCommand+0x52>
        int size = snprintf(printfBuffer, BUFFER_SIZE, "La temperature est : %lu °c\r\n", temperature);
 8000672:	69fb      	ldr	r3, [r7, #28]
 8000674:	4a1a      	ldr	r2, [pc, #104]	@ (80006e0 <PI_GetCommand+0xa4>)
 8000676:	2164      	movs	r1, #100	@ 0x64
 8000678:	481a      	ldr	r0, [pc, #104]	@ (80006e4 <PI_GetCommand+0xa8>)
 800067a:	f003 ffaf 	bl	80045dc <sniprintf>
 800067e:	60f8      	str	r0, [r7, #12]
        uart_write(printfBuffer, size);
 8000680:	68fb      	ldr	r3, [r7, #12]
 8000682:	b29b      	uxth	r3, r3
 8000684:	4619      	mov	r1, r3
 8000686:	4817      	ldr	r0, [pc, #92]	@ (80006e4 <PI_GetCommand+0xa8>)
 8000688:	f7ff ffac 	bl	80005e4 <uart_write>
        uart_write(printfBuffer, size);
    } else {
        int size = snprintf(printfBuffer, BUFFER_SIZE, "\r\nCommande inconnue\r\n");
        uart_write(printfBuffer, size);
    }
}
 800068c:	e020      	b.n	80006d0 <PI_GetCommand+0x94>
    } else if (strcmp(buffer, "GET_P") == 0) {
 800068e:	4916      	ldr	r1, [pc, #88]	@ (80006e8 <PI_GetCommand+0xac>)
 8000690:	6878      	ldr	r0, [r7, #4]
 8000692:	f7ff fdbd 	bl	8000210 <strcmp>
 8000696:	4603      	mov	r3, r0
 8000698:	2b00      	cmp	r3, #0
 800069a:	d10d      	bne.n	80006b8 <PI_GetCommand+0x7c>
        int size = snprintf(printfBuffer, BUFFER_SIZE, "La pression est : %lu Pa\r\n", pression);
 800069c:	69bb      	ldr	r3, [r7, #24]
 800069e:	4a13      	ldr	r2, [pc, #76]	@ (80006ec <PI_GetCommand+0xb0>)
 80006a0:	2164      	movs	r1, #100	@ 0x64
 80006a2:	4810      	ldr	r0, [pc, #64]	@ (80006e4 <PI_GetCommand+0xa8>)
 80006a4:	f003 ff9a 	bl	80045dc <sniprintf>
 80006a8:	6138      	str	r0, [r7, #16]
        uart_write(printfBuffer, size);
 80006aa:	693b      	ldr	r3, [r7, #16]
 80006ac:	b29b      	uxth	r3, r3
 80006ae:	4619      	mov	r1, r3
 80006b0:	480c      	ldr	r0, [pc, #48]	@ (80006e4 <PI_GetCommand+0xa8>)
 80006b2:	f7ff ff97 	bl	80005e4 <uart_write>
}
 80006b6:	e00b      	b.n	80006d0 <PI_GetCommand+0x94>
        int size = snprintf(printfBuffer, BUFFER_SIZE, "\r\nCommande inconnue\r\n");
 80006b8:	4a0d      	ldr	r2, [pc, #52]	@ (80006f0 <PI_GetCommand+0xb4>)
 80006ba:	2164      	movs	r1, #100	@ 0x64
 80006bc:	4809      	ldr	r0, [pc, #36]	@ (80006e4 <PI_GetCommand+0xa8>)
 80006be:	f003 ff8d 	bl	80045dc <sniprintf>
 80006c2:	6178      	str	r0, [r7, #20]
        uart_write(printfBuffer, size);
 80006c4:	697b      	ldr	r3, [r7, #20]
 80006c6:	b29b      	uxth	r3, r3
 80006c8:	4619      	mov	r1, r3
 80006ca:	4806      	ldr	r0, [pc, #24]	@ (80006e4 <PI_GetCommand+0xa8>)
 80006cc:	f7ff ff8a 	bl	80005e4 <uart_write>
}
 80006d0:	bf00      	nop
 80006d2:	3720      	adds	r7, #32
 80006d4:	46bd      	mov	sp, r7
 80006d6:	bd80      	pop	{r7, pc}
 80006d8:	200000f8 	.word	0x200000f8
 80006dc:	080056b0 	.word	0x080056b0
 80006e0:	080056b8 	.word	0x080056b8
 80006e4:	20000094 	.word	0x20000094
 80006e8:	080056d8 	.word	0x080056d8
 80006ec:	080056e0 	.word	0x080056e0
 80006f0:	080056fc 	.word	0x080056fc

080006f4 <PI_RUN>:

// Fonction principale pour gérer les commandes
int PI_RUN(void) {
 80006f4:	b580      	push	{r7, lr}
 80006f6:	b084      	sub	sp, #16
 80006f8:	af00      	add	r7, sp, #0
    int reading = 0;
 80006fa:	2300      	movs	r3, #0
 80006fc:	60fb      	str	r3, [r7, #12]
    int pos = 0;
 80006fe:	2300      	movs	r3, #0
 8000700:	60bb      	str	r3, [r7, #8]
    static char cmd_buffer[BUFFER_SIZE];

    while (1) {
        uart_write("> ", 2);  // Afficher le prompt
 8000702:	2102      	movs	r1, #2
 8000704:	4820      	ldr	r0, [pc, #128]	@ (8000788 <PI_RUN+0x94>)
 8000706:	f7ff ff6d 	bl	80005e4 <uart_write>
        reading = 1;
 800070a:	2301      	movs	r3, #1
 800070c:	60fb      	str	r3, [r7, #12]

        while (reading) {
 800070e:	e034      	b.n	800077a <PI_RUN+0x86>
            char c = uart_read();
 8000710:	f7ff ff56 	bl	80005c0 <uart_read>
 8000714:	4603      	mov	r3, r0
 8000716:	71fb      	strb	r3, [r7, #7]

            switch (c) {
 8000718:	79fb      	ldrb	r3, [r7, #7]
 800071a:	2b0d      	cmp	r3, #13
 800071c:	d002      	beq.n	8000724 <PI_RUN+0x30>
 800071e:	2b7f      	cmp	r3, #127	@ 0x7f
 8000720:	d00e      	beq.n	8000740 <PI_RUN+0x4c>
 8000722:	e018      	b.n	8000756 <PI_RUN+0x62>
                case '\r':   // Touche RETURN
                    uart_write("\n", 2);   // Sauter une ligne après Entrée
 8000724:	2102      	movs	r1, #2
 8000726:	4819      	ldr	r0, [pc, #100]	@ (800078c <PI_RUN+0x98>)
 8000728:	f7ff ff5c 	bl	80005e4 <uart_write>
                    cmd_buffer[pos] = '\0';   // Terminer la chaîne
 800072c:	4a18      	ldr	r2, [pc, #96]	@ (8000790 <PI_RUN+0x9c>)
 800072e:	68bb      	ldr	r3, [r7, #8]
 8000730:	4413      	add	r3, r2
 8000732:	2200      	movs	r2, #0
 8000734:	701a      	strb	r2, [r3, #0]
                    reading = 0;  // Quitter la boucle de lecture pour exécuter la commande
 8000736:	2300      	movs	r3, #0
 8000738:	60fb      	str	r3, [r7, #12]
                    pos = 0;      // Réinitialiser la position du buffer
 800073a:	2300      	movs	r3, #0
 800073c:	60bb      	str	r3, [r7, #8]
                    break;
 800073e:	e01c      	b.n	800077a <PI_RUN+0x86>

                case 127:    // Touche Backspace
                    if (pos > 0) {
 8000740:	68bb      	ldr	r3, [r7, #8]
 8000742:	2b00      	cmp	r3, #0
 8000744:	dd16      	ble.n	8000774 <PI_RUN+0x80>
                        pos--;     // Supprimer le dernier caractère
 8000746:	68bb      	ldr	r3, [r7, #8]
 8000748:	3b01      	subs	r3, #1
 800074a:	60bb      	str	r3, [r7, #8]
                        uart_write("\b \b", 3); // Effacer le caractère sur le terminal
 800074c:	2103      	movs	r1, #3
 800074e:	4811      	ldr	r0, [pc, #68]	@ (8000794 <PI_RUN+0xa0>)
 8000750:	f7ff ff48 	bl	80005e4 <uart_write>
                    }
                    break;
 8000754:	e00e      	b.n	8000774 <PI_RUN+0x80>

                default:    // Autres caractères
                    if (pos < BUFFER_SIZE - 1) {  // Vérifier si le buffer a de l'espace
 8000756:	68bb      	ldr	r3, [r7, #8]
 8000758:	2b62      	cmp	r3, #98	@ 0x62
 800075a:	dc0d      	bgt.n	8000778 <PI_RUN+0x84>
                        uart_write(&c, 1);        // Afficher le caractère
 800075c:	1dfb      	adds	r3, r7, #7
 800075e:	2101      	movs	r1, #1
 8000760:	4618      	mov	r0, r3
 8000762:	f7ff ff3f 	bl	80005e4 <uart_write>
                        cmd_buffer[pos++] = c;    // Stocker le caractère
 8000766:	68bb      	ldr	r3, [r7, #8]
 8000768:	1c5a      	adds	r2, r3, #1
 800076a:	60ba      	str	r2, [r7, #8]
 800076c:	79f9      	ldrb	r1, [r7, #7]
 800076e:	4a08      	ldr	r2, [pc, #32]	@ (8000790 <PI_RUN+0x9c>)
 8000770:	54d1      	strb	r1, [r2, r3]
                    }
                    break;
 8000772:	e001      	b.n	8000778 <PI_RUN+0x84>
                    break;
 8000774:	bf00      	nop
 8000776:	e000      	b.n	800077a <PI_RUN+0x86>
                    break;
 8000778:	bf00      	nop
        while (reading) {
 800077a:	68fb      	ldr	r3, [r7, #12]
 800077c:	2b00      	cmp	r3, #0
 800077e:	d1c7      	bne.n	8000710 <PI_RUN+0x1c>
            }
        }

        // Exécuter la commande après avoir lu toute la ligne
        PI_GetCommand(cmd_buffer);
 8000780:	4803      	ldr	r0, [pc, #12]	@ (8000790 <PI_RUN+0x9c>)
 8000782:	f7ff ff5b 	bl	800063c <PI_GetCommand>
        uart_write("> ", 2);  // Afficher le prompt
 8000786:	e7bc      	b.n	8000702 <PI_RUN+0xe>
 8000788:	08005714 	.word	0x08005714
 800078c:	08005718 	.word	0x08005718
 8000790:	20000104 	.word	0x20000104
 8000794:	0800571c 	.word	0x0800571c

08000798 <BMP280_RegisterWrite>:
static uint8_t BMP280_REG_TEMP = 0xFA;
static uint8_t BMP280_REG_PRESSURE = 0xF7;
static uint8_t calibData[BMP280_CALIB_DAATA_LEN];
static uint32_t t_fine ;

static int BMP280_RegisterWrite(uint8_t reg, uint8_t data) {
 8000798:	b580      	push	{r7, lr}
 800079a:	b086      	sub	sp, #24
 800079c:	af02      	add	r7, sp, #8
 800079e:	4603      	mov	r3, r0
 80007a0:	460a      	mov	r2, r1
 80007a2:	71fb      	strb	r3, [r7, #7]
 80007a4:	4613      	mov	r3, r2
 80007a6:	71bb      	strb	r3, [r7, #6]
    uint8_t buffer[2] = {reg, data};
 80007a8:	79fb      	ldrb	r3, [r7, #7]
 80007aa:	733b      	strb	r3, [r7, #12]
 80007ac:	79bb      	ldrb	r3, [r7, #6]
 80007ae:	737b      	strb	r3, [r7, #13]
    if (HAL_OK == HAL_I2C_Master_Transmit(&hi2c1, BMP280_ADDRESS, buffer, sizeof(buffer), HAL_MAX_DELAY)) {
 80007b0:	4b0a      	ldr	r3, [pc, #40]	@ (80007dc <BMP280_RegisterWrite+0x44>)
 80007b2:	781b      	ldrb	r3, [r3, #0]
 80007b4:	4619      	mov	r1, r3
 80007b6:	f107 020c 	add.w	r2, r7, #12
 80007ba:	f04f 33ff 	mov.w	r3, #4294967295
 80007be:	9300      	str	r3, [sp, #0]
 80007c0:	2302      	movs	r3, #2
 80007c2:	4807      	ldr	r0, [pc, #28]	@ (80007e0 <BMP280_RegisterWrite+0x48>)
 80007c4:	f001 fc48 	bl	8002058 <HAL_I2C_Master_Transmit>
 80007c8:	4603      	mov	r3, r0
 80007ca:	2b00      	cmp	r3, #0
 80007cc:	d101      	bne.n	80007d2 <BMP280_RegisterWrite+0x3a>
        return 0;
 80007ce:	2300      	movs	r3, #0
 80007d0:	e000      	b.n	80007d4 <BMP280_RegisterWrite+0x3c>
    }
    return 1;
 80007d2:	2301      	movs	r3, #1
}
 80007d4:	4618      	mov	r0, r3
 80007d6:	3710      	adds	r7, #16
 80007d8:	46bd      	mov	sp, r7
 80007da:	bd80      	pop	{r7, pc}
 80007dc:	20000000 	.word	0x20000000
 80007e0:	200001ac 	.word	0x200001ac

080007e4 <BMP280_RegisterRead>:

static int BMP280_RegisterRead(uint8_t reg, uint8_t *data) {
 80007e4:	b580      	push	{r7, lr}
 80007e6:	b084      	sub	sp, #16
 80007e8:	af02      	add	r7, sp, #8
 80007ea:	4603      	mov	r3, r0
 80007ec:	6039      	str	r1, [r7, #0]
 80007ee:	71fb      	strb	r3, [r7, #7]
    if (HAL_OK != HAL_I2C_Master_Transmit(&hi2c1, BMP280_ADDRESS, &reg, 1, HAL_MAX_DELAY)) {
 80007f0:	4b12      	ldr	r3, [pc, #72]	@ (800083c <BMP280_RegisterRead+0x58>)
 80007f2:	781b      	ldrb	r3, [r3, #0]
 80007f4:	4619      	mov	r1, r3
 80007f6:	1dfa      	adds	r2, r7, #7
 80007f8:	f04f 33ff 	mov.w	r3, #4294967295
 80007fc:	9300      	str	r3, [sp, #0]
 80007fe:	2301      	movs	r3, #1
 8000800:	480f      	ldr	r0, [pc, #60]	@ (8000840 <BMP280_RegisterRead+0x5c>)
 8000802:	f001 fc29 	bl	8002058 <HAL_I2C_Master_Transmit>
 8000806:	4603      	mov	r3, r0
 8000808:	2b00      	cmp	r3, #0
 800080a:	d001      	beq.n	8000810 <BMP280_RegisterRead+0x2c>
        return 1;
 800080c:	2301      	movs	r3, #1
 800080e:	e010      	b.n	8000832 <BMP280_RegisterRead+0x4e>
    }
    if (HAL_OK != HAL_I2C_Master_Receive(&hi2c1, BMP280_ADDRESS, data, sizeof(data), HAL_MAX_DELAY)) {
 8000810:	4b0a      	ldr	r3, [pc, #40]	@ (800083c <BMP280_RegisterRead+0x58>)
 8000812:	781b      	ldrb	r3, [r3, #0]
 8000814:	4619      	mov	r1, r3
 8000816:	f04f 33ff 	mov.w	r3, #4294967295
 800081a:	9300      	str	r3, [sp, #0]
 800081c:	2304      	movs	r3, #4
 800081e:	683a      	ldr	r2, [r7, #0]
 8000820:	4807      	ldr	r0, [pc, #28]	@ (8000840 <BMP280_RegisterRead+0x5c>)
 8000822:	f001 fd17 	bl	8002254 <HAL_I2C_Master_Receive>
 8000826:	4603      	mov	r3, r0
 8000828:	2b00      	cmp	r3, #0
 800082a:	d001      	beq.n	8000830 <BMP280_RegisterRead+0x4c>
        return 1;
 800082c:	2301      	movs	r3, #1
 800082e:	e000      	b.n	8000832 <BMP280_RegisterRead+0x4e>
    }
    return 0;
 8000830:	2300      	movs	r3, #0
}
 8000832:	4618      	mov	r0, r3
 8000834:	3708      	adds	r7, #8
 8000836:	46bd      	mov	sp, r7
 8000838:	bd80      	pop	{r7, pc}
 800083a:	bf00      	nop
 800083c:	20000000 	.word	0x20000000
 8000840:	200001ac 	.word	0x200001ac

08000844 <BMP280_Init>:

void BMP280_Init(void) {
 8000844:	b580      	push	{r7, lr}
 8000846:	b082      	sub	sp, #8
 8000848:	af00      	add	r7, sp, #0
    uint8_t ConfigValue = 0x57;
 800084a:	2357      	movs	r3, #87	@ 0x57
 800084c:	71fb      	strb	r3, [r7, #7]
    if (1 == BMP280_RegisterWrite(BMP280_REG_CONFIG, ConfigValue)) {
 800084e:	4b0a      	ldr	r3, [pc, #40]	@ (8000878 <BMP280_Init+0x34>)
 8000850:	781b      	ldrb	r3, [r3, #0]
 8000852:	79fa      	ldrb	r2, [r7, #7]
 8000854:	4611      	mov	r1, r2
 8000856:	4618      	mov	r0, r3
 8000858:	f7ff ff9e 	bl	8000798 <BMP280_RegisterWrite>
 800085c:	4603      	mov	r3, r0
 800085e:	2b01      	cmp	r3, #1
 8000860:	d103      	bne.n	800086a <BMP280_Init+0x26>
        printf("Erreur pendant l'écriture de la configuration \r\n");
 8000862:	4806      	ldr	r0, [pc, #24]	@ (800087c <BMP280_Init+0x38>)
 8000864:	f003 feb2 	bl	80045cc <puts>
        return;  // Quitter la fonction après une erreur
 8000868:	e002      	b.n	8000870 <BMP280_Init+0x2c>
    }
    printf("Configuration OK \r\n");
 800086a:	4805      	ldr	r0, [pc, #20]	@ (8000880 <BMP280_Init+0x3c>)
 800086c:	f003 feae 	bl	80045cc <puts>
}
 8000870:	3708      	adds	r7, #8
 8000872:	46bd      	mov	sp, r7
 8000874:	bd80      	pop	{r7, pc}
 8000876:	bf00      	nop
 8000878:	20000003 	.word	0x20000003
 800087c:	08005720 	.word	0x08005720
 8000880:	08005754 	.word	0x08005754

08000884 <BMP280_ReadID>:

void BMP280_ReadID(void) {
 8000884:	b580      	push	{r7, lr}
 8000886:	b082      	sub	sp, #8
 8000888:	af00      	add	r7, sp, #0
    uint8_t idValue;
    if (1 == BMP280_RegisterRead(BMP280_REG_ID, &idValue)) {
 800088a:	4b0f      	ldr	r3, [pc, #60]	@ (80008c8 <BMP280_ReadID+0x44>)
 800088c:	781b      	ldrb	r3, [r3, #0]
 800088e:	1dfa      	adds	r2, r7, #7
 8000890:	4611      	mov	r1, r2
 8000892:	4618      	mov	r0, r3
 8000894:	f7ff ffa6 	bl	80007e4 <BMP280_RegisterRead>
 8000898:	4603      	mov	r3, r0
 800089a:	2b01      	cmp	r3, #1
 800089c:	d103      	bne.n	80008a6 <BMP280_ReadID+0x22>
        printf("Problème de lecture du registre ID \r\n");
 800089e:	480b      	ldr	r0, [pc, #44]	@ (80008cc <BMP280_ReadID+0x48>)
 80008a0:	f003 fe94 	bl	80045cc <puts>
        return;  // Quitter la fonction après une erreur
 80008a4:	e00d      	b.n	80008c2 <BMP280_ReadID+0x3e>
    }
    if (BMP280_ID_Value != idValue) {
 80008a6:	4b0a      	ldr	r3, [pc, #40]	@ (80008d0 <BMP280_ReadID+0x4c>)
 80008a8:	781a      	ldrb	r2, [r3, #0]
 80008aa:	79fb      	ldrb	r3, [r7, #7]
 80008ac:	429a      	cmp	r2, r3
 80008ae:	d003      	beq.n	80008b8 <BMP280_ReadID+0x34>
        printf("La valeur du registre ID n'est pas bonne \r\n");
 80008b0:	4808      	ldr	r0, [pc, #32]	@ (80008d4 <BMP280_ReadID+0x50>)
 80008b2:	f003 fe8b 	bl	80045cc <puts>
        return;  // Quitter la fonction si la valeur n'est pas correcte
 80008b6:	e004      	b.n	80008c2 <BMP280_ReadID+0x3e>
    }
    printf("La valeur lue est : %u\r\n", idValue);
 80008b8:	79fb      	ldrb	r3, [r7, #7]
 80008ba:	4619      	mov	r1, r3
 80008bc:	4806      	ldr	r0, [pc, #24]	@ (80008d8 <BMP280_ReadID+0x54>)
 80008be:	f003 fe1d 	bl	80044fc <iprintf>
}
 80008c2:	3708      	adds	r7, #8
 80008c4:	46bd      	mov	sp, r7
 80008c6:	bd80      	pop	{r7, pc}
 80008c8:	20000001 	.word	0x20000001
 80008cc:	08005768 	.word	0x08005768
 80008d0:	20000002 	.word	0x20000002
 80008d4:	08005790 	.word	0x08005790
 80008d8:	080057bc 	.word	0x080057bc

080008dc <BMP280_ReadCalibrationData>:

void BMP280_ReadCalibrationData(void) {
 80008dc:	b580      	push	{r7, lr}
 80008de:	b082      	sub	sp, #8
 80008e0:	af00      	add	r7, sp, #0
    if (1 == BMP280_RegisterRead(BMP280_REG_CALIB_DATA, calibData)) {
 80008e2:	4b12      	ldr	r3, [pc, #72]	@ (800092c <BMP280_ReadCalibrationData+0x50>)
 80008e4:	781b      	ldrb	r3, [r3, #0]
 80008e6:	4912      	ldr	r1, [pc, #72]	@ (8000930 <BMP280_ReadCalibrationData+0x54>)
 80008e8:	4618      	mov	r0, r3
 80008ea:	f7ff ff7b 	bl	80007e4 <BMP280_RegisterRead>
 80008ee:	4603      	mov	r3, r0
 80008f0:	2b01      	cmp	r3, #1
 80008f2:	d103      	bne.n	80008fc <BMP280_ReadCalibrationData+0x20>
        printf("La lecture de calibration a échoué \r\n");
 80008f4:	480f      	ldr	r0, [pc, #60]	@ (8000934 <BMP280_ReadCalibrationData+0x58>)
 80008f6:	f003 fe69 	bl	80045cc <puts>
        return;  // Quitter la fonction après une erreur
 80008fa:	e014      	b.n	8000926 <BMP280_ReadCalibrationData+0x4a>
    }

    printf("Lecture des données de calibration OK \r\n");
 80008fc:	480e      	ldr	r0, [pc, #56]	@ (8000938 <BMP280_ReadCalibrationData+0x5c>)
 80008fe:	f003 fe65 	bl	80045cc <puts>
    for (int i = 0; i < BMP280_CALIB_DAATA_LEN; i++) {
 8000902:	2300      	movs	r3, #0
 8000904:	607b      	str	r3, [r7, #4]
 8000906:	e00b      	b.n	8000920 <BMP280_ReadCalibrationData+0x44>
        printf("La valeur lue %d est 0x%X \r\n", i, calibData[i]);
 8000908:	4a09      	ldr	r2, [pc, #36]	@ (8000930 <BMP280_ReadCalibrationData+0x54>)
 800090a:	687b      	ldr	r3, [r7, #4]
 800090c:	4413      	add	r3, r2
 800090e:	781b      	ldrb	r3, [r3, #0]
 8000910:	461a      	mov	r2, r3
 8000912:	6879      	ldr	r1, [r7, #4]
 8000914:	4809      	ldr	r0, [pc, #36]	@ (800093c <BMP280_ReadCalibrationData+0x60>)
 8000916:	f003 fdf1 	bl	80044fc <iprintf>
    for (int i = 0; i < BMP280_CALIB_DAATA_LEN; i++) {
 800091a:	687b      	ldr	r3, [r7, #4]
 800091c:	3301      	adds	r3, #1
 800091e:	607b      	str	r3, [r7, #4]
 8000920:	687b      	ldr	r3, [r7, #4]
 8000922:	2b17      	cmp	r3, #23
 8000924:	ddf0      	ble.n	8000908 <BMP280_ReadCalibrationData+0x2c>
    }

}
 8000926:	3708      	adds	r7, #8
 8000928:	46bd      	mov	sp, r7
 800092a:	bd80      	pop	{r7, pc}
 800092c:	20000004 	.word	0x20000004
 8000930:	20000168 	.word	0x20000168
 8000934:	080057d8 	.word	0x080057d8
 8000938:	08005800 	.word	0x08005800
 800093c:	0800582c 	.word	0x0800582c

08000940 <ParameterFill>:

/*----------------------------------------------------------------------------*/
// Remplir les paramétre de calibration
void ParameterFill(BMP280_CompenParameter_t * param)

{
 8000940:	b480      	push	{r7}
 8000942:	b083      	sub	sp, #12
 8000944:	af00      	add	r7, sp, #0
 8000946:	6078      	str	r0, [r7, #4]
    param->dig_T1 = (uint8_t)(calibData[0] | (calibData[1] << 8));
 8000948:	4b45      	ldr	r3, [pc, #276]	@ (8000a60 <ParameterFill+0x120>)
 800094a:	781b      	ldrb	r3, [r3, #0]
 800094c:	b25a      	sxtb	r2, r3
 800094e:	4b44      	ldr	r3, [pc, #272]	@ (8000a60 <ParameterFill+0x120>)
 8000950:	785b      	ldrb	r3, [r3, #1]
 8000952:	021b      	lsls	r3, r3, #8
 8000954:	b25b      	sxtb	r3, r3
 8000956:	4313      	orrs	r3, r2
 8000958:	b25b      	sxtb	r3, r3
 800095a:	b2da      	uxtb	r2, r3
 800095c:	687b      	ldr	r3, [r7, #4]
 800095e:	701a      	strb	r2, [r3, #0]
    param->dig_T2 = (int8_t)(calibData[2] | (calibData[3] << 8));
 8000960:	4b3f      	ldr	r3, [pc, #252]	@ (8000a60 <ParameterFill+0x120>)
 8000962:	789b      	ldrb	r3, [r3, #2]
 8000964:	b25a      	sxtb	r2, r3
 8000966:	4b3e      	ldr	r3, [pc, #248]	@ (8000a60 <ParameterFill+0x120>)
 8000968:	78db      	ldrb	r3, [r3, #3]
 800096a:	021b      	lsls	r3, r3, #8
 800096c:	b25b      	sxtb	r3, r3
 800096e:	4313      	orrs	r3, r2
 8000970:	b25a      	sxtb	r2, r3
 8000972:	687b      	ldr	r3, [r7, #4]
 8000974:	705a      	strb	r2, [r3, #1]
    param->dig_T3 = (int8_t)(calibData[4] | (calibData[5] << 8));
 8000976:	4b3a      	ldr	r3, [pc, #232]	@ (8000a60 <ParameterFill+0x120>)
 8000978:	791b      	ldrb	r3, [r3, #4]
 800097a:	b25a      	sxtb	r2, r3
 800097c:	4b38      	ldr	r3, [pc, #224]	@ (8000a60 <ParameterFill+0x120>)
 800097e:	795b      	ldrb	r3, [r3, #5]
 8000980:	021b      	lsls	r3, r3, #8
 8000982:	b25b      	sxtb	r3, r3
 8000984:	4313      	orrs	r3, r2
 8000986:	b25a      	sxtb	r2, r3
 8000988:	687b      	ldr	r3, [r7, #4]
 800098a:	709a      	strb	r2, [r3, #2]
    
    param->dig_P1 = (uint8_t)(calibData[6] | (calibData[7] << 8));
 800098c:	4b34      	ldr	r3, [pc, #208]	@ (8000a60 <ParameterFill+0x120>)
 800098e:	799b      	ldrb	r3, [r3, #6]
 8000990:	b25a      	sxtb	r2, r3
 8000992:	4b33      	ldr	r3, [pc, #204]	@ (8000a60 <ParameterFill+0x120>)
 8000994:	79db      	ldrb	r3, [r3, #7]
 8000996:	021b      	lsls	r3, r3, #8
 8000998:	b25b      	sxtb	r3, r3
 800099a:	4313      	orrs	r3, r2
 800099c:	b25b      	sxtb	r3, r3
 800099e:	b2da      	uxtb	r2, r3
 80009a0:	687b      	ldr	r3, [r7, #4]
 80009a2:	70da      	strb	r2, [r3, #3]
    param->dig_P2 = (int8_t)(calibData[8] | (calibData[9] << 8));
 80009a4:	4b2e      	ldr	r3, [pc, #184]	@ (8000a60 <ParameterFill+0x120>)
 80009a6:	7a1b      	ldrb	r3, [r3, #8]
 80009a8:	b25a      	sxtb	r2, r3
 80009aa:	4b2d      	ldr	r3, [pc, #180]	@ (8000a60 <ParameterFill+0x120>)
 80009ac:	7a5b      	ldrb	r3, [r3, #9]
 80009ae:	021b      	lsls	r3, r3, #8
 80009b0:	b25b      	sxtb	r3, r3
 80009b2:	4313      	orrs	r3, r2
 80009b4:	b25a      	sxtb	r2, r3
 80009b6:	687b      	ldr	r3, [r7, #4]
 80009b8:	711a      	strb	r2, [r3, #4]
    param->dig_P3 = (int8_t)(calibData[10] | (calibData[11] << 8));
 80009ba:	4b29      	ldr	r3, [pc, #164]	@ (8000a60 <ParameterFill+0x120>)
 80009bc:	7a9b      	ldrb	r3, [r3, #10]
 80009be:	b25a      	sxtb	r2, r3
 80009c0:	4b27      	ldr	r3, [pc, #156]	@ (8000a60 <ParameterFill+0x120>)
 80009c2:	7adb      	ldrb	r3, [r3, #11]
 80009c4:	021b      	lsls	r3, r3, #8
 80009c6:	b25b      	sxtb	r3, r3
 80009c8:	4313      	orrs	r3, r2
 80009ca:	b25a      	sxtb	r2, r3
 80009cc:	687b      	ldr	r3, [r7, #4]
 80009ce:	715a      	strb	r2, [r3, #5]
    param->dig_P4 = (int8_t)(calibData[12] | (calibData[13] << 8));
 80009d0:	4b23      	ldr	r3, [pc, #140]	@ (8000a60 <ParameterFill+0x120>)
 80009d2:	7b1b      	ldrb	r3, [r3, #12]
 80009d4:	b25a      	sxtb	r2, r3
 80009d6:	4b22      	ldr	r3, [pc, #136]	@ (8000a60 <ParameterFill+0x120>)
 80009d8:	7b5b      	ldrb	r3, [r3, #13]
 80009da:	021b      	lsls	r3, r3, #8
 80009dc:	b25b      	sxtb	r3, r3
 80009de:	4313      	orrs	r3, r2
 80009e0:	b25a      	sxtb	r2, r3
 80009e2:	687b      	ldr	r3, [r7, #4]
 80009e4:	719a      	strb	r2, [r3, #6]
    param->dig_P5 = (int8_t)(calibData[14] | (calibData[15] << 8));
 80009e6:	4b1e      	ldr	r3, [pc, #120]	@ (8000a60 <ParameterFill+0x120>)
 80009e8:	7b9b      	ldrb	r3, [r3, #14]
 80009ea:	b25a      	sxtb	r2, r3
 80009ec:	4b1c      	ldr	r3, [pc, #112]	@ (8000a60 <ParameterFill+0x120>)
 80009ee:	7bdb      	ldrb	r3, [r3, #15]
 80009f0:	021b      	lsls	r3, r3, #8
 80009f2:	b25b      	sxtb	r3, r3
 80009f4:	4313      	orrs	r3, r2
 80009f6:	b25a      	sxtb	r2, r3
 80009f8:	687b      	ldr	r3, [r7, #4]
 80009fa:	71da      	strb	r2, [r3, #7]
    param->dig_P6 = (int8_t)(calibData[16] | (calibData[17] << 8));
 80009fc:	4b18      	ldr	r3, [pc, #96]	@ (8000a60 <ParameterFill+0x120>)
 80009fe:	7c1b      	ldrb	r3, [r3, #16]
 8000a00:	b25a      	sxtb	r2, r3
 8000a02:	4b17      	ldr	r3, [pc, #92]	@ (8000a60 <ParameterFill+0x120>)
 8000a04:	7c5b      	ldrb	r3, [r3, #17]
 8000a06:	021b      	lsls	r3, r3, #8
 8000a08:	b25b      	sxtb	r3, r3
 8000a0a:	4313      	orrs	r3, r2
 8000a0c:	b25a      	sxtb	r2, r3
 8000a0e:	687b      	ldr	r3, [r7, #4]
 8000a10:	721a      	strb	r2, [r3, #8]
    param->dig_P7 = (int8_t)(calibData[18] | (calibData[19] << 8));
 8000a12:	4b13      	ldr	r3, [pc, #76]	@ (8000a60 <ParameterFill+0x120>)
 8000a14:	7c9b      	ldrb	r3, [r3, #18]
 8000a16:	b25a      	sxtb	r2, r3
 8000a18:	4b11      	ldr	r3, [pc, #68]	@ (8000a60 <ParameterFill+0x120>)
 8000a1a:	7cdb      	ldrb	r3, [r3, #19]
 8000a1c:	021b      	lsls	r3, r3, #8
 8000a1e:	b25b      	sxtb	r3, r3
 8000a20:	4313      	orrs	r3, r2
 8000a22:	b25a      	sxtb	r2, r3
 8000a24:	687b      	ldr	r3, [r7, #4]
 8000a26:	725a      	strb	r2, [r3, #9]
    param->dig_P8 = (int8_t)(calibData[20] | (calibData[21] << 8));
 8000a28:	4b0d      	ldr	r3, [pc, #52]	@ (8000a60 <ParameterFill+0x120>)
 8000a2a:	7d1b      	ldrb	r3, [r3, #20]
 8000a2c:	b25a      	sxtb	r2, r3
 8000a2e:	4b0c      	ldr	r3, [pc, #48]	@ (8000a60 <ParameterFill+0x120>)
 8000a30:	7d5b      	ldrb	r3, [r3, #21]
 8000a32:	021b      	lsls	r3, r3, #8
 8000a34:	b25b      	sxtb	r3, r3
 8000a36:	4313      	orrs	r3, r2
 8000a38:	b25a      	sxtb	r2, r3
 8000a3a:	687b      	ldr	r3, [r7, #4]
 8000a3c:	729a      	strb	r2, [r3, #10]
    param->dig_P9 = (int8_t)(calibData[22] | (calibData[23] << 8));
 8000a3e:	4b08      	ldr	r3, [pc, #32]	@ (8000a60 <ParameterFill+0x120>)
 8000a40:	7d9b      	ldrb	r3, [r3, #22]
 8000a42:	b25a      	sxtb	r2, r3
 8000a44:	4b06      	ldr	r3, [pc, #24]	@ (8000a60 <ParameterFill+0x120>)
 8000a46:	7ddb      	ldrb	r3, [r3, #23]
 8000a48:	021b      	lsls	r3, r3, #8
 8000a4a:	b25b      	sxtb	r3, r3
 8000a4c:	4313      	orrs	r3, r2
 8000a4e:	b25a      	sxtb	r2, r3
 8000a50:	687b      	ldr	r3, [r7, #4]
 8000a52:	72da      	strb	r2, [r3, #11]
} 
 8000a54:	bf00      	nop
 8000a56:	370c      	adds	r7, #12
 8000a58:	46bd      	mov	sp, r7
 8000a5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a5e:	4770      	bx	lr
 8000a60:	20000168 	.word	0x20000168

08000a64 <BMP280_ReadTemperature>:

/*--------------------------------------------------------------------------------------------*/


uint32_t BMP280_ReadTemperature(void) {
 8000a64:	b580      	push	{r7, lr}
 8000a66:	b082      	sub	sp, #8
 8000a68:	af00      	add	r7, sp, #0
    uint8_t tempData[BMP280_DATA_LEN];
    if (1 == BMP280_RegisterRead(BMP280_REG_TEMP, tempData)) {
 8000a6a:	4b0b      	ldr	r3, [pc, #44]	@ (8000a98 <BMP280_ReadTemperature+0x34>)
 8000a6c:	781b      	ldrb	r3, [r3, #0]
 8000a6e:	1d3a      	adds	r2, r7, #4
 8000a70:	4611      	mov	r1, r2
 8000a72:	4618      	mov	r0, r3
 8000a74:	f7ff feb6 	bl	80007e4 <BMP280_RegisterRead>
 8000a78:	4603      	mov	r3, r0
 8000a7a:	2b01      	cmp	r3, #1
 8000a7c:	d101      	bne.n	8000a82 <BMP280_ReadTemperature+0x1e>
        return 0;  // Quitter la fonction après une erreur
 8000a7e:	2300      	movs	r3, #0
 8000a80:	e006      	b.n	8000a90 <BMP280_ReadTemperature+0x2c>
    }
    return ((uint32_t)tempData[0] << 16) | ((uint32_t)tempData[1] << 8) | (uint32_t)tempData[2];
 8000a82:	793b      	ldrb	r3, [r7, #4]
 8000a84:	041a      	lsls	r2, r3, #16
 8000a86:	797b      	ldrb	r3, [r7, #5]
 8000a88:	021b      	lsls	r3, r3, #8
 8000a8a:	4313      	orrs	r3, r2
 8000a8c:	79ba      	ldrb	r2, [r7, #6]
 8000a8e:	4313      	orrs	r3, r2
}
 8000a90:	4618      	mov	r0, r3
 8000a92:	3708      	adds	r7, #8
 8000a94:	46bd      	mov	sp, r7
 8000a96:	bd80      	pop	{r7, pc}
 8000a98:	20000005 	.word	0x20000005

08000a9c <BMP280_ConvertTemperature>:

uint32_t BMP280_ConvertTemperature(uint32_t rawTemp, BMP280_CompenParameter_t * param) {
 8000a9c:	b480      	push	{r7}
 8000a9e:	b087      	sub	sp, #28
 8000aa0:	af00      	add	r7, sp, #0
 8000aa2:	6078      	str	r0, [r7, #4]
 8000aa4:	6039      	str	r1, [r7, #0]
    int32_t var1, var2, T;

    var1 = ((rawTemp >> 3) - (param->dig_T1 << 1)) * param->dig_T2 >> 11;
 8000aa6:	687b      	ldr	r3, [r7, #4]
 8000aa8:	08da      	lsrs	r2, r3, #3
 8000aaa:	683b      	ldr	r3, [r7, #0]
 8000aac:	781b      	ldrb	r3, [r3, #0]
 8000aae:	005b      	lsls	r3, r3, #1
 8000ab0:	1ad3      	subs	r3, r2, r3
 8000ab2:	683a      	ldr	r2, [r7, #0]
 8000ab4:	f992 2001 	ldrsb.w	r2, [r2, #1]
 8000ab8:	fb02 f303 	mul.w	r3, r2, r3
 8000abc:	0adb      	lsrs	r3, r3, #11
 8000abe:	617b      	str	r3, [r7, #20]
    var2 = ((((rawTemp >> 4) - param->dig_T1) * ((rawTemp >> 4) - param->dig_T1)) >> 12) * param->dig_T3 >> 14;
 8000ac0:	687b      	ldr	r3, [r7, #4]
 8000ac2:	091b      	lsrs	r3, r3, #4
 8000ac4:	683a      	ldr	r2, [r7, #0]
 8000ac6:	7812      	ldrb	r2, [r2, #0]
 8000ac8:	1a9b      	subs	r3, r3, r2
 8000aca:	687a      	ldr	r2, [r7, #4]
 8000acc:	0912      	lsrs	r2, r2, #4
 8000ace:	6839      	ldr	r1, [r7, #0]
 8000ad0:	7809      	ldrb	r1, [r1, #0]
 8000ad2:	1a52      	subs	r2, r2, r1
 8000ad4:	fb02 f303 	mul.w	r3, r2, r3
 8000ad8:	0b1b      	lsrs	r3, r3, #12
 8000ada:	683a      	ldr	r2, [r7, #0]
 8000adc:	f992 2002 	ldrsb.w	r2, [r2, #2]
 8000ae0:	fb02 f303 	mul.w	r3, r2, r3
 8000ae4:	0b9b      	lsrs	r3, r3, #14
 8000ae6:	613b      	str	r3, [r7, #16]
    t_fine = var1 + var2;
 8000ae8:	697a      	ldr	r2, [r7, #20]
 8000aea:	693b      	ldr	r3, [r7, #16]
 8000aec:	4413      	add	r3, r2
 8000aee:	461a      	mov	r2, r3
 8000af0:	4b08      	ldr	r3, [pc, #32]	@ (8000b14 <BMP280_ConvertTemperature+0x78>)
 8000af2:	601a      	str	r2, [r3, #0]
    T = (t_fine * 5 + 128) >> 8;
 8000af4:	4b07      	ldr	r3, [pc, #28]	@ (8000b14 <BMP280_ConvertTemperature+0x78>)
 8000af6:	681a      	ldr	r2, [r3, #0]
 8000af8:	4613      	mov	r3, r2
 8000afa:	009b      	lsls	r3, r3, #2
 8000afc:	4413      	add	r3, r2
 8000afe:	3380      	adds	r3, #128	@ 0x80
 8000b00:	0a1b      	lsrs	r3, r3, #8
 8000b02:	60fb      	str	r3, [r7, #12]
    return T;
 8000b04:	68fb      	ldr	r3, [r7, #12]
}
 8000b06:	4618      	mov	r0, r3
 8000b08:	371c      	adds	r7, #28
 8000b0a:	46bd      	mov	sp, r7
 8000b0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b10:	4770      	bx	lr
 8000b12:	bf00      	nop
 8000b14:	20000180 	.word	0x20000180

08000b18 <BMP280_ReadPressure>:

uint32_t BMP280_ReadPressure(void) {
 8000b18:	b580      	push	{r7, lr}
 8000b1a:	b082      	sub	sp, #8
 8000b1c:	af00      	add	r7, sp, #0
    uint8_t pressureData[3];
    if (1 == BMP280_RegisterRead(BMP280_REG_PRESSURE, pressureData)) {
 8000b1e:	4b0b      	ldr	r3, [pc, #44]	@ (8000b4c <BMP280_ReadPressure+0x34>)
 8000b20:	781b      	ldrb	r3, [r3, #0]
 8000b22:	1d3a      	adds	r2, r7, #4
 8000b24:	4611      	mov	r1, r2
 8000b26:	4618      	mov	r0, r3
 8000b28:	f7ff fe5c 	bl	80007e4 <BMP280_RegisterRead>
 8000b2c:	4603      	mov	r3, r0
 8000b2e:	2b01      	cmp	r3, #1
 8000b30:	d101      	bne.n	8000b36 <BMP280_ReadPressure+0x1e>
        return 1;  // Quitter la fonction après une erreur
 8000b32:	2301      	movs	r3, #1
 8000b34:	e006      	b.n	8000b44 <BMP280_ReadPressure+0x2c>
    }

    return ((uint32_t)pressureData[0] << 16) | ((uint32_t)pressureData[1] << 8) | (uint32_t)pressureData[2];
 8000b36:	793b      	ldrb	r3, [r7, #4]
 8000b38:	041a      	lsls	r2, r3, #16
 8000b3a:	797b      	ldrb	r3, [r7, #5]
 8000b3c:	021b      	lsls	r3, r3, #8
 8000b3e:	4313      	orrs	r3, r2
 8000b40:	79ba      	ldrb	r2, [r7, #6]
 8000b42:	4313      	orrs	r3, r2
}
 8000b44:	4618      	mov	r0, r3
 8000b46:	3708      	adds	r7, #8
 8000b48:	46bd      	mov	sp, r7
 8000b4a:	bd80      	pop	{r7, pc}
 8000b4c:	20000006 	.word	0x20000006

08000b50 <MX_CAN1_Init>:

CAN_HandleTypeDef hcan1;

/* CAN1 init function */
void MX_CAN1_Init(void)
{
 8000b50:	b580      	push	{r7, lr}
 8000b52:	af00      	add	r7, sp, #0
  /* USER CODE END CAN1_Init 0 */

  /* USER CODE BEGIN CAN1_Init 1 */

  /* USER CODE END CAN1_Init 1 */
  hcan1.Instance = CAN1;
 8000b54:	4b17      	ldr	r3, [pc, #92]	@ (8000bb4 <MX_CAN1_Init+0x64>)
 8000b56:	4a18      	ldr	r2, [pc, #96]	@ (8000bb8 <MX_CAN1_Init+0x68>)
 8000b58:	601a      	str	r2, [r3, #0]
  hcan1.Init.Prescaler = 5;
 8000b5a:	4b16      	ldr	r3, [pc, #88]	@ (8000bb4 <MX_CAN1_Init+0x64>)
 8000b5c:	2205      	movs	r2, #5
 8000b5e:	605a      	str	r2, [r3, #4]
  hcan1.Init.Mode = CAN_MODE_NORMAL;
 8000b60:	4b14      	ldr	r3, [pc, #80]	@ (8000bb4 <MX_CAN1_Init+0x64>)
 8000b62:	2200      	movs	r2, #0
 8000b64:	609a      	str	r2, [r3, #8]
  hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 8000b66:	4b13      	ldr	r3, [pc, #76]	@ (8000bb4 <MX_CAN1_Init+0x64>)
 8000b68:	2200      	movs	r2, #0
 8000b6a:	60da      	str	r2, [r3, #12]
  hcan1.Init.TimeSeg1 = CAN_BS1_15TQ;
 8000b6c:	4b11      	ldr	r3, [pc, #68]	@ (8000bb4 <MX_CAN1_Init+0x64>)
 8000b6e:	f44f 2260 	mov.w	r2, #917504	@ 0xe0000
 8000b72:	611a      	str	r2, [r3, #16]
  hcan1.Init.TimeSeg2 = CAN_BS2_2TQ;
 8000b74:	4b0f      	ldr	r3, [pc, #60]	@ (8000bb4 <MX_CAN1_Init+0x64>)
 8000b76:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
 8000b7a:	615a      	str	r2, [r3, #20]
  hcan1.Init.TimeTriggeredMode = DISABLE;
 8000b7c:	4b0d      	ldr	r3, [pc, #52]	@ (8000bb4 <MX_CAN1_Init+0x64>)
 8000b7e:	2200      	movs	r2, #0
 8000b80:	761a      	strb	r2, [r3, #24]
  hcan1.Init.AutoBusOff = DISABLE;
 8000b82:	4b0c      	ldr	r3, [pc, #48]	@ (8000bb4 <MX_CAN1_Init+0x64>)
 8000b84:	2200      	movs	r2, #0
 8000b86:	765a      	strb	r2, [r3, #25]
  hcan1.Init.AutoWakeUp = DISABLE;
 8000b88:	4b0a      	ldr	r3, [pc, #40]	@ (8000bb4 <MX_CAN1_Init+0x64>)
 8000b8a:	2200      	movs	r2, #0
 8000b8c:	769a      	strb	r2, [r3, #26]
  hcan1.Init.AutoRetransmission = DISABLE;
 8000b8e:	4b09      	ldr	r3, [pc, #36]	@ (8000bb4 <MX_CAN1_Init+0x64>)
 8000b90:	2200      	movs	r2, #0
 8000b92:	76da      	strb	r2, [r3, #27]
  hcan1.Init.ReceiveFifoLocked = DISABLE;
 8000b94:	4b07      	ldr	r3, [pc, #28]	@ (8000bb4 <MX_CAN1_Init+0x64>)
 8000b96:	2200      	movs	r2, #0
 8000b98:	771a      	strb	r2, [r3, #28]
  hcan1.Init.TransmitFifoPriority = DISABLE;
 8000b9a:	4b06      	ldr	r3, [pc, #24]	@ (8000bb4 <MX_CAN1_Init+0x64>)
 8000b9c:	2200      	movs	r2, #0
 8000b9e:	775a      	strb	r2, [r3, #29]
  if (HAL_CAN_Init(&hcan1) != HAL_OK)
 8000ba0:	4804      	ldr	r0, [pc, #16]	@ (8000bb4 <MX_CAN1_Init+0x64>)
 8000ba2:	f000 fc8b 	bl	80014bc <HAL_CAN_Init>
 8000ba6:	4603      	mov	r3, r0
 8000ba8:	2b00      	cmp	r3, #0
 8000baa:	d001      	beq.n	8000bb0 <MX_CAN1_Init+0x60>
  {
    Error_Handler();
 8000bac:	f000 f9e2 	bl	8000f74 <Error_Handler>
  }
  /* USER CODE BEGIN CAN1_Init 2 */

  /* USER CODE END CAN1_Init 2 */

}
 8000bb0:	bf00      	nop
 8000bb2:	bd80      	pop	{r7, pc}
 8000bb4:	20000184 	.word	0x20000184
 8000bb8:	40006400 	.word	0x40006400

08000bbc <HAL_CAN_MspInit>:

void HAL_CAN_MspInit(CAN_HandleTypeDef* canHandle)
{
 8000bbc:	b580      	push	{r7, lr}
 8000bbe:	b08a      	sub	sp, #40	@ 0x28
 8000bc0:	af00      	add	r7, sp, #0
 8000bc2:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000bc4:	f107 0314 	add.w	r3, r7, #20
 8000bc8:	2200      	movs	r2, #0
 8000bca:	601a      	str	r2, [r3, #0]
 8000bcc:	605a      	str	r2, [r3, #4]
 8000bce:	609a      	str	r2, [r3, #8]
 8000bd0:	60da      	str	r2, [r3, #12]
 8000bd2:	611a      	str	r2, [r3, #16]
  if(canHandle->Instance==CAN1)
 8000bd4:	687b      	ldr	r3, [r7, #4]
 8000bd6:	681b      	ldr	r3, [r3, #0]
 8000bd8:	4a19      	ldr	r2, [pc, #100]	@ (8000c40 <HAL_CAN_MspInit+0x84>)
 8000bda:	4293      	cmp	r3, r2
 8000bdc:	d12c      	bne.n	8000c38 <HAL_CAN_MspInit+0x7c>
  {
  /* USER CODE BEGIN CAN1_MspInit 0 */

  /* USER CODE END CAN1_MspInit 0 */
    /* CAN1 clock enable */
    __HAL_RCC_CAN1_CLK_ENABLE();
 8000bde:	2300      	movs	r3, #0
 8000be0:	613b      	str	r3, [r7, #16]
 8000be2:	4b18      	ldr	r3, [pc, #96]	@ (8000c44 <HAL_CAN_MspInit+0x88>)
 8000be4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000be6:	4a17      	ldr	r2, [pc, #92]	@ (8000c44 <HAL_CAN_MspInit+0x88>)
 8000be8:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8000bec:	6413      	str	r3, [r2, #64]	@ 0x40
 8000bee:	4b15      	ldr	r3, [pc, #84]	@ (8000c44 <HAL_CAN_MspInit+0x88>)
 8000bf0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000bf2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8000bf6:	613b      	str	r3, [r7, #16]
 8000bf8:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000bfa:	2300      	movs	r3, #0
 8000bfc:	60fb      	str	r3, [r7, #12]
 8000bfe:	4b11      	ldr	r3, [pc, #68]	@ (8000c44 <HAL_CAN_MspInit+0x88>)
 8000c00:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000c02:	4a10      	ldr	r2, [pc, #64]	@ (8000c44 <HAL_CAN_MspInit+0x88>)
 8000c04:	f043 0302 	orr.w	r3, r3, #2
 8000c08:	6313      	str	r3, [r2, #48]	@ 0x30
 8000c0a:	4b0e      	ldr	r3, [pc, #56]	@ (8000c44 <HAL_CAN_MspInit+0x88>)
 8000c0c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000c0e:	f003 0302 	and.w	r3, r3, #2
 8000c12:	60fb      	str	r3, [r7, #12]
 8000c14:	68fb      	ldr	r3, [r7, #12]
    /**CAN1 GPIO Configuration
    PB8     ------> CAN1_RX
    PB9     ------> CAN1_TX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8000c16:	f44f 7340 	mov.w	r3, #768	@ 0x300
 8000c1a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000c1c:	2302      	movs	r3, #2
 8000c1e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c20:	2300      	movs	r3, #0
 8000c22:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c24:	2303      	movs	r3, #3
 8000c26:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_CAN1;
 8000c28:	2309      	movs	r3, #9
 8000c2a:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000c2c:	f107 0314 	add.w	r3, r7, #20
 8000c30:	4619      	mov	r1, r3
 8000c32:	4805      	ldr	r0, [pc, #20]	@ (8000c48 <HAL_CAN_MspInit+0x8c>)
 8000c34:	f000 ff38 	bl	8001aa8 <HAL_GPIO_Init>

  /* USER CODE BEGIN CAN1_MspInit 1 */

  /* USER CODE END CAN1_MspInit 1 */
  }
}
 8000c38:	bf00      	nop
 8000c3a:	3728      	adds	r7, #40	@ 0x28
 8000c3c:	46bd      	mov	sp, r7
 8000c3e:	bd80      	pop	{r7, pc}
 8000c40:	40006400 	.word	0x40006400
 8000c44:	40023800 	.word	0x40023800
 8000c48:	40020400 	.word	0x40020400

08000c4c <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 8000c4c:	b480      	push	{r7}
 8000c4e:	b085      	sub	sp, #20
 8000c50:	af00      	add	r7, sp, #0

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000c52:	2300      	movs	r3, #0
 8000c54:	60fb      	str	r3, [r7, #12]
 8000c56:	4b1e      	ldr	r3, [pc, #120]	@ (8000cd0 <MX_GPIO_Init+0x84>)
 8000c58:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000c5a:	4a1d      	ldr	r2, [pc, #116]	@ (8000cd0 <MX_GPIO_Init+0x84>)
 8000c5c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000c60:	6313      	str	r3, [r2, #48]	@ 0x30
 8000c62:	4b1b      	ldr	r3, [pc, #108]	@ (8000cd0 <MX_GPIO_Init+0x84>)
 8000c64:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000c66:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000c6a:	60fb      	str	r3, [r7, #12]
 8000c6c:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000c6e:	2300      	movs	r3, #0
 8000c70:	60bb      	str	r3, [r7, #8]
 8000c72:	4b17      	ldr	r3, [pc, #92]	@ (8000cd0 <MX_GPIO_Init+0x84>)
 8000c74:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000c76:	4a16      	ldr	r2, [pc, #88]	@ (8000cd0 <MX_GPIO_Init+0x84>)
 8000c78:	f043 0301 	orr.w	r3, r3, #1
 8000c7c:	6313      	str	r3, [r2, #48]	@ 0x30
 8000c7e:	4b14      	ldr	r3, [pc, #80]	@ (8000cd0 <MX_GPIO_Init+0x84>)
 8000c80:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000c82:	f003 0301 	and.w	r3, r3, #1
 8000c86:	60bb      	str	r3, [r7, #8]
 8000c88:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000c8a:	2300      	movs	r3, #0
 8000c8c:	607b      	str	r3, [r7, #4]
 8000c8e:	4b10      	ldr	r3, [pc, #64]	@ (8000cd0 <MX_GPIO_Init+0x84>)
 8000c90:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000c92:	4a0f      	ldr	r2, [pc, #60]	@ (8000cd0 <MX_GPIO_Init+0x84>)
 8000c94:	f043 0304 	orr.w	r3, r3, #4
 8000c98:	6313      	str	r3, [r2, #48]	@ 0x30
 8000c9a:	4b0d      	ldr	r3, [pc, #52]	@ (8000cd0 <MX_GPIO_Init+0x84>)
 8000c9c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000c9e:	f003 0304 	and.w	r3, r3, #4
 8000ca2:	607b      	str	r3, [r7, #4]
 8000ca4:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000ca6:	2300      	movs	r3, #0
 8000ca8:	603b      	str	r3, [r7, #0]
 8000caa:	4b09      	ldr	r3, [pc, #36]	@ (8000cd0 <MX_GPIO_Init+0x84>)
 8000cac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000cae:	4a08      	ldr	r2, [pc, #32]	@ (8000cd0 <MX_GPIO_Init+0x84>)
 8000cb0:	f043 0302 	orr.w	r3, r3, #2
 8000cb4:	6313      	str	r3, [r2, #48]	@ 0x30
 8000cb6:	4b06      	ldr	r3, [pc, #24]	@ (8000cd0 <MX_GPIO_Init+0x84>)
 8000cb8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000cba:	f003 0302 	and.w	r3, r3, #2
 8000cbe:	603b      	str	r3, [r7, #0]
 8000cc0:	683b      	ldr	r3, [r7, #0]

}
 8000cc2:	bf00      	nop
 8000cc4:	3714      	adds	r7, #20
 8000cc6:	46bd      	mov	sp, r7
 8000cc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ccc:	4770      	bx	lr
 8000cce:	bf00      	nop
 8000cd0:	40023800 	.word	0x40023800

08000cd4 <MX_I2C1_Init>:

I2C_HandleTypeDef hi2c1;

/* I2C1 init function */
void MX_I2C1_Init(void)
{
 8000cd4:	b580      	push	{r7, lr}
 8000cd6:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8000cd8:	4b12      	ldr	r3, [pc, #72]	@ (8000d24 <MX_I2C1_Init+0x50>)
 8000cda:	4a13      	ldr	r2, [pc, #76]	@ (8000d28 <MX_I2C1_Init+0x54>)
 8000cdc:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 8000cde:	4b11      	ldr	r3, [pc, #68]	@ (8000d24 <MX_I2C1_Init+0x50>)
 8000ce0:	4a12      	ldr	r2, [pc, #72]	@ (8000d2c <MX_I2C1_Init+0x58>)
 8000ce2:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8000ce4:	4b0f      	ldr	r3, [pc, #60]	@ (8000d24 <MX_I2C1_Init+0x50>)
 8000ce6:	2200      	movs	r2, #0
 8000ce8:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 8000cea:	4b0e      	ldr	r3, [pc, #56]	@ (8000d24 <MX_I2C1_Init+0x50>)
 8000cec:	2200      	movs	r2, #0
 8000cee:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000cf0:	4b0c      	ldr	r3, [pc, #48]	@ (8000d24 <MX_I2C1_Init+0x50>)
 8000cf2:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8000cf6:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000cf8:	4b0a      	ldr	r3, [pc, #40]	@ (8000d24 <MX_I2C1_Init+0x50>)
 8000cfa:	2200      	movs	r2, #0
 8000cfc:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 8000cfe:	4b09      	ldr	r3, [pc, #36]	@ (8000d24 <MX_I2C1_Init+0x50>)
 8000d00:	2200      	movs	r2, #0
 8000d02:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000d04:	4b07      	ldr	r3, [pc, #28]	@ (8000d24 <MX_I2C1_Init+0x50>)
 8000d06:	2200      	movs	r2, #0
 8000d08:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000d0a:	4b06      	ldr	r3, [pc, #24]	@ (8000d24 <MX_I2C1_Init+0x50>)
 8000d0c:	2200      	movs	r2, #0
 8000d0e:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8000d10:	4804      	ldr	r0, [pc, #16]	@ (8000d24 <MX_I2C1_Init+0x50>)
 8000d12:	f001 f85d 	bl	8001dd0 <HAL_I2C_Init>
 8000d16:	4603      	mov	r3, r0
 8000d18:	2b00      	cmp	r3, #0
 8000d1a:	d001      	beq.n	8000d20 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 8000d1c:	f000 f92a 	bl	8000f74 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8000d20:	bf00      	nop
 8000d22:	bd80      	pop	{r7, pc}
 8000d24:	200001ac 	.word	0x200001ac
 8000d28:	40005400 	.word	0x40005400
 8000d2c:	000186a0 	.word	0x000186a0

08000d30 <HAL_I2C_MspInit>:

void HAL_I2C_MspInit(I2C_HandleTypeDef* i2cHandle)
{
 8000d30:	b580      	push	{r7, lr}
 8000d32:	b08a      	sub	sp, #40	@ 0x28
 8000d34:	af00      	add	r7, sp, #0
 8000d36:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000d38:	f107 0314 	add.w	r3, r7, #20
 8000d3c:	2200      	movs	r2, #0
 8000d3e:	601a      	str	r2, [r3, #0]
 8000d40:	605a      	str	r2, [r3, #4]
 8000d42:	609a      	str	r2, [r3, #8]
 8000d44:	60da      	str	r2, [r3, #12]
 8000d46:	611a      	str	r2, [r3, #16]
  if(i2cHandle->Instance==I2C1)
 8000d48:	687b      	ldr	r3, [r7, #4]
 8000d4a:	681b      	ldr	r3, [r3, #0]
 8000d4c:	4a19      	ldr	r2, [pc, #100]	@ (8000db4 <HAL_I2C_MspInit+0x84>)
 8000d4e:	4293      	cmp	r3, r2
 8000d50:	d12b      	bne.n	8000daa <HAL_I2C_MspInit+0x7a>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000d52:	2300      	movs	r3, #0
 8000d54:	613b      	str	r3, [r7, #16]
 8000d56:	4b18      	ldr	r3, [pc, #96]	@ (8000db8 <HAL_I2C_MspInit+0x88>)
 8000d58:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000d5a:	4a17      	ldr	r2, [pc, #92]	@ (8000db8 <HAL_I2C_MspInit+0x88>)
 8000d5c:	f043 0302 	orr.w	r3, r3, #2
 8000d60:	6313      	str	r3, [r2, #48]	@ 0x30
 8000d62:	4b15      	ldr	r3, [pc, #84]	@ (8000db8 <HAL_I2C_MspInit+0x88>)
 8000d64:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000d66:	f003 0302 	and.w	r3, r3, #2
 8000d6a:	613b      	str	r3, [r7, #16]
 8000d6c:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8000d6e:	23c0      	movs	r3, #192	@ 0xc0
 8000d70:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000d72:	2312      	movs	r3, #18
 8000d74:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d76:	2300      	movs	r3, #0
 8000d78:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000d7a:	2303      	movs	r3, #3
 8000d7c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8000d7e:	2304      	movs	r3, #4
 8000d80:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000d82:	f107 0314 	add.w	r3, r7, #20
 8000d86:	4619      	mov	r1, r3
 8000d88:	480c      	ldr	r0, [pc, #48]	@ (8000dbc <HAL_I2C_MspInit+0x8c>)
 8000d8a:	f000 fe8d 	bl	8001aa8 <HAL_GPIO_Init>

    /* I2C1 clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8000d8e:	2300      	movs	r3, #0
 8000d90:	60fb      	str	r3, [r7, #12]
 8000d92:	4b09      	ldr	r3, [pc, #36]	@ (8000db8 <HAL_I2C_MspInit+0x88>)
 8000d94:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000d96:	4a08      	ldr	r2, [pc, #32]	@ (8000db8 <HAL_I2C_MspInit+0x88>)
 8000d98:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8000d9c:	6413      	str	r3, [r2, #64]	@ 0x40
 8000d9e:	4b06      	ldr	r3, [pc, #24]	@ (8000db8 <HAL_I2C_MspInit+0x88>)
 8000da0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000da2:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8000da6:	60fb      	str	r3, [r7, #12]
 8000da8:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }
}
 8000daa:	bf00      	nop
 8000dac:	3728      	adds	r7, #40	@ 0x28
 8000dae:	46bd      	mov	sp, r7
 8000db0:	bd80      	pop	{r7, pc}
 8000db2:	bf00      	nop
 8000db4:	40005400 	.word	0x40005400
 8000db8:	40023800 	.word	0x40023800
 8000dbc:	40020400 	.word	0x40020400

08000dc0 <__io_putchar>:

/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
int __io_putchar(int chr){
 8000dc0:	b580      	push	{r7, lr}
 8000dc2:	b082      	sub	sp, #8
 8000dc4:	af00      	add	r7, sp, #0
 8000dc6:	6078      	str	r0, [r7, #4]

	//HAL_UART_Transmit(&huart3, (uint8_t*)&chr,1, HAL_MAX_DELAY);
	HAL_UART_Transmit(&huart2, (uint8_t*)&chr,1, HAL_MAX_DELAY);
 8000dc8:	1d39      	adds	r1, r7, #4
 8000dca:	f04f 33ff 	mov.w	r3, #4294967295
 8000dce:	2201      	movs	r2, #1
 8000dd0:	4803      	ldr	r0, [pc, #12]	@ (8000de0 <__io_putchar+0x20>)
 8000dd2:	f002 fe7f 	bl	8003ad4 <HAL_UART_Transmit>
	return chr;
 8000dd6:	687b      	ldr	r3, [r7, #4]
}
 8000dd8:	4618      	mov	r0, r3
 8000dda:	3708      	adds	r7, #8
 8000ddc:	46bd      	mov	sp, r7
 8000dde:	bd80      	pop	{r7, pc}
 8000de0:	20000220 	.word	0x20000220

08000de4 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000de4:	b580      	push	{r7, lr}
 8000de6:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000de8:	f000 fad2 	bl	8001390 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000dec:	f000 f850 	bl	8000e90 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000df0:	f7ff ff2c 	bl	8000c4c <MX_GPIO_Init>
  MX_USART2_UART_Init();
 8000df4:	f000 f9d0 	bl	8001198 <MX_USART2_UART_Init>
  MX_I2C1_Init();
 8000df8:	f7ff ff6c 	bl	8000cd4 <MX_I2C1_Init>
  MX_CAN1_Init();
 8000dfc:	f7ff fea8 	bl	8000b50 <MX_CAN1_Init>
  MX_USART3_UART_Init();
 8000e00:	f000 f9f4 	bl	80011ec <MX_USART3_UART_Init>
  /* USER CODE BEGIN 2 */
	printf("=============TP BUS & RESEAUX ===========\r\n") ;
 8000e04:	481b      	ldr	r0, [pc, #108]	@ (8000e74 <main+0x90>)
 8000e06:	f003 fbe1 	bl	80045cc <puts>
	BMP280_Init() ;
 8000e0a:	f7ff fd1b 	bl	8000844 <BMP280_Init>
	BMP280_ReadID() ;
 8000e0e:	f7ff fd39 	bl	8000884 <BMP280_ReadID>
	BMP280_ReadCalibrationData();
 8000e12:	f7ff fd63 	bl	80008dc <BMP280_ReadCalibrationData>
	PI_Init();
 8000e16:	f7ff fbf9 	bl	800060c <PI_Init>
	PI_RUN();
 8000e1a:	f7ff fc6b 	bl	80006f4 <PI_RUN>

	pHeader.IDE = CAN_ID_STD;
 8000e1e:	4b16      	ldr	r3, [pc, #88]	@ (8000e78 <main+0x94>)
 8000e20:	2200      	movs	r2, #0
 8000e22:	609a      	str	r2, [r3, #8]
	pHeader.StdId = AngleID;
 8000e24:	4b14      	ldr	r3, [pc, #80]	@ (8000e78 <main+0x94>)
 8000e26:	2261      	movs	r2, #97	@ 0x61
 8000e28:	601a      	str	r2, [r3, #0]
	pHeader.RTR = CAN_RTR_DATA;
 8000e2a:	4b13      	ldr	r3, [pc, #76]	@ (8000e78 <main+0x94>)
 8000e2c:	2200      	movs	r2, #0
 8000e2e:	60da      	str	r2, [r3, #12]
	pHeader.DLC = 2;
 8000e30:	4b11      	ldr	r3, [pc, #68]	@ (8000e78 <main+0x94>)
 8000e32:	2202      	movs	r2, #2
 8000e34:	611a      	str	r2, [r3, #16]
	HAL_CAN_Start(&hcan1) ;
 8000e36:	4811      	ldr	r0, [pc, #68]	@ (8000e7c <main+0x98>)
 8000e38:	f000 fc3b 	bl	80016b2 <HAL_CAN_Start>
		//HAL_Delay(1000);
		//HAL_UART_Receive(&huart3, (uint8_t*)&c,sizeof(c), HAL_MAX_DELAY);
		//HAL_Delay(1000) ;
		//printf("\r\n La valeur recue est : %s \r\n",c) ;
		//HAL_Delay(1000) ;
	if(HAL_OK != HAL_CAN_AddTxMessage(&hcan1, &pHeader,Angle90p, &pTxMailbox)){
 8000e3c:	4b10      	ldr	r3, [pc, #64]	@ (8000e80 <main+0x9c>)
 8000e3e:	4a11      	ldr	r2, [pc, #68]	@ (8000e84 <main+0xa0>)
 8000e40:	490d      	ldr	r1, [pc, #52]	@ (8000e78 <main+0x94>)
 8000e42:	480e      	ldr	r0, [pc, #56]	@ (8000e7c <main+0x98>)
 8000e44:	f000 fc79 	bl	800173a <HAL_CAN_AddTxMessage>
 8000e48:	4603      	mov	r3, r0
 8000e4a:	2b00      	cmp	r3, #0
 8000e4c:	d002      	beq.n	8000e54 <main+0x70>
		printf("ok can transmis \r\n");
 8000e4e:	480e      	ldr	r0, [pc, #56]	@ (8000e88 <main+0xa4>)
 8000e50:	f003 fbbc 	bl	80045cc <puts>
	}
	HAL_Delay(1000) ;
 8000e54:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8000e58:	f000 fb0c 	bl	8001474 <HAL_Delay>
	HAL_CAN_AddTxMessage(&hcan1, &pHeader,Angle90m, &pTxMailbox);
 8000e5c:	4b08      	ldr	r3, [pc, #32]	@ (8000e80 <main+0x9c>)
 8000e5e:	4a0b      	ldr	r2, [pc, #44]	@ (8000e8c <main+0xa8>)
 8000e60:	4905      	ldr	r1, [pc, #20]	@ (8000e78 <main+0x94>)
 8000e62:	4806      	ldr	r0, [pc, #24]	@ (8000e7c <main+0x98>)
 8000e64:	f000 fc69 	bl	800173a <HAL_CAN_AddTxMessage>
	HAL_Delay(1000) ;
 8000e68:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8000e6c:	f000 fb02 	bl	8001474 <HAL_Delay>
	if(HAL_OK != HAL_CAN_AddTxMessage(&hcan1, &pHeader,Angle90p, &pTxMailbox)){
 8000e70:	e7e4      	b.n	8000e3c <main+0x58>
 8000e72:	bf00      	nop
 8000e74:	0800584c 	.word	0x0800584c
 8000e78:	20000200 	.word	0x20000200
 8000e7c:	20000184 	.word	0x20000184
 8000e80:	20000218 	.word	0x20000218
 8000e84:	20000008 	.word	0x20000008
 8000e88:	08005878 	.word	0x08005878
 8000e8c:	2000000c 	.word	0x2000000c

08000e90 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000e90:	b580      	push	{r7, lr}
 8000e92:	b094      	sub	sp, #80	@ 0x50
 8000e94:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000e96:	f107 031c 	add.w	r3, r7, #28
 8000e9a:	2234      	movs	r2, #52	@ 0x34
 8000e9c:	2100      	movs	r1, #0
 8000e9e:	4618      	mov	r0, r3
 8000ea0:	f003 fca8 	bl	80047f4 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000ea4:	f107 0308 	add.w	r3, r7, #8
 8000ea8:	2200      	movs	r2, #0
 8000eaa:	601a      	str	r2, [r3, #0]
 8000eac:	605a      	str	r2, [r3, #4]
 8000eae:	609a      	str	r2, [r3, #8]
 8000eb0:	60da      	str	r2, [r3, #12]
 8000eb2:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8000eb4:	2300      	movs	r3, #0
 8000eb6:	607b      	str	r3, [r7, #4]
 8000eb8:	4b2c      	ldr	r3, [pc, #176]	@ (8000f6c <SystemClock_Config+0xdc>)
 8000eba:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000ebc:	4a2b      	ldr	r2, [pc, #172]	@ (8000f6c <SystemClock_Config+0xdc>)
 8000ebe:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000ec2:	6413      	str	r3, [r2, #64]	@ 0x40
 8000ec4:	4b29      	ldr	r3, [pc, #164]	@ (8000f6c <SystemClock_Config+0xdc>)
 8000ec6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000ec8:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000ecc:	607b      	str	r3, [r7, #4]
 8000ece:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000ed0:	2300      	movs	r3, #0
 8000ed2:	603b      	str	r3, [r7, #0]
 8000ed4:	4b26      	ldr	r3, [pc, #152]	@ (8000f70 <SystemClock_Config+0xe0>)
 8000ed6:	681b      	ldr	r3, [r3, #0]
 8000ed8:	4a25      	ldr	r2, [pc, #148]	@ (8000f70 <SystemClock_Config+0xe0>)
 8000eda:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8000ede:	6013      	str	r3, [r2, #0]
 8000ee0:	4b23      	ldr	r3, [pc, #140]	@ (8000f70 <SystemClock_Config+0xe0>)
 8000ee2:	681b      	ldr	r3, [r3, #0]
 8000ee4:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8000ee8:	603b      	str	r3, [r7, #0]
 8000eea:	683b      	ldr	r3, [r7, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000eec:	2301      	movs	r3, #1
 8000eee:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000ef0:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8000ef4:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000ef6:	2302      	movs	r3, #2
 8000ef8:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000efa:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 8000efe:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLM = 4;
 8000f00:	2304      	movs	r3, #4
 8000f02:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLN = 180;
 8000f04:	23b4      	movs	r3, #180	@ 0xb4
 8000f06:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000f08:	2302      	movs	r3, #2
 8000f0a:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLQ = 2;
 8000f0c:	2302      	movs	r3, #2
 8000f0e:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 8000f10:	2302      	movs	r3, #2
 8000f12:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000f14:	f107 031c 	add.w	r3, r7, #28
 8000f18:	4618      	mov	r0, r3
 8000f1a:	f002 faed 	bl	80034f8 <HAL_RCC_OscConfig>
 8000f1e:	4603      	mov	r3, r0
 8000f20:	2b00      	cmp	r3, #0
 8000f22:	d001      	beq.n	8000f28 <SystemClock_Config+0x98>
  {
    Error_Handler();
 8000f24:	f000 f826 	bl	8000f74 <Error_Handler>
  }

  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8000f28:	f001 ff4c 	bl	8002dc4 <HAL_PWREx_EnableOverDrive>
 8000f2c:	4603      	mov	r3, r0
 8000f2e:	2b00      	cmp	r3, #0
 8000f30:	d001      	beq.n	8000f36 <SystemClock_Config+0xa6>
  {
    Error_Handler();
 8000f32:	f000 f81f 	bl	8000f74 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000f36:	230f      	movs	r3, #15
 8000f38:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000f3a:	2302      	movs	r3, #2
 8000f3c:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000f3e:	2300      	movs	r3, #0
 8000f40:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000f42:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 8000f46:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000f48:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000f4c:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000f4e:	f107 0308 	add.w	r3, r7, #8
 8000f52:	2105      	movs	r1, #5
 8000f54:	4618      	mov	r0, r3
 8000f56:	f001 ff85 	bl	8002e64 <HAL_RCC_ClockConfig>
 8000f5a:	4603      	mov	r3, r0
 8000f5c:	2b00      	cmp	r3, #0
 8000f5e:	d001      	beq.n	8000f64 <SystemClock_Config+0xd4>
  {
    Error_Handler();
 8000f60:	f000 f808 	bl	8000f74 <Error_Handler>
  }
}
 8000f64:	bf00      	nop
 8000f66:	3750      	adds	r7, #80	@ 0x50
 8000f68:	46bd      	mov	sp, r7
 8000f6a:	bd80      	pop	{r7, pc}
 8000f6c:	40023800 	.word	0x40023800
 8000f70:	40007000 	.word	0x40007000

08000f74 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000f74:	b480      	push	{r7}
 8000f76:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000f78:	b672      	cpsid	i
}
 8000f7a:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1)
 8000f7c:	bf00      	nop
 8000f7e:	e7fd      	b.n	8000f7c <Error_Handler+0x8>

08000f80 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000f80:	b580      	push	{r7, lr}
 8000f82:	b082      	sub	sp, #8
 8000f84:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000f86:	2300      	movs	r3, #0
 8000f88:	607b      	str	r3, [r7, #4]
 8000f8a:	4b10      	ldr	r3, [pc, #64]	@ (8000fcc <HAL_MspInit+0x4c>)
 8000f8c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000f8e:	4a0f      	ldr	r2, [pc, #60]	@ (8000fcc <HAL_MspInit+0x4c>)
 8000f90:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000f94:	6453      	str	r3, [r2, #68]	@ 0x44
 8000f96:	4b0d      	ldr	r3, [pc, #52]	@ (8000fcc <HAL_MspInit+0x4c>)
 8000f98:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000f9a:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8000f9e:	607b      	str	r3, [r7, #4]
 8000fa0:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000fa2:	2300      	movs	r3, #0
 8000fa4:	603b      	str	r3, [r7, #0]
 8000fa6:	4b09      	ldr	r3, [pc, #36]	@ (8000fcc <HAL_MspInit+0x4c>)
 8000fa8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000faa:	4a08      	ldr	r2, [pc, #32]	@ (8000fcc <HAL_MspInit+0x4c>)
 8000fac:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000fb0:	6413      	str	r3, [r2, #64]	@ 0x40
 8000fb2:	4b06      	ldr	r3, [pc, #24]	@ (8000fcc <HAL_MspInit+0x4c>)
 8000fb4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000fb6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000fba:	603b      	str	r3, [r7, #0]
 8000fbc:	683b      	ldr	r3, [r7, #0]

  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_0);
 8000fbe:	2007      	movs	r0, #7
 8000fc0:	f000 fd3e 	bl	8001a40 <HAL_NVIC_SetPriorityGrouping>
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000fc4:	bf00      	nop
 8000fc6:	3708      	adds	r7, #8
 8000fc8:	46bd      	mov	sp, r7
 8000fca:	bd80      	pop	{r7, pc}
 8000fcc:	40023800 	.word	0x40023800

08000fd0 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000fd0:	b480      	push	{r7}
 8000fd2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8000fd4:	bf00      	nop
 8000fd6:	e7fd      	b.n	8000fd4 <NMI_Handler+0x4>

08000fd8 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8000fd8:	b480      	push	{r7}
 8000fda:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000fdc:	bf00      	nop
 8000fde:	e7fd      	b.n	8000fdc <HardFault_Handler+0x4>

08000fe0 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000fe0:	b480      	push	{r7}
 8000fe2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000fe4:	bf00      	nop
 8000fe6:	e7fd      	b.n	8000fe4 <MemManage_Handler+0x4>

08000fe8 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000fe8:	b480      	push	{r7}
 8000fea:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000fec:	bf00      	nop
 8000fee:	e7fd      	b.n	8000fec <BusFault_Handler+0x4>

08000ff0 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000ff0:	b480      	push	{r7}
 8000ff2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000ff4:	bf00      	nop
 8000ff6:	e7fd      	b.n	8000ff4 <UsageFault_Handler+0x4>

08000ff8 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8000ff8:	b480      	push	{r7}
 8000ffa:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8000ffc:	bf00      	nop
 8000ffe:	46bd      	mov	sp, r7
 8001000:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001004:	4770      	bx	lr

08001006 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001006:	b480      	push	{r7}
 8001008:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800100a:	bf00      	nop
 800100c:	46bd      	mov	sp, r7
 800100e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001012:	4770      	bx	lr

08001014 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001014:	b480      	push	{r7}
 8001016:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001018:	bf00      	nop
 800101a:	46bd      	mov	sp, r7
 800101c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001020:	4770      	bx	lr

08001022 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001022:	b580      	push	{r7, lr}
 8001024:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001026:	f000 fa05 	bl	8001434 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800102a:	bf00      	nop
 800102c:	bd80      	pop	{r7, pc}

0800102e <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800102e:	b580      	push	{r7, lr}
 8001030:	b086      	sub	sp, #24
 8001032:	af00      	add	r7, sp, #0
 8001034:	60f8      	str	r0, [r7, #12]
 8001036:	60b9      	str	r1, [r7, #8]
 8001038:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800103a:	2300      	movs	r3, #0
 800103c:	617b      	str	r3, [r7, #20]
 800103e:	e00a      	b.n	8001056 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8001040:	f3af 8000 	nop.w
 8001044:	4601      	mov	r1, r0
 8001046:	68bb      	ldr	r3, [r7, #8]
 8001048:	1c5a      	adds	r2, r3, #1
 800104a:	60ba      	str	r2, [r7, #8]
 800104c:	b2ca      	uxtb	r2, r1
 800104e:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001050:	697b      	ldr	r3, [r7, #20]
 8001052:	3301      	adds	r3, #1
 8001054:	617b      	str	r3, [r7, #20]
 8001056:	697a      	ldr	r2, [r7, #20]
 8001058:	687b      	ldr	r3, [r7, #4]
 800105a:	429a      	cmp	r2, r3
 800105c:	dbf0      	blt.n	8001040 <_read+0x12>
  }

  return len;
 800105e:	687b      	ldr	r3, [r7, #4]
}
 8001060:	4618      	mov	r0, r3
 8001062:	3718      	adds	r7, #24
 8001064:	46bd      	mov	sp, r7
 8001066:	bd80      	pop	{r7, pc}

08001068 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001068:	b580      	push	{r7, lr}
 800106a:	b086      	sub	sp, #24
 800106c:	af00      	add	r7, sp, #0
 800106e:	60f8      	str	r0, [r7, #12]
 8001070:	60b9      	str	r1, [r7, #8]
 8001072:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001074:	2300      	movs	r3, #0
 8001076:	617b      	str	r3, [r7, #20]
 8001078:	e009      	b.n	800108e <_write+0x26>
  {
    __io_putchar(*ptr++);
 800107a:	68bb      	ldr	r3, [r7, #8]
 800107c:	1c5a      	adds	r2, r3, #1
 800107e:	60ba      	str	r2, [r7, #8]
 8001080:	781b      	ldrb	r3, [r3, #0]
 8001082:	4618      	mov	r0, r3
 8001084:	f7ff fe9c 	bl	8000dc0 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001088:	697b      	ldr	r3, [r7, #20]
 800108a:	3301      	adds	r3, #1
 800108c:	617b      	str	r3, [r7, #20]
 800108e:	697a      	ldr	r2, [r7, #20]
 8001090:	687b      	ldr	r3, [r7, #4]
 8001092:	429a      	cmp	r2, r3
 8001094:	dbf1      	blt.n	800107a <_write+0x12>
  }
  return len;
 8001096:	687b      	ldr	r3, [r7, #4]
}
 8001098:	4618      	mov	r0, r3
 800109a:	3718      	adds	r7, #24
 800109c:	46bd      	mov	sp, r7
 800109e:	bd80      	pop	{r7, pc}

080010a0 <_close>:

int _close(int file)
{
 80010a0:	b480      	push	{r7}
 80010a2:	b083      	sub	sp, #12
 80010a4:	af00      	add	r7, sp, #0
 80010a6:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80010a8:	f04f 33ff 	mov.w	r3, #4294967295
}
 80010ac:	4618      	mov	r0, r3
 80010ae:	370c      	adds	r7, #12
 80010b0:	46bd      	mov	sp, r7
 80010b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010b6:	4770      	bx	lr

080010b8 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80010b8:	b480      	push	{r7}
 80010ba:	b083      	sub	sp, #12
 80010bc:	af00      	add	r7, sp, #0
 80010be:	6078      	str	r0, [r7, #4]
 80010c0:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80010c2:	683b      	ldr	r3, [r7, #0]
 80010c4:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80010c8:	605a      	str	r2, [r3, #4]
  return 0;
 80010ca:	2300      	movs	r3, #0
}
 80010cc:	4618      	mov	r0, r3
 80010ce:	370c      	adds	r7, #12
 80010d0:	46bd      	mov	sp, r7
 80010d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010d6:	4770      	bx	lr

080010d8 <_isatty>:

int _isatty(int file)
{
 80010d8:	b480      	push	{r7}
 80010da:	b083      	sub	sp, #12
 80010dc:	af00      	add	r7, sp, #0
 80010de:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80010e0:	2301      	movs	r3, #1
}
 80010e2:	4618      	mov	r0, r3
 80010e4:	370c      	adds	r7, #12
 80010e6:	46bd      	mov	sp, r7
 80010e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010ec:	4770      	bx	lr

080010ee <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80010ee:	b480      	push	{r7}
 80010f0:	b085      	sub	sp, #20
 80010f2:	af00      	add	r7, sp, #0
 80010f4:	60f8      	str	r0, [r7, #12]
 80010f6:	60b9      	str	r1, [r7, #8]
 80010f8:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80010fa:	2300      	movs	r3, #0
}
 80010fc:	4618      	mov	r0, r3
 80010fe:	3714      	adds	r7, #20
 8001100:	46bd      	mov	sp, r7
 8001102:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001106:	4770      	bx	lr

08001108 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001108:	b580      	push	{r7, lr}
 800110a:	b086      	sub	sp, #24
 800110c:	af00      	add	r7, sp, #0
 800110e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001110:	4a14      	ldr	r2, [pc, #80]	@ (8001164 <_sbrk+0x5c>)
 8001112:	4b15      	ldr	r3, [pc, #84]	@ (8001168 <_sbrk+0x60>)
 8001114:	1ad3      	subs	r3, r2, r3
 8001116:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001118:	697b      	ldr	r3, [r7, #20]
 800111a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800111c:	4b13      	ldr	r3, [pc, #76]	@ (800116c <_sbrk+0x64>)
 800111e:	681b      	ldr	r3, [r3, #0]
 8001120:	2b00      	cmp	r3, #0
 8001122:	d102      	bne.n	800112a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001124:	4b11      	ldr	r3, [pc, #68]	@ (800116c <_sbrk+0x64>)
 8001126:	4a12      	ldr	r2, [pc, #72]	@ (8001170 <_sbrk+0x68>)
 8001128:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800112a:	4b10      	ldr	r3, [pc, #64]	@ (800116c <_sbrk+0x64>)
 800112c:	681a      	ldr	r2, [r3, #0]
 800112e:	687b      	ldr	r3, [r7, #4]
 8001130:	4413      	add	r3, r2
 8001132:	693a      	ldr	r2, [r7, #16]
 8001134:	429a      	cmp	r2, r3
 8001136:	d207      	bcs.n	8001148 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001138:	f003 fbaa 	bl	8004890 <__errno>
 800113c:	4603      	mov	r3, r0
 800113e:	220c      	movs	r2, #12
 8001140:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001142:	f04f 33ff 	mov.w	r3, #4294967295
 8001146:	e009      	b.n	800115c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001148:	4b08      	ldr	r3, [pc, #32]	@ (800116c <_sbrk+0x64>)
 800114a:	681b      	ldr	r3, [r3, #0]
 800114c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800114e:	4b07      	ldr	r3, [pc, #28]	@ (800116c <_sbrk+0x64>)
 8001150:	681a      	ldr	r2, [r3, #0]
 8001152:	687b      	ldr	r3, [r7, #4]
 8001154:	4413      	add	r3, r2
 8001156:	4a05      	ldr	r2, [pc, #20]	@ (800116c <_sbrk+0x64>)
 8001158:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800115a:	68fb      	ldr	r3, [r7, #12]
}
 800115c:	4618      	mov	r0, r3
 800115e:	3718      	adds	r7, #24
 8001160:	46bd      	mov	sp, r7
 8001162:	bd80      	pop	{r7, pc}
 8001164:	20020000 	.word	0x20020000
 8001168:	00000400 	.word	0x00000400
 800116c:	2000021c 	.word	0x2000021c
 8001170:	20000400 	.word	0x20000400

08001174 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8001174:	b480      	push	{r7}
 8001176:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8001178:	4b06      	ldr	r3, [pc, #24]	@ (8001194 <SystemInit+0x20>)
 800117a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800117e:	4a05      	ldr	r2, [pc, #20]	@ (8001194 <SystemInit+0x20>)
 8001180:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001184:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001188:	bf00      	nop
 800118a:	46bd      	mov	sp, r7
 800118c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001190:	4770      	bx	lr
 8001192:	bf00      	nop
 8001194:	e000ed00 	.word	0xe000ed00

08001198 <MX_USART2_UART_Init>:
UART_HandleTypeDef huart3;

/* USART2 init function */

void MX_USART2_UART_Init(void)
{
 8001198:	b580      	push	{r7, lr}
 800119a:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 800119c:	4b11      	ldr	r3, [pc, #68]	@ (80011e4 <MX_USART2_UART_Init+0x4c>)
 800119e:	4a12      	ldr	r2, [pc, #72]	@ (80011e8 <MX_USART2_UART_Init+0x50>)
 80011a0:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 80011a2:	4b10      	ldr	r3, [pc, #64]	@ (80011e4 <MX_USART2_UART_Init+0x4c>)
 80011a4:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 80011a8:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 80011aa:	4b0e      	ldr	r3, [pc, #56]	@ (80011e4 <MX_USART2_UART_Init+0x4c>)
 80011ac:	2200      	movs	r2, #0
 80011ae:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80011b0:	4b0c      	ldr	r3, [pc, #48]	@ (80011e4 <MX_USART2_UART_Init+0x4c>)
 80011b2:	2200      	movs	r2, #0
 80011b4:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 80011b6:	4b0b      	ldr	r3, [pc, #44]	@ (80011e4 <MX_USART2_UART_Init+0x4c>)
 80011b8:	2200      	movs	r2, #0
 80011ba:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80011bc:	4b09      	ldr	r3, [pc, #36]	@ (80011e4 <MX_USART2_UART_Init+0x4c>)
 80011be:	220c      	movs	r2, #12
 80011c0:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80011c2:	4b08      	ldr	r3, [pc, #32]	@ (80011e4 <MX_USART2_UART_Init+0x4c>)
 80011c4:	2200      	movs	r2, #0
 80011c6:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80011c8:	4b06      	ldr	r3, [pc, #24]	@ (80011e4 <MX_USART2_UART_Init+0x4c>)
 80011ca:	2200      	movs	r2, #0
 80011cc:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80011ce:	4805      	ldr	r0, [pc, #20]	@ (80011e4 <MX_USART2_UART_Init+0x4c>)
 80011d0:	f002 fc30 	bl	8003a34 <HAL_UART_Init>
 80011d4:	4603      	mov	r3, r0
 80011d6:	2b00      	cmp	r3, #0
 80011d8:	d001      	beq.n	80011de <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 80011da:	f7ff fecb 	bl	8000f74 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 80011de:	bf00      	nop
 80011e0:	bd80      	pop	{r7, pc}
 80011e2:	bf00      	nop
 80011e4:	20000220 	.word	0x20000220
 80011e8:	40004400 	.word	0x40004400

080011ec <MX_USART3_UART_Init>:
/* USART3 init function */

void MX_USART3_UART_Init(void)
{
 80011ec:	b580      	push	{r7, lr}
 80011ee:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 80011f0:	4b11      	ldr	r3, [pc, #68]	@ (8001238 <MX_USART3_UART_Init+0x4c>)
 80011f2:	4a12      	ldr	r2, [pc, #72]	@ (800123c <MX_USART3_UART_Init+0x50>)
 80011f4:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 115200;
 80011f6:	4b10      	ldr	r3, [pc, #64]	@ (8001238 <MX_USART3_UART_Init+0x4c>)
 80011f8:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 80011fc:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 80011fe:	4b0e      	ldr	r3, [pc, #56]	@ (8001238 <MX_USART3_UART_Init+0x4c>)
 8001200:	2200      	movs	r2, #0
 8001202:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 8001204:	4b0c      	ldr	r3, [pc, #48]	@ (8001238 <MX_USART3_UART_Init+0x4c>)
 8001206:	2200      	movs	r2, #0
 8001208:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 800120a:	4b0b      	ldr	r3, [pc, #44]	@ (8001238 <MX_USART3_UART_Init+0x4c>)
 800120c:	2200      	movs	r2, #0
 800120e:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 8001210:	4b09      	ldr	r3, [pc, #36]	@ (8001238 <MX_USART3_UART_Init+0x4c>)
 8001212:	220c      	movs	r2, #12
 8001214:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001216:	4b08      	ldr	r3, [pc, #32]	@ (8001238 <MX_USART3_UART_Init+0x4c>)
 8001218:	2200      	movs	r2, #0
 800121a:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 800121c:	4b06      	ldr	r3, [pc, #24]	@ (8001238 <MX_USART3_UART_Init+0x4c>)
 800121e:	2200      	movs	r2, #0
 8001220:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart3) != HAL_OK)
 8001222:	4805      	ldr	r0, [pc, #20]	@ (8001238 <MX_USART3_UART_Init+0x4c>)
 8001224:	f002 fc06 	bl	8003a34 <HAL_UART_Init>
 8001228:	4603      	mov	r3, r0
 800122a:	2b00      	cmp	r3, #0
 800122c:	d001      	beq.n	8001232 <MX_USART3_UART_Init+0x46>
  {
    Error_Handler();
 800122e:	f7ff fea1 	bl	8000f74 <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 8001232:	bf00      	nop
 8001234:	bd80      	pop	{r7, pc}
 8001236:	bf00      	nop
 8001238:	20000268 	.word	0x20000268
 800123c:	40004800 	.word	0x40004800

08001240 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 8001240:	b580      	push	{r7, lr}
 8001242:	b08c      	sub	sp, #48	@ 0x30
 8001244:	af00      	add	r7, sp, #0
 8001246:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001248:	f107 031c 	add.w	r3, r7, #28
 800124c:	2200      	movs	r2, #0
 800124e:	601a      	str	r2, [r3, #0]
 8001250:	605a      	str	r2, [r3, #4]
 8001252:	609a      	str	r2, [r3, #8]
 8001254:	60da      	str	r2, [r3, #12]
 8001256:	611a      	str	r2, [r3, #16]
  if(uartHandle->Instance==USART2)
 8001258:	687b      	ldr	r3, [r7, #4]
 800125a:	681b      	ldr	r3, [r3, #0]
 800125c:	4a32      	ldr	r2, [pc, #200]	@ (8001328 <HAL_UART_MspInit+0xe8>)
 800125e:	4293      	cmp	r3, r2
 8001260:	d12c      	bne.n	80012bc <HAL_UART_MspInit+0x7c>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* USART2 clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 8001262:	2300      	movs	r3, #0
 8001264:	61bb      	str	r3, [r7, #24]
 8001266:	4b31      	ldr	r3, [pc, #196]	@ (800132c <HAL_UART_MspInit+0xec>)
 8001268:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800126a:	4a30      	ldr	r2, [pc, #192]	@ (800132c <HAL_UART_MspInit+0xec>)
 800126c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001270:	6413      	str	r3, [r2, #64]	@ 0x40
 8001272:	4b2e      	ldr	r3, [pc, #184]	@ (800132c <HAL_UART_MspInit+0xec>)
 8001274:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001276:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800127a:	61bb      	str	r3, [r7, #24]
 800127c:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 800127e:	2300      	movs	r3, #0
 8001280:	617b      	str	r3, [r7, #20]
 8001282:	4b2a      	ldr	r3, [pc, #168]	@ (800132c <HAL_UART_MspInit+0xec>)
 8001284:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001286:	4a29      	ldr	r2, [pc, #164]	@ (800132c <HAL_UART_MspInit+0xec>)
 8001288:	f043 0301 	orr.w	r3, r3, #1
 800128c:	6313      	str	r3, [r2, #48]	@ 0x30
 800128e:	4b27      	ldr	r3, [pc, #156]	@ (800132c <HAL_UART_MspInit+0xec>)
 8001290:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001292:	f003 0301 	and.w	r3, r3, #1
 8001296:	617b      	str	r3, [r7, #20]
 8001298:	697b      	ldr	r3, [r7, #20]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 800129a:	230c      	movs	r3, #12
 800129c:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800129e:	2302      	movs	r3, #2
 80012a0:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80012a2:	2300      	movs	r3, #0
 80012a4:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80012a6:	2303      	movs	r3, #3
 80012a8:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 80012aa:	2307      	movs	r3, #7
 80012ac:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80012ae:	f107 031c 	add.w	r3, r7, #28
 80012b2:	4619      	mov	r1, r3
 80012b4:	481e      	ldr	r0, [pc, #120]	@ (8001330 <HAL_UART_MspInit+0xf0>)
 80012b6:	f000 fbf7 	bl	8001aa8 <HAL_GPIO_Init>

  /* USER CODE BEGIN USART3_MspInit 1 */

  /* USER CODE END USART3_MspInit 1 */
  }
}
 80012ba:	e031      	b.n	8001320 <HAL_UART_MspInit+0xe0>
  else if(uartHandle->Instance==USART3)
 80012bc:	687b      	ldr	r3, [r7, #4]
 80012be:	681b      	ldr	r3, [r3, #0]
 80012c0:	4a1c      	ldr	r2, [pc, #112]	@ (8001334 <HAL_UART_MspInit+0xf4>)
 80012c2:	4293      	cmp	r3, r2
 80012c4:	d12c      	bne.n	8001320 <HAL_UART_MspInit+0xe0>
    __HAL_RCC_USART3_CLK_ENABLE();
 80012c6:	2300      	movs	r3, #0
 80012c8:	613b      	str	r3, [r7, #16]
 80012ca:	4b18      	ldr	r3, [pc, #96]	@ (800132c <HAL_UART_MspInit+0xec>)
 80012cc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80012ce:	4a17      	ldr	r2, [pc, #92]	@ (800132c <HAL_UART_MspInit+0xec>)
 80012d0:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80012d4:	6413      	str	r3, [r2, #64]	@ 0x40
 80012d6:	4b15      	ldr	r3, [pc, #84]	@ (800132c <HAL_UART_MspInit+0xec>)
 80012d8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80012da:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80012de:	613b      	str	r3, [r7, #16]
 80012e0:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80012e2:	2300      	movs	r3, #0
 80012e4:	60fb      	str	r3, [r7, #12]
 80012e6:	4b11      	ldr	r3, [pc, #68]	@ (800132c <HAL_UART_MspInit+0xec>)
 80012e8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80012ea:	4a10      	ldr	r2, [pc, #64]	@ (800132c <HAL_UART_MspInit+0xec>)
 80012ec:	f043 0304 	orr.w	r3, r3, #4
 80012f0:	6313      	str	r3, [r2, #48]	@ 0x30
 80012f2:	4b0e      	ldr	r3, [pc, #56]	@ (800132c <HAL_UART_MspInit+0xec>)
 80012f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80012f6:	f003 0304 	and.w	r3, r3, #4
 80012fa:	60fb      	str	r3, [r7, #12]
 80012fc:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
 80012fe:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 8001302:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001304:	2302      	movs	r3, #2
 8001306:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001308:	2300      	movs	r3, #0
 800130a:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800130c:	2303      	movs	r3, #3
 800130e:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 8001310:	2307      	movs	r3, #7
 8001312:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001314:	f107 031c 	add.w	r3, r7, #28
 8001318:	4619      	mov	r1, r3
 800131a:	4807      	ldr	r0, [pc, #28]	@ (8001338 <HAL_UART_MspInit+0xf8>)
 800131c:	f000 fbc4 	bl	8001aa8 <HAL_GPIO_Init>
}
 8001320:	bf00      	nop
 8001322:	3730      	adds	r7, #48	@ 0x30
 8001324:	46bd      	mov	sp, r7
 8001326:	bd80      	pop	{r7, pc}
 8001328:	40004400 	.word	0x40004400
 800132c:	40023800 	.word	0x40023800
 8001330:	40020000 	.word	0x40020000
 8001334:	40004800 	.word	0x40004800
 8001338:	40020800 	.word	0x40020800

0800133c <Reset_Handler>:
 800133c:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8001374 <LoopFillZerobss+0xe>
 8001340:	f7ff ff18 	bl	8001174 <SystemInit>
 8001344:	480c      	ldr	r0, [pc, #48]	@ (8001378 <LoopFillZerobss+0x12>)
 8001346:	490d      	ldr	r1, [pc, #52]	@ (800137c <LoopFillZerobss+0x16>)
 8001348:	4a0d      	ldr	r2, [pc, #52]	@ (8001380 <LoopFillZerobss+0x1a>)
 800134a:	2300      	movs	r3, #0
 800134c:	e002      	b.n	8001354 <LoopCopyDataInit>

0800134e <CopyDataInit>:
 800134e:	58d4      	ldr	r4, [r2, r3]
 8001350:	50c4      	str	r4, [r0, r3]
 8001352:	3304      	adds	r3, #4

08001354 <LoopCopyDataInit>:
 8001354:	18c4      	adds	r4, r0, r3
 8001356:	428c      	cmp	r4, r1
 8001358:	d3f9      	bcc.n	800134e <CopyDataInit>
 800135a:	4a0a      	ldr	r2, [pc, #40]	@ (8001384 <LoopFillZerobss+0x1e>)
 800135c:	4c0a      	ldr	r4, [pc, #40]	@ (8001388 <LoopFillZerobss+0x22>)
 800135e:	2300      	movs	r3, #0
 8001360:	e001      	b.n	8001366 <LoopFillZerobss>

08001362 <FillZerobss>:
 8001362:	6013      	str	r3, [r2, #0]
 8001364:	3204      	adds	r2, #4

08001366 <LoopFillZerobss>:
 8001366:	42a2      	cmp	r2, r4
 8001368:	d3fb      	bcc.n	8001362 <FillZerobss>
 800136a:	f003 fa97 	bl	800489c <__libc_init_array>
 800136e:	f7ff fd39 	bl	8000de4 <main>
 8001372:	4770      	bx	lr
 8001374:	20020000 	.word	0x20020000
 8001378:	20000000 	.word	0x20000000
 800137c:	20000078 	.word	0x20000078
 8001380:	080058e8 	.word	0x080058e8
 8001384:	20000078 	.word	0x20000078
 8001388:	20000400 	.word	0x20000400

0800138c <ADC_IRQHandler>:
 800138c:	e7fe      	b.n	800138c <ADC_IRQHandler>
	...

08001390 <HAL_Init>:
 8001390:	b580      	push	{r7, lr}
 8001392:	af00      	add	r7, sp, #0
 8001394:	4b0e      	ldr	r3, [pc, #56]	@ (80013d0 <HAL_Init+0x40>)
 8001396:	681b      	ldr	r3, [r3, #0]
 8001398:	4a0d      	ldr	r2, [pc, #52]	@ (80013d0 <HAL_Init+0x40>)
 800139a:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800139e:	6013      	str	r3, [r2, #0]
 80013a0:	4b0b      	ldr	r3, [pc, #44]	@ (80013d0 <HAL_Init+0x40>)
 80013a2:	681b      	ldr	r3, [r3, #0]
 80013a4:	4a0a      	ldr	r2, [pc, #40]	@ (80013d0 <HAL_Init+0x40>)
 80013a6:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80013aa:	6013      	str	r3, [r2, #0]
 80013ac:	4b08      	ldr	r3, [pc, #32]	@ (80013d0 <HAL_Init+0x40>)
 80013ae:	681b      	ldr	r3, [r3, #0]
 80013b0:	4a07      	ldr	r2, [pc, #28]	@ (80013d0 <HAL_Init+0x40>)
 80013b2:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80013b6:	6013      	str	r3, [r2, #0]
 80013b8:	2003      	movs	r0, #3
 80013ba:	f000 fb41 	bl	8001a40 <HAL_NVIC_SetPriorityGrouping>
 80013be:	2000      	movs	r0, #0
 80013c0:	f000 f808 	bl	80013d4 <HAL_InitTick>
 80013c4:	f7ff fddc 	bl	8000f80 <HAL_MspInit>
 80013c8:	2300      	movs	r3, #0
 80013ca:	4618      	mov	r0, r3
 80013cc:	bd80      	pop	{r7, pc}
 80013ce:	bf00      	nop
 80013d0:	40023c00 	.word	0x40023c00

080013d4 <HAL_InitTick>:
 80013d4:	b580      	push	{r7, lr}
 80013d6:	b082      	sub	sp, #8
 80013d8:	af00      	add	r7, sp, #0
 80013da:	6078      	str	r0, [r7, #4]
 80013dc:	4b12      	ldr	r3, [pc, #72]	@ (8001428 <HAL_InitTick+0x54>)
 80013de:	681a      	ldr	r2, [r3, #0]
 80013e0:	4b12      	ldr	r3, [pc, #72]	@ (800142c <HAL_InitTick+0x58>)
 80013e2:	781b      	ldrb	r3, [r3, #0]
 80013e4:	4619      	mov	r1, r3
 80013e6:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80013ea:	fbb3 f3f1 	udiv	r3, r3, r1
 80013ee:	fbb2 f3f3 	udiv	r3, r2, r3
 80013f2:	4618      	mov	r0, r3
 80013f4:	f000 fb4b 	bl	8001a8e <HAL_SYSTICK_Config>
 80013f8:	4603      	mov	r3, r0
 80013fa:	2b00      	cmp	r3, #0
 80013fc:	d001      	beq.n	8001402 <HAL_InitTick+0x2e>
 80013fe:	2301      	movs	r3, #1
 8001400:	e00e      	b.n	8001420 <HAL_InitTick+0x4c>
 8001402:	687b      	ldr	r3, [r7, #4]
 8001404:	2b0f      	cmp	r3, #15
 8001406:	d80a      	bhi.n	800141e <HAL_InitTick+0x4a>
 8001408:	2200      	movs	r2, #0
 800140a:	6879      	ldr	r1, [r7, #4]
 800140c:	f04f 30ff 	mov.w	r0, #4294967295
 8001410:	f000 fb21 	bl	8001a56 <HAL_NVIC_SetPriority>
 8001414:	4a06      	ldr	r2, [pc, #24]	@ (8001430 <HAL_InitTick+0x5c>)
 8001416:	687b      	ldr	r3, [r7, #4]
 8001418:	6013      	str	r3, [r2, #0]
 800141a:	2300      	movs	r3, #0
 800141c:	e000      	b.n	8001420 <HAL_InitTick+0x4c>
 800141e:	2301      	movs	r3, #1
 8001420:	4618      	mov	r0, r3
 8001422:	3708      	adds	r7, #8
 8001424:	46bd      	mov	sp, r7
 8001426:	bd80      	pop	{r7, pc}
 8001428:	20000010 	.word	0x20000010
 800142c:	20000018 	.word	0x20000018
 8001430:	20000014 	.word	0x20000014

08001434 <HAL_IncTick>:
 8001434:	b480      	push	{r7}
 8001436:	af00      	add	r7, sp, #0
 8001438:	4b06      	ldr	r3, [pc, #24]	@ (8001454 <HAL_IncTick+0x20>)
 800143a:	781b      	ldrb	r3, [r3, #0]
 800143c:	461a      	mov	r2, r3
 800143e:	4b06      	ldr	r3, [pc, #24]	@ (8001458 <HAL_IncTick+0x24>)
 8001440:	681b      	ldr	r3, [r3, #0]
 8001442:	4413      	add	r3, r2
 8001444:	4a04      	ldr	r2, [pc, #16]	@ (8001458 <HAL_IncTick+0x24>)
 8001446:	6013      	str	r3, [r2, #0]
 8001448:	bf00      	nop
 800144a:	46bd      	mov	sp, r7
 800144c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001450:	4770      	bx	lr
 8001452:	bf00      	nop
 8001454:	20000018 	.word	0x20000018
 8001458:	200002b0 	.word	0x200002b0

0800145c <HAL_GetTick>:
 800145c:	b480      	push	{r7}
 800145e:	af00      	add	r7, sp, #0
 8001460:	4b03      	ldr	r3, [pc, #12]	@ (8001470 <HAL_GetTick+0x14>)
 8001462:	681b      	ldr	r3, [r3, #0]
 8001464:	4618      	mov	r0, r3
 8001466:	46bd      	mov	sp, r7
 8001468:	f85d 7b04 	ldr.w	r7, [sp], #4
 800146c:	4770      	bx	lr
 800146e:	bf00      	nop
 8001470:	200002b0 	.word	0x200002b0

08001474 <HAL_Delay>:
 8001474:	b580      	push	{r7, lr}
 8001476:	b084      	sub	sp, #16
 8001478:	af00      	add	r7, sp, #0
 800147a:	6078      	str	r0, [r7, #4]
 800147c:	f7ff ffee 	bl	800145c <HAL_GetTick>
 8001480:	60b8      	str	r0, [r7, #8]
 8001482:	687b      	ldr	r3, [r7, #4]
 8001484:	60fb      	str	r3, [r7, #12]
 8001486:	68fb      	ldr	r3, [r7, #12]
 8001488:	f1b3 3fff 	cmp.w	r3, #4294967295
 800148c:	d005      	beq.n	800149a <HAL_Delay+0x26>
 800148e:	4b0a      	ldr	r3, [pc, #40]	@ (80014b8 <HAL_Delay+0x44>)
 8001490:	781b      	ldrb	r3, [r3, #0]
 8001492:	461a      	mov	r2, r3
 8001494:	68fb      	ldr	r3, [r7, #12]
 8001496:	4413      	add	r3, r2
 8001498:	60fb      	str	r3, [r7, #12]
 800149a:	bf00      	nop
 800149c:	f7ff ffde 	bl	800145c <HAL_GetTick>
 80014a0:	4602      	mov	r2, r0
 80014a2:	68bb      	ldr	r3, [r7, #8]
 80014a4:	1ad3      	subs	r3, r2, r3
 80014a6:	68fa      	ldr	r2, [r7, #12]
 80014a8:	429a      	cmp	r2, r3
 80014aa:	d8f7      	bhi.n	800149c <HAL_Delay+0x28>
 80014ac:	bf00      	nop
 80014ae:	bf00      	nop
 80014b0:	3710      	adds	r7, #16
 80014b2:	46bd      	mov	sp, r7
 80014b4:	bd80      	pop	{r7, pc}
 80014b6:	bf00      	nop
 80014b8:	20000018 	.word	0x20000018

080014bc <HAL_CAN_Init>:
 80014bc:	b580      	push	{r7, lr}
 80014be:	b084      	sub	sp, #16
 80014c0:	af00      	add	r7, sp, #0
 80014c2:	6078      	str	r0, [r7, #4]
 80014c4:	687b      	ldr	r3, [r7, #4]
 80014c6:	2b00      	cmp	r3, #0
 80014c8:	d101      	bne.n	80014ce <HAL_CAN_Init+0x12>
 80014ca:	2301      	movs	r3, #1
 80014cc:	e0ed      	b.n	80016aa <HAL_CAN_Init+0x1ee>
 80014ce:	687b      	ldr	r3, [r7, #4]
 80014d0:	f893 3020 	ldrb.w	r3, [r3, #32]
 80014d4:	b2db      	uxtb	r3, r3
 80014d6:	2b00      	cmp	r3, #0
 80014d8:	d102      	bne.n	80014e0 <HAL_CAN_Init+0x24>
 80014da:	6878      	ldr	r0, [r7, #4]
 80014dc:	f7ff fb6e 	bl	8000bbc <HAL_CAN_MspInit>
 80014e0:	687b      	ldr	r3, [r7, #4]
 80014e2:	681b      	ldr	r3, [r3, #0]
 80014e4:	681a      	ldr	r2, [r3, #0]
 80014e6:	687b      	ldr	r3, [r7, #4]
 80014e8:	681b      	ldr	r3, [r3, #0]
 80014ea:	f042 0201 	orr.w	r2, r2, #1
 80014ee:	601a      	str	r2, [r3, #0]
 80014f0:	f7ff ffb4 	bl	800145c <HAL_GetTick>
 80014f4:	60f8      	str	r0, [r7, #12]
 80014f6:	e012      	b.n	800151e <HAL_CAN_Init+0x62>
 80014f8:	f7ff ffb0 	bl	800145c <HAL_GetTick>
 80014fc:	4602      	mov	r2, r0
 80014fe:	68fb      	ldr	r3, [r7, #12]
 8001500:	1ad3      	subs	r3, r2, r3
 8001502:	2b0a      	cmp	r3, #10
 8001504:	d90b      	bls.n	800151e <HAL_CAN_Init+0x62>
 8001506:	687b      	ldr	r3, [r7, #4]
 8001508:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800150a:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 800150e:	687b      	ldr	r3, [r7, #4]
 8001510:	625a      	str	r2, [r3, #36]	@ 0x24
 8001512:	687b      	ldr	r3, [r7, #4]
 8001514:	2205      	movs	r2, #5
 8001516:	f883 2020 	strb.w	r2, [r3, #32]
 800151a:	2301      	movs	r3, #1
 800151c:	e0c5      	b.n	80016aa <HAL_CAN_Init+0x1ee>
 800151e:	687b      	ldr	r3, [r7, #4]
 8001520:	681b      	ldr	r3, [r3, #0]
 8001522:	685b      	ldr	r3, [r3, #4]
 8001524:	f003 0301 	and.w	r3, r3, #1
 8001528:	2b00      	cmp	r3, #0
 800152a:	d0e5      	beq.n	80014f8 <HAL_CAN_Init+0x3c>
 800152c:	687b      	ldr	r3, [r7, #4]
 800152e:	681b      	ldr	r3, [r3, #0]
 8001530:	681a      	ldr	r2, [r3, #0]
 8001532:	687b      	ldr	r3, [r7, #4]
 8001534:	681b      	ldr	r3, [r3, #0]
 8001536:	f022 0202 	bic.w	r2, r2, #2
 800153a:	601a      	str	r2, [r3, #0]
 800153c:	f7ff ff8e 	bl	800145c <HAL_GetTick>
 8001540:	60f8      	str	r0, [r7, #12]
 8001542:	e012      	b.n	800156a <HAL_CAN_Init+0xae>
 8001544:	f7ff ff8a 	bl	800145c <HAL_GetTick>
 8001548:	4602      	mov	r2, r0
 800154a:	68fb      	ldr	r3, [r7, #12]
 800154c:	1ad3      	subs	r3, r2, r3
 800154e:	2b0a      	cmp	r3, #10
 8001550:	d90b      	bls.n	800156a <HAL_CAN_Init+0xae>
 8001552:	687b      	ldr	r3, [r7, #4]
 8001554:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001556:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 800155a:	687b      	ldr	r3, [r7, #4]
 800155c:	625a      	str	r2, [r3, #36]	@ 0x24
 800155e:	687b      	ldr	r3, [r7, #4]
 8001560:	2205      	movs	r2, #5
 8001562:	f883 2020 	strb.w	r2, [r3, #32]
 8001566:	2301      	movs	r3, #1
 8001568:	e09f      	b.n	80016aa <HAL_CAN_Init+0x1ee>
 800156a:	687b      	ldr	r3, [r7, #4]
 800156c:	681b      	ldr	r3, [r3, #0]
 800156e:	685b      	ldr	r3, [r3, #4]
 8001570:	f003 0302 	and.w	r3, r3, #2
 8001574:	2b00      	cmp	r3, #0
 8001576:	d1e5      	bne.n	8001544 <HAL_CAN_Init+0x88>
 8001578:	687b      	ldr	r3, [r7, #4]
 800157a:	7e1b      	ldrb	r3, [r3, #24]
 800157c:	2b01      	cmp	r3, #1
 800157e:	d108      	bne.n	8001592 <HAL_CAN_Init+0xd6>
 8001580:	687b      	ldr	r3, [r7, #4]
 8001582:	681b      	ldr	r3, [r3, #0]
 8001584:	681a      	ldr	r2, [r3, #0]
 8001586:	687b      	ldr	r3, [r7, #4]
 8001588:	681b      	ldr	r3, [r3, #0]
 800158a:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800158e:	601a      	str	r2, [r3, #0]
 8001590:	e007      	b.n	80015a2 <HAL_CAN_Init+0xe6>
 8001592:	687b      	ldr	r3, [r7, #4]
 8001594:	681b      	ldr	r3, [r3, #0]
 8001596:	681a      	ldr	r2, [r3, #0]
 8001598:	687b      	ldr	r3, [r7, #4]
 800159a:	681b      	ldr	r3, [r3, #0]
 800159c:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 80015a0:	601a      	str	r2, [r3, #0]
 80015a2:	687b      	ldr	r3, [r7, #4]
 80015a4:	7e5b      	ldrb	r3, [r3, #25]
 80015a6:	2b01      	cmp	r3, #1
 80015a8:	d108      	bne.n	80015bc <HAL_CAN_Init+0x100>
 80015aa:	687b      	ldr	r3, [r7, #4]
 80015ac:	681b      	ldr	r3, [r3, #0]
 80015ae:	681a      	ldr	r2, [r3, #0]
 80015b0:	687b      	ldr	r3, [r7, #4]
 80015b2:	681b      	ldr	r3, [r3, #0]
 80015b4:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80015b8:	601a      	str	r2, [r3, #0]
 80015ba:	e007      	b.n	80015cc <HAL_CAN_Init+0x110>
 80015bc:	687b      	ldr	r3, [r7, #4]
 80015be:	681b      	ldr	r3, [r3, #0]
 80015c0:	681a      	ldr	r2, [r3, #0]
 80015c2:	687b      	ldr	r3, [r7, #4]
 80015c4:	681b      	ldr	r3, [r3, #0]
 80015c6:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80015ca:	601a      	str	r2, [r3, #0]
 80015cc:	687b      	ldr	r3, [r7, #4]
 80015ce:	7e9b      	ldrb	r3, [r3, #26]
 80015d0:	2b01      	cmp	r3, #1
 80015d2:	d108      	bne.n	80015e6 <HAL_CAN_Init+0x12a>
 80015d4:	687b      	ldr	r3, [r7, #4]
 80015d6:	681b      	ldr	r3, [r3, #0]
 80015d8:	681a      	ldr	r2, [r3, #0]
 80015da:	687b      	ldr	r3, [r7, #4]
 80015dc:	681b      	ldr	r3, [r3, #0]
 80015de:	f042 0220 	orr.w	r2, r2, #32
 80015e2:	601a      	str	r2, [r3, #0]
 80015e4:	e007      	b.n	80015f6 <HAL_CAN_Init+0x13a>
 80015e6:	687b      	ldr	r3, [r7, #4]
 80015e8:	681b      	ldr	r3, [r3, #0]
 80015ea:	681a      	ldr	r2, [r3, #0]
 80015ec:	687b      	ldr	r3, [r7, #4]
 80015ee:	681b      	ldr	r3, [r3, #0]
 80015f0:	f022 0220 	bic.w	r2, r2, #32
 80015f4:	601a      	str	r2, [r3, #0]
 80015f6:	687b      	ldr	r3, [r7, #4]
 80015f8:	7edb      	ldrb	r3, [r3, #27]
 80015fa:	2b01      	cmp	r3, #1
 80015fc:	d108      	bne.n	8001610 <HAL_CAN_Init+0x154>
 80015fe:	687b      	ldr	r3, [r7, #4]
 8001600:	681b      	ldr	r3, [r3, #0]
 8001602:	681a      	ldr	r2, [r3, #0]
 8001604:	687b      	ldr	r3, [r7, #4]
 8001606:	681b      	ldr	r3, [r3, #0]
 8001608:	f022 0210 	bic.w	r2, r2, #16
 800160c:	601a      	str	r2, [r3, #0]
 800160e:	e007      	b.n	8001620 <HAL_CAN_Init+0x164>
 8001610:	687b      	ldr	r3, [r7, #4]
 8001612:	681b      	ldr	r3, [r3, #0]
 8001614:	681a      	ldr	r2, [r3, #0]
 8001616:	687b      	ldr	r3, [r7, #4]
 8001618:	681b      	ldr	r3, [r3, #0]
 800161a:	f042 0210 	orr.w	r2, r2, #16
 800161e:	601a      	str	r2, [r3, #0]
 8001620:	687b      	ldr	r3, [r7, #4]
 8001622:	7f1b      	ldrb	r3, [r3, #28]
 8001624:	2b01      	cmp	r3, #1
 8001626:	d108      	bne.n	800163a <HAL_CAN_Init+0x17e>
 8001628:	687b      	ldr	r3, [r7, #4]
 800162a:	681b      	ldr	r3, [r3, #0]
 800162c:	681a      	ldr	r2, [r3, #0]
 800162e:	687b      	ldr	r3, [r7, #4]
 8001630:	681b      	ldr	r3, [r3, #0]
 8001632:	f042 0208 	orr.w	r2, r2, #8
 8001636:	601a      	str	r2, [r3, #0]
 8001638:	e007      	b.n	800164a <HAL_CAN_Init+0x18e>
 800163a:	687b      	ldr	r3, [r7, #4]
 800163c:	681b      	ldr	r3, [r3, #0]
 800163e:	681a      	ldr	r2, [r3, #0]
 8001640:	687b      	ldr	r3, [r7, #4]
 8001642:	681b      	ldr	r3, [r3, #0]
 8001644:	f022 0208 	bic.w	r2, r2, #8
 8001648:	601a      	str	r2, [r3, #0]
 800164a:	687b      	ldr	r3, [r7, #4]
 800164c:	7f5b      	ldrb	r3, [r3, #29]
 800164e:	2b01      	cmp	r3, #1
 8001650:	d108      	bne.n	8001664 <HAL_CAN_Init+0x1a8>
 8001652:	687b      	ldr	r3, [r7, #4]
 8001654:	681b      	ldr	r3, [r3, #0]
 8001656:	681a      	ldr	r2, [r3, #0]
 8001658:	687b      	ldr	r3, [r7, #4]
 800165a:	681b      	ldr	r3, [r3, #0]
 800165c:	f042 0204 	orr.w	r2, r2, #4
 8001660:	601a      	str	r2, [r3, #0]
 8001662:	e007      	b.n	8001674 <HAL_CAN_Init+0x1b8>
 8001664:	687b      	ldr	r3, [r7, #4]
 8001666:	681b      	ldr	r3, [r3, #0]
 8001668:	681a      	ldr	r2, [r3, #0]
 800166a:	687b      	ldr	r3, [r7, #4]
 800166c:	681b      	ldr	r3, [r3, #0]
 800166e:	f022 0204 	bic.w	r2, r2, #4
 8001672:	601a      	str	r2, [r3, #0]
 8001674:	687b      	ldr	r3, [r7, #4]
 8001676:	689a      	ldr	r2, [r3, #8]
 8001678:	687b      	ldr	r3, [r7, #4]
 800167a:	68db      	ldr	r3, [r3, #12]
 800167c:	431a      	orrs	r2, r3
 800167e:	687b      	ldr	r3, [r7, #4]
 8001680:	691b      	ldr	r3, [r3, #16]
 8001682:	431a      	orrs	r2, r3
 8001684:	687b      	ldr	r3, [r7, #4]
 8001686:	695b      	ldr	r3, [r3, #20]
 8001688:	ea42 0103 	orr.w	r1, r2, r3
 800168c:	687b      	ldr	r3, [r7, #4]
 800168e:	685b      	ldr	r3, [r3, #4]
 8001690:	1e5a      	subs	r2, r3, #1
 8001692:	687b      	ldr	r3, [r7, #4]
 8001694:	681b      	ldr	r3, [r3, #0]
 8001696:	430a      	orrs	r2, r1
 8001698:	61da      	str	r2, [r3, #28]
 800169a:	687b      	ldr	r3, [r7, #4]
 800169c:	2200      	movs	r2, #0
 800169e:	625a      	str	r2, [r3, #36]	@ 0x24
 80016a0:	687b      	ldr	r3, [r7, #4]
 80016a2:	2201      	movs	r2, #1
 80016a4:	f883 2020 	strb.w	r2, [r3, #32]
 80016a8:	2300      	movs	r3, #0
 80016aa:	4618      	mov	r0, r3
 80016ac:	3710      	adds	r7, #16
 80016ae:	46bd      	mov	sp, r7
 80016b0:	bd80      	pop	{r7, pc}

080016b2 <HAL_CAN_Start>:
 80016b2:	b580      	push	{r7, lr}
 80016b4:	b084      	sub	sp, #16
 80016b6:	af00      	add	r7, sp, #0
 80016b8:	6078      	str	r0, [r7, #4]
 80016ba:	687b      	ldr	r3, [r7, #4]
 80016bc:	f893 3020 	ldrb.w	r3, [r3, #32]
 80016c0:	b2db      	uxtb	r3, r3
 80016c2:	2b01      	cmp	r3, #1
 80016c4:	d12e      	bne.n	8001724 <HAL_CAN_Start+0x72>
 80016c6:	687b      	ldr	r3, [r7, #4]
 80016c8:	2202      	movs	r2, #2
 80016ca:	f883 2020 	strb.w	r2, [r3, #32]
 80016ce:	687b      	ldr	r3, [r7, #4]
 80016d0:	681b      	ldr	r3, [r3, #0]
 80016d2:	681a      	ldr	r2, [r3, #0]
 80016d4:	687b      	ldr	r3, [r7, #4]
 80016d6:	681b      	ldr	r3, [r3, #0]
 80016d8:	f022 0201 	bic.w	r2, r2, #1
 80016dc:	601a      	str	r2, [r3, #0]
 80016de:	f7ff febd 	bl	800145c <HAL_GetTick>
 80016e2:	60f8      	str	r0, [r7, #12]
 80016e4:	e012      	b.n	800170c <HAL_CAN_Start+0x5a>
 80016e6:	f7ff feb9 	bl	800145c <HAL_GetTick>
 80016ea:	4602      	mov	r2, r0
 80016ec:	68fb      	ldr	r3, [r7, #12]
 80016ee:	1ad3      	subs	r3, r2, r3
 80016f0:	2b0a      	cmp	r3, #10
 80016f2:	d90b      	bls.n	800170c <HAL_CAN_Start+0x5a>
 80016f4:	687b      	ldr	r3, [r7, #4]
 80016f6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80016f8:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 80016fc:	687b      	ldr	r3, [r7, #4]
 80016fe:	625a      	str	r2, [r3, #36]	@ 0x24
 8001700:	687b      	ldr	r3, [r7, #4]
 8001702:	2205      	movs	r2, #5
 8001704:	f883 2020 	strb.w	r2, [r3, #32]
 8001708:	2301      	movs	r3, #1
 800170a:	e012      	b.n	8001732 <HAL_CAN_Start+0x80>
 800170c:	687b      	ldr	r3, [r7, #4]
 800170e:	681b      	ldr	r3, [r3, #0]
 8001710:	685b      	ldr	r3, [r3, #4]
 8001712:	f003 0301 	and.w	r3, r3, #1
 8001716:	2b00      	cmp	r3, #0
 8001718:	d1e5      	bne.n	80016e6 <HAL_CAN_Start+0x34>
 800171a:	687b      	ldr	r3, [r7, #4]
 800171c:	2200      	movs	r2, #0
 800171e:	625a      	str	r2, [r3, #36]	@ 0x24
 8001720:	2300      	movs	r3, #0
 8001722:	e006      	b.n	8001732 <HAL_CAN_Start+0x80>
 8001724:	687b      	ldr	r3, [r7, #4]
 8001726:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001728:	f443 2200 	orr.w	r2, r3, #524288	@ 0x80000
 800172c:	687b      	ldr	r3, [r7, #4]
 800172e:	625a      	str	r2, [r3, #36]	@ 0x24
 8001730:	2301      	movs	r3, #1
 8001732:	4618      	mov	r0, r3
 8001734:	3710      	adds	r7, #16
 8001736:	46bd      	mov	sp, r7
 8001738:	bd80      	pop	{r7, pc}

0800173a <HAL_CAN_AddTxMessage>:
 800173a:	b480      	push	{r7}
 800173c:	b089      	sub	sp, #36	@ 0x24
 800173e:	af00      	add	r7, sp, #0
 8001740:	60f8      	str	r0, [r7, #12]
 8001742:	60b9      	str	r1, [r7, #8]
 8001744:	607a      	str	r2, [r7, #4]
 8001746:	603b      	str	r3, [r7, #0]
 8001748:	68fb      	ldr	r3, [r7, #12]
 800174a:	f893 3020 	ldrb.w	r3, [r3, #32]
 800174e:	77fb      	strb	r3, [r7, #31]
 8001750:	68fb      	ldr	r3, [r7, #12]
 8001752:	681b      	ldr	r3, [r3, #0]
 8001754:	689b      	ldr	r3, [r3, #8]
 8001756:	61bb      	str	r3, [r7, #24]
 8001758:	7ffb      	ldrb	r3, [r7, #31]
 800175a:	2b01      	cmp	r3, #1
 800175c:	d003      	beq.n	8001766 <HAL_CAN_AddTxMessage+0x2c>
 800175e:	7ffb      	ldrb	r3, [r7, #31]
 8001760:	2b02      	cmp	r3, #2
 8001762:	f040 80ad 	bne.w	80018c0 <HAL_CAN_AddTxMessage+0x186>
 8001766:	69bb      	ldr	r3, [r7, #24]
 8001768:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 800176c:	2b00      	cmp	r3, #0
 800176e:	d10a      	bne.n	8001786 <HAL_CAN_AddTxMessage+0x4c>
 8001770:	69bb      	ldr	r3, [r7, #24]
 8001772:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8001776:	2b00      	cmp	r3, #0
 8001778:	d105      	bne.n	8001786 <HAL_CAN_AddTxMessage+0x4c>
 800177a:	69bb      	ldr	r3, [r7, #24]
 800177c:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001780:	2b00      	cmp	r3, #0
 8001782:	f000 8095 	beq.w	80018b0 <HAL_CAN_AddTxMessage+0x176>
 8001786:	69bb      	ldr	r3, [r7, #24]
 8001788:	0e1b      	lsrs	r3, r3, #24
 800178a:	f003 0303 	and.w	r3, r3, #3
 800178e:	617b      	str	r3, [r7, #20]
 8001790:	2201      	movs	r2, #1
 8001792:	697b      	ldr	r3, [r7, #20]
 8001794:	409a      	lsls	r2, r3
 8001796:	683b      	ldr	r3, [r7, #0]
 8001798:	601a      	str	r2, [r3, #0]
 800179a:	68bb      	ldr	r3, [r7, #8]
 800179c:	689b      	ldr	r3, [r3, #8]
 800179e:	2b00      	cmp	r3, #0
 80017a0:	d10d      	bne.n	80017be <HAL_CAN_AddTxMessage+0x84>
 80017a2:	68bb      	ldr	r3, [r7, #8]
 80017a4:	681b      	ldr	r3, [r3, #0]
 80017a6:	055a      	lsls	r2, r3, #21
 80017a8:	68bb      	ldr	r3, [r7, #8]
 80017aa:	68db      	ldr	r3, [r3, #12]
 80017ac:	68f9      	ldr	r1, [r7, #12]
 80017ae:	6809      	ldr	r1, [r1, #0]
 80017b0:	431a      	orrs	r2, r3
 80017b2:	697b      	ldr	r3, [r7, #20]
 80017b4:	3318      	adds	r3, #24
 80017b6:	011b      	lsls	r3, r3, #4
 80017b8:	440b      	add	r3, r1
 80017ba:	601a      	str	r2, [r3, #0]
 80017bc:	e00f      	b.n	80017de <HAL_CAN_AddTxMessage+0xa4>
 80017be:	68bb      	ldr	r3, [r7, #8]
 80017c0:	685b      	ldr	r3, [r3, #4]
 80017c2:	00da      	lsls	r2, r3, #3
 80017c4:	68bb      	ldr	r3, [r7, #8]
 80017c6:	689b      	ldr	r3, [r3, #8]
 80017c8:	431a      	orrs	r2, r3
 80017ca:	68bb      	ldr	r3, [r7, #8]
 80017cc:	68db      	ldr	r3, [r3, #12]
 80017ce:	68f9      	ldr	r1, [r7, #12]
 80017d0:	6809      	ldr	r1, [r1, #0]
 80017d2:	431a      	orrs	r2, r3
 80017d4:	697b      	ldr	r3, [r7, #20]
 80017d6:	3318      	adds	r3, #24
 80017d8:	011b      	lsls	r3, r3, #4
 80017da:	440b      	add	r3, r1
 80017dc:	601a      	str	r2, [r3, #0]
 80017de:	68fb      	ldr	r3, [r7, #12]
 80017e0:	6819      	ldr	r1, [r3, #0]
 80017e2:	68bb      	ldr	r3, [r7, #8]
 80017e4:	691a      	ldr	r2, [r3, #16]
 80017e6:	697b      	ldr	r3, [r7, #20]
 80017e8:	3318      	adds	r3, #24
 80017ea:	011b      	lsls	r3, r3, #4
 80017ec:	440b      	add	r3, r1
 80017ee:	3304      	adds	r3, #4
 80017f0:	601a      	str	r2, [r3, #0]
 80017f2:	68bb      	ldr	r3, [r7, #8]
 80017f4:	7d1b      	ldrb	r3, [r3, #20]
 80017f6:	2b01      	cmp	r3, #1
 80017f8:	d111      	bne.n	800181e <HAL_CAN_AddTxMessage+0xe4>
 80017fa:	68fb      	ldr	r3, [r7, #12]
 80017fc:	681a      	ldr	r2, [r3, #0]
 80017fe:	697b      	ldr	r3, [r7, #20]
 8001800:	3318      	adds	r3, #24
 8001802:	011b      	lsls	r3, r3, #4
 8001804:	4413      	add	r3, r2
 8001806:	3304      	adds	r3, #4
 8001808:	681b      	ldr	r3, [r3, #0]
 800180a:	68fa      	ldr	r2, [r7, #12]
 800180c:	6811      	ldr	r1, [r2, #0]
 800180e:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8001812:	697b      	ldr	r3, [r7, #20]
 8001814:	3318      	adds	r3, #24
 8001816:	011b      	lsls	r3, r3, #4
 8001818:	440b      	add	r3, r1
 800181a:	3304      	adds	r3, #4
 800181c:	601a      	str	r2, [r3, #0]
 800181e:	687b      	ldr	r3, [r7, #4]
 8001820:	3307      	adds	r3, #7
 8001822:	781b      	ldrb	r3, [r3, #0]
 8001824:	061a      	lsls	r2, r3, #24
 8001826:	687b      	ldr	r3, [r7, #4]
 8001828:	3306      	adds	r3, #6
 800182a:	781b      	ldrb	r3, [r3, #0]
 800182c:	041b      	lsls	r3, r3, #16
 800182e:	431a      	orrs	r2, r3
 8001830:	687b      	ldr	r3, [r7, #4]
 8001832:	3305      	adds	r3, #5
 8001834:	781b      	ldrb	r3, [r3, #0]
 8001836:	021b      	lsls	r3, r3, #8
 8001838:	4313      	orrs	r3, r2
 800183a:	687a      	ldr	r2, [r7, #4]
 800183c:	3204      	adds	r2, #4
 800183e:	7812      	ldrb	r2, [r2, #0]
 8001840:	4610      	mov	r0, r2
 8001842:	68fa      	ldr	r2, [r7, #12]
 8001844:	6811      	ldr	r1, [r2, #0]
 8001846:	ea43 0200 	orr.w	r2, r3, r0
 800184a:	697b      	ldr	r3, [r7, #20]
 800184c:	011b      	lsls	r3, r3, #4
 800184e:	440b      	add	r3, r1
 8001850:	f503 73c6 	add.w	r3, r3, #396	@ 0x18c
 8001854:	601a      	str	r2, [r3, #0]
 8001856:	687b      	ldr	r3, [r7, #4]
 8001858:	3303      	adds	r3, #3
 800185a:	781b      	ldrb	r3, [r3, #0]
 800185c:	061a      	lsls	r2, r3, #24
 800185e:	687b      	ldr	r3, [r7, #4]
 8001860:	3302      	adds	r3, #2
 8001862:	781b      	ldrb	r3, [r3, #0]
 8001864:	041b      	lsls	r3, r3, #16
 8001866:	431a      	orrs	r2, r3
 8001868:	687b      	ldr	r3, [r7, #4]
 800186a:	3301      	adds	r3, #1
 800186c:	781b      	ldrb	r3, [r3, #0]
 800186e:	021b      	lsls	r3, r3, #8
 8001870:	4313      	orrs	r3, r2
 8001872:	687a      	ldr	r2, [r7, #4]
 8001874:	7812      	ldrb	r2, [r2, #0]
 8001876:	4610      	mov	r0, r2
 8001878:	68fa      	ldr	r2, [r7, #12]
 800187a:	6811      	ldr	r1, [r2, #0]
 800187c:	ea43 0200 	orr.w	r2, r3, r0
 8001880:	697b      	ldr	r3, [r7, #20]
 8001882:	011b      	lsls	r3, r3, #4
 8001884:	440b      	add	r3, r1
 8001886:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 800188a:	601a      	str	r2, [r3, #0]
 800188c:	68fb      	ldr	r3, [r7, #12]
 800188e:	681a      	ldr	r2, [r3, #0]
 8001890:	697b      	ldr	r3, [r7, #20]
 8001892:	3318      	adds	r3, #24
 8001894:	011b      	lsls	r3, r3, #4
 8001896:	4413      	add	r3, r2
 8001898:	681b      	ldr	r3, [r3, #0]
 800189a:	68fa      	ldr	r2, [r7, #12]
 800189c:	6811      	ldr	r1, [r2, #0]
 800189e:	f043 0201 	orr.w	r2, r3, #1
 80018a2:	697b      	ldr	r3, [r7, #20]
 80018a4:	3318      	adds	r3, #24
 80018a6:	011b      	lsls	r3, r3, #4
 80018a8:	440b      	add	r3, r1
 80018aa:	601a      	str	r2, [r3, #0]
 80018ac:	2300      	movs	r3, #0
 80018ae:	e00e      	b.n	80018ce <HAL_CAN_AddTxMessage+0x194>
 80018b0:	68fb      	ldr	r3, [r7, #12]
 80018b2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80018b4:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 80018b8:	68fb      	ldr	r3, [r7, #12]
 80018ba:	625a      	str	r2, [r3, #36]	@ 0x24
 80018bc:	2301      	movs	r3, #1
 80018be:	e006      	b.n	80018ce <HAL_CAN_AddTxMessage+0x194>
 80018c0:	68fb      	ldr	r3, [r7, #12]
 80018c2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80018c4:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 80018c8:	68fb      	ldr	r3, [r7, #12]
 80018ca:	625a      	str	r2, [r3, #36]	@ 0x24
 80018cc:	2301      	movs	r3, #1
 80018ce:	4618      	mov	r0, r3
 80018d0:	3724      	adds	r7, #36	@ 0x24
 80018d2:	46bd      	mov	sp, r7
 80018d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018d8:	4770      	bx	lr
	...

080018dc <__NVIC_SetPriorityGrouping>:
 80018dc:	b480      	push	{r7}
 80018de:	b085      	sub	sp, #20
 80018e0:	af00      	add	r7, sp, #0
 80018e2:	6078      	str	r0, [r7, #4]
 80018e4:	687b      	ldr	r3, [r7, #4]
 80018e6:	f003 0307 	and.w	r3, r3, #7
 80018ea:	60fb      	str	r3, [r7, #12]
 80018ec:	4b0c      	ldr	r3, [pc, #48]	@ (8001920 <__NVIC_SetPriorityGrouping+0x44>)
 80018ee:	68db      	ldr	r3, [r3, #12]
 80018f0:	60bb      	str	r3, [r7, #8]
 80018f2:	68ba      	ldr	r2, [r7, #8]
 80018f4:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 80018f8:	4013      	ands	r3, r2
 80018fa:	60bb      	str	r3, [r7, #8]
 80018fc:	68fb      	ldr	r3, [r7, #12]
 80018fe:	021a      	lsls	r2, r3, #8
 8001900:	68bb      	ldr	r3, [r7, #8]
 8001902:	4313      	orrs	r3, r2
 8001904:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8001908:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800190c:	60bb      	str	r3, [r7, #8]
 800190e:	4a04      	ldr	r2, [pc, #16]	@ (8001920 <__NVIC_SetPriorityGrouping+0x44>)
 8001910:	68bb      	ldr	r3, [r7, #8]
 8001912:	60d3      	str	r3, [r2, #12]
 8001914:	bf00      	nop
 8001916:	3714      	adds	r7, #20
 8001918:	46bd      	mov	sp, r7
 800191a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800191e:	4770      	bx	lr
 8001920:	e000ed00 	.word	0xe000ed00

08001924 <__NVIC_GetPriorityGrouping>:
 8001924:	b480      	push	{r7}
 8001926:	af00      	add	r7, sp, #0
 8001928:	4b04      	ldr	r3, [pc, #16]	@ (800193c <__NVIC_GetPriorityGrouping+0x18>)
 800192a:	68db      	ldr	r3, [r3, #12]
 800192c:	0a1b      	lsrs	r3, r3, #8
 800192e:	f003 0307 	and.w	r3, r3, #7
 8001932:	4618      	mov	r0, r3
 8001934:	46bd      	mov	sp, r7
 8001936:	f85d 7b04 	ldr.w	r7, [sp], #4
 800193a:	4770      	bx	lr
 800193c:	e000ed00 	.word	0xe000ed00

08001940 <__NVIC_SetPriority>:
 8001940:	b480      	push	{r7}
 8001942:	b083      	sub	sp, #12
 8001944:	af00      	add	r7, sp, #0
 8001946:	4603      	mov	r3, r0
 8001948:	6039      	str	r1, [r7, #0]
 800194a:	71fb      	strb	r3, [r7, #7]
 800194c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001950:	2b00      	cmp	r3, #0
 8001952:	db0a      	blt.n	800196a <__NVIC_SetPriority+0x2a>
 8001954:	683b      	ldr	r3, [r7, #0]
 8001956:	b2da      	uxtb	r2, r3
 8001958:	490c      	ldr	r1, [pc, #48]	@ (800198c <__NVIC_SetPriority+0x4c>)
 800195a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800195e:	0112      	lsls	r2, r2, #4
 8001960:	b2d2      	uxtb	r2, r2
 8001962:	440b      	add	r3, r1
 8001964:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8001968:	e00a      	b.n	8001980 <__NVIC_SetPriority+0x40>
 800196a:	683b      	ldr	r3, [r7, #0]
 800196c:	b2da      	uxtb	r2, r3
 800196e:	4908      	ldr	r1, [pc, #32]	@ (8001990 <__NVIC_SetPriority+0x50>)
 8001970:	79fb      	ldrb	r3, [r7, #7]
 8001972:	f003 030f 	and.w	r3, r3, #15
 8001976:	3b04      	subs	r3, #4
 8001978:	0112      	lsls	r2, r2, #4
 800197a:	b2d2      	uxtb	r2, r2
 800197c:	440b      	add	r3, r1
 800197e:	761a      	strb	r2, [r3, #24]
 8001980:	bf00      	nop
 8001982:	370c      	adds	r7, #12
 8001984:	46bd      	mov	sp, r7
 8001986:	f85d 7b04 	ldr.w	r7, [sp], #4
 800198a:	4770      	bx	lr
 800198c:	e000e100 	.word	0xe000e100
 8001990:	e000ed00 	.word	0xe000ed00

08001994 <NVIC_EncodePriority>:
 8001994:	b480      	push	{r7}
 8001996:	b089      	sub	sp, #36	@ 0x24
 8001998:	af00      	add	r7, sp, #0
 800199a:	60f8      	str	r0, [r7, #12]
 800199c:	60b9      	str	r1, [r7, #8]
 800199e:	607a      	str	r2, [r7, #4]
 80019a0:	68fb      	ldr	r3, [r7, #12]
 80019a2:	f003 0307 	and.w	r3, r3, #7
 80019a6:	61fb      	str	r3, [r7, #28]
 80019a8:	69fb      	ldr	r3, [r7, #28]
 80019aa:	f1c3 0307 	rsb	r3, r3, #7
 80019ae:	2b04      	cmp	r3, #4
 80019b0:	bf28      	it	cs
 80019b2:	2304      	movcs	r3, #4
 80019b4:	61bb      	str	r3, [r7, #24]
 80019b6:	69fb      	ldr	r3, [r7, #28]
 80019b8:	3304      	adds	r3, #4
 80019ba:	2b06      	cmp	r3, #6
 80019bc:	d902      	bls.n	80019c4 <NVIC_EncodePriority+0x30>
 80019be:	69fb      	ldr	r3, [r7, #28]
 80019c0:	3b03      	subs	r3, #3
 80019c2:	e000      	b.n	80019c6 <NVIC_EncodePriority+0x32>
 80019c4:	2300      	movs	r3, #0
 80019c6:	617b      	str	r3, [r7, #20]
 80019c8:	f04f 32ff 	mov.w	r2, #4294967295
 80019cc:	69bb      	ldr	r3, [r7, #24]
 80019ce:	fa02 f303 	lsl.w	r3, r2, r3
 80019d2:	43da      	mvns	r2, r3
 80019d4:	68bb      	ldr	r3, [r7, #8]
 80019d6:	401a      	ands	r2, r3
 80019d8:	697b      	ldr	r3, [r7, #20]
 80019da:	409a      	lsls	r2, r3
 80019dc:	f04f 31ff 	mov.w	r1, #4294967295
 80019e0:	697b      	ldr	r3, [r7, #20]
 80019e2:	fa01 f303 	lsl.w	r3, r1, r3
 80019e6:	43d9      	mvns	r1, r3
 80019e8:	687b      	ldr	r3, [r7, #4]
 80019ea:	400b      	ands	r3, r1
 80019ec:	4313      	orrs	r3, r2
 80019ee:	4618      	mov	r0, r3
 80019f0:	3724      	adds	r7, #36	@ 0x24
 80019f2:	46bd      	mov	sp, r7
 80019f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019f8:	4770      	bx	lr
	...

080019fc <SysTick_Config>:
 80019fc:	b580      	push	{r7, lr}
 80019fe:	b082      	sub	sp, #8
 8001a00:	af00      	add	r7, sp, #0
 8001a02:	6078      	str	r0, [r7, #4]
 8001a04:	687b      	ldr	r3, [r7, #4]
 8001a06:	3b01      	subs	r3, #1
 8001a08:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8001a0c:	d301      	bcc.n	8001a12 <SysTick_Config+0x16>
 8001a0e:	2301      	movs	r3, #1
 8001a10:	e00f      	b.n	8001a32 <SysTick_Config+0x36>
 8001a12:	4a0a      	ldr	r2, [pc, #40]	@ (8001a3c <SysTick_Config+0x40>)
 8001a14:	687b      	ldr	r3, [r7, #4]
 8001a16:	3b01      	subs	r3, #1
 8001a18:	6053      	str	r3, [r2, #4]
 8001a1a:	210f      	movs	r1, #15
 8001a1c:	f04f 30ff 	mov.w	r0, #4294967295
 8001a20:	f7ff ff8e 	bl	8001940 <__NVIC_SetPriority>
 8001a24:	4b05      	ldr	r3, [pc, #20]	@ (8001a3c <SysTick_Config+0x40>)
 8001a26:	2200      	movs	r2, #0
 8001a28:	609a      	str	r2, [r3, #8]
 8001a2a:	4b04      	ldr	r3, [pc, #16]	@ (8001a3c <SysTick_Config+0x40>)
 8001a2c:	2207      	movs	r2, #7
 8001a2e:	601a      	str	r2, [r3, #0]
 8001a30:	2300      	movs	r3, #0
 8001a32:	4618      	mov	r0, r3
 8001a34:	3708      	adds	r7, #8
 8001a36:	46bd      	mov	sp, r7
 8001a38:	bd80      	pop	{r7, pc}
 8001a3a:	bf00      	nop
 8001a3c:	e000e010 	.word	0xe000e010

08001a40 <HAL_NVIC_SetPriorityGrouping>:
 8001a40:	b580      	push	{r7, lr}
 8001a42:	b082      	sub	sp, #8
 8001a44:	af00      	add	r7, sp, #0
 8001a46:	6078      	str	r0, [r7, #4]
 8001a48:	6878      	ldr	r0, [r7, #4]
 8001a4a:	f7ff ff47 	bl	80018dc <__NVIC_SetPriorityGrouping>
 8001a4e:	bf00      	nop
 8001a50:	3708      	adds	r7, #8
 8001a52:	46bd      	mov	sp, r7
 8001a54:	bd80      	pop	{r7, pc}

08001a56 <HAL_NVIC_SetPriority>:
 8001a56:	b580      	push	{r7, lr}
 8001a58:	b086      	sub	sp, #24
 8001a5a:	af00      	add	r7, sp, #0
 8001a5c:	4603      	mov	r3, r0
 8001a5e:	60b9      	str	r1, [r7, #8]
 8001a60:	607a      	str	r2, [r7, #4]
 8001a62:	73fb      	strb	r3, [r7, #15]
 8001a64:	2300      	movs	r3, #0
 8001a66:	617b      	str	r3, [r7, #20]
 8001a68:	f7ff ff5c 	bl	8001924 <__NVIC_GetPriorityGrouping>
 8001a6c:	6178      	str	r0, [r7, #20]
 8001a6e:	687a      	ldr	r2, [r7, #4]
 8001a70:	68b9      	ldr	r1, [r7, #8]
 8001a72:	6978      	ldr	r0, [r7, #20]
 8001a74:	f7ff ff8e 	bl	8001994 <NVIC_EncodePriority>
 8001a78:	4602      	mov	r2, r0
 8001a7a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001a7e:	4611      	mov	r1, r2
 8001a80:	4618      	mov	r0, r3
 8001a82:	f7ff ff5d 	bl	8001940 <__NVIC_SetPriority>
 8001a86:	bf00      	nop
 8001a88:	3718      	adds	r7, #24
 8001a8a:	46bd      	mov	sp, r7
 8001a8c:	bd80      	pop	{r7, pc}

08001a8e <HAL_SYSTICK_Config>:
 8001a8e:	b580      	push	{r7, lr}
 8001a90:	b082      	sub	sp, #8
 8001a92:	af00      	add	r7, sp, #0
 8001a94:	6078      	str	r0, [r7, #4]
 8001a96:	6878      	ldr	r0, [r7, #4]
 8001a98:	f7ff ffb0 	bl	80019fc <SysTick_Config>
 8001a9c:	4603      	mov	r3, r0
 8001a9e:	4618      	mov	r0, r3
 8001aa0:	3708      	adds	r7, #8
 8001aa2:	46bd      	mov	sp, r7
 8001aa4:	bd80      	pop	{r7, pc}
	...

08001aa8 <HAL_GPIO_Init>:
 8001aa8:	b480      	push	{r7}
 8001aaa:	b089      	sub	sp, #36	@ 0x24
 8001aac:	af00      	add	r7, sp, #0
 8001aae:	6078      	str	r0, [r7, #4]
 8001ab0:	6039      	str	r1, [r7, #0]
 8001ab2:	2300      	movs	r3, #0
 8001ab4:	617b      	str	r3, [r7, #20]
 8001ab6:	2300      	movs	r3, #0
 8001ab8:	613b      	str	r3, [r7, #16]
 8001aba:	2300      	movs	r3, #0
 8001abc:	61bb      	str	r3, [r7, #24]
 8001abe:	2300      	movs	r3, #0
 8001ac0:	61fb      	str	r3, [r7, #28]
 8001ac2:	e165      	b.n	8001d90 <HAL_GPIO_Init+0x2e8>
 8001ac4:	2201      	movs	r2, #1
 8001ac6:	69fb      	ldr	r3, [r7, #28]
 8001ac8:	fa02 f303 	lsl.w	r3, r2, r3
 8001acc:	617b      	str	r3, [r7, #20]
 8001ace:	683b      	ldr	r3, [r7, #0]
 8001ad0:	681b      	ldr	r3, [r3, #0]
 8001ad2:	697a      	ldr	r2, [r7, #20]
 8001ad4:	4013      	ands	r3, r2
 8001ad6:	613b      	str	r3, [r7, #16]
 8001ad8:	693a      	ldr	r2, [r7, #16]
 8001ada:	697b      	ldr	r3, [r7, #20]
 8001adc:	429a      	cmp	r2, r3
 8001ade:	f040 8154 	bne.w	8001d8a <HAL_GPIO_Init+0x2e2>
 8001ae2:	683b      	ldr	r3, [r7, #0]
 8001ae4:	685b      	ldr	r3, [r3, #4]
 8001ae6:	f003 0303 	and.w	r3, r3, #3
 8001aea:	2b01      	cmp	r3, #1
 8001aec:	d005      	beq.n	8001afa <HAL_GPIO_Init+0x52>
 8001aee:	683b      	ldr	r3, [r7, #0]
 8001af0:	685b      	ldr	r3, [r3, #4]
 8001af2:	f003 0303 	and.w	r3, r3, #3
 8001af6:	2b02      	cmp	r3, #2
 8001af8:	d130      	bne.n	8001b5c <HAL_GPIO_Init+0xb4>
 8001afa:	687b      	ldr	r3, [r7, #4]
 8001afc:	689b      	ldr	r3, [r3, #8]
 8001afe:	61bb      	str	r3, [r7, #24]
 8001b00:	69fb      	ldr	r3, [r7, #28]
 8001b02:	005b      	lsls	r3, r3, #1
 8001b04:	2203      	movs	r2, #3
 8001b06:	fa02 f303 	lsl.w	r3, r2, r3
 8001b0a:	43db      	mvns	r3, r3
 8001b0c:	69ba      	ldr	r2, [r7, #24]
 8001b0e:	4013      	ands	r3, r2
 8001b10:	61bb      	str	r3, [r7, #24]
 8001b12:	683b      	ldr	r3, [r7, #0]
 8001b14:	68da      	ldr	r2, [r3, #12]
 8001b16:	69fb      	ldr	r3, [r7, #28]
 8001b18:	005b      	lsls	r3, r3, #1
 8001b1a:	fa02 f303 	lsl.w	r3, r2, r3
 8001b1e:	69ba      	ldr	r2, [r7, #24]
 8001b20:	4313      	orrs	r3, r2
 8001b22:	61bb      	str	r3, [r7, #24]
 8001b24:	687b      	ldr	r3, [r7, #4]
 8001b26:	69ba      	ldr	r2, [r7, #24]
 8001b28:	609a      	str	r2, [r3, #8]
 8001b2a:	687b      	ldr	r3, [r7, #4]
 8001b2c:	685b      	ldr	r3, [r3, #4]
 8001b2e:	61bb      	str	r3, [r7, #24]
 8001b30:	2201      	movs	r2, #1
 8001b32:	69fb      	ldr	r3, [r7, #28]
 8001b34:	fa02 f303 	lsl.w	r3, r2, r3
 8001b38:	43db      	mvns	r3, r3
 8001b3a:	69ba      	ldr	r2, [r7, #24]
 8001b3c:	4013      	ands	r3, r2
 8001b3e:	61bb      	str	r3, [r7, #24]
 8001b40:	683b      	ldr	r3, [r7, #0]
 8001b42:	685b      	ldr	r3, [r3, #4]
 8001b44:	091b      	lsrs	r3, r3, #4
 8001b46:	f003 0201 	and.w	r2, r3, #1
 8001b4a:	69fb      	ldr	r3, [r7, #28]
 8001b4c:	fa02 f303 	lsl.w	r3, r2, r3
 8001b50:	69ba      	ldr	r2, [r7, #24]
 8001b52:	4313      	orrs	r3, r2
 8001b54:	61bb      	str	r3, [r7, #24]
 8001b56:	687b      	ldr	r3, [r7, #4]
 8001b58:	69ba      	ldr	r2, [r7, #24]
 8001b5a:	605a      	str	r2, [r3, #4]
 8001b5c:	683b      	ldr	r3, [r7, #0]
 8001b5e:	685b      	ldr	r3, [r3, #4]
 8001b60:	f003 0303 	and.w	r3, r3, #3
 8001b64:	2b03      	cmp	r3, #3
 8001b66:	d017      	beq.n	8001b98 <HAL_GPIO_Init+0xf0>
 8001b68:	687b      	ldr	r3, [r7, #4]
 8001b6a:	68db      	ldr	r3, [r3, #12]
 8001b6c:	61bb      	str	r3, [r7, #24]
 8001b6e:	69fb      	ldr	r3, [r7, #28]
 8001b70:	005b      	lsls	r3, r3, #1
 8001b72:	2203      	movs	r2, #3
 8001b74:	fa02 f303 	lsl.w	r3, r2, r3
 8001b78:	43db      	mvns	r3, r3
 8001b7a:	69ba      	ldr	r2, [r7, #24]
 8001b7c:	4013      	ands	r3, r2
 8001b7e:	61bb      	str	r3, [r7, #24]
 8001b80:	683b      	ldr	r3, [r7, #0]
 8001b82:	689a      	ldr	r2, [r3, #8]
 8001b84:	69fb      	ldr	r3, [r7, #28]
 8001b86:	005b      	lsls	r3, r3, #1
 8001b88:	fa02 f303 	lsl.w	r3, r2, r3
 8001b8c:	69ba      	ldr	r2, [r7, #24]
 8001b8e:	4313      	orrs	r3, r2
 8001b90:	61bb      	str	r3, [r7, #24]
 8001b92:	687b      	ldr	r3, [r7, #4]
 8001b94:	69ba      	ldr	r2, [r7, #24]
 8001b96:	60da      	str	r2, [r3, #12]
 8001b98:	683b      	ldr	r3, [r7, #0]
 8001b9a:	685b      	ldr	r3, [r3, #4]
 8001b9c:	f003 0303 	and.w	r3, r3, #3
 8001ba0:	2b02      	cmp	r3, #2
 8001ba2:	d123      	bne.n	8001bec <HAL_GPIO_Init+0x144>
 8001ba4:	69fb      	ldr	r3, [r7, #28]
 8001ba6:	08da      	lsrs	r2, r3, #3
 8001ba8:	687b      	ldr	r3, [r7, #4]
 8001baa:	3208      	adds	r2, #8
 8001bac:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001bb0:	61bb      	str	r3, [r7, #24]
 8001bb2:	69fb      	ldr	r3, [r7, #28]
 8001bb4:	f003 0307 	and.w	r3, r3, #7
 8001bb8:	009b      	lsls	r3, r3, #2
 8001bba:	220f      	movs	r2, #15
 8001bbc:	fa02 f303 	lsl.w	r3, r2, r3
 8001bc0:	43db      	mvns	r3, r3
 8001bc2:	69ba      	ldr	r2, [r7, #24]
 8001bc4:	4013      	ands	r3, r2
 8001bc6:	61bb      	str	r3, [r7, #24]
 8001bc8:	683b      	ldr	r3, [r7, #0]
 8001bca:	691a      	ldr	r2, [r3, #16]
 8001bcc:	69fb      	ldr	r3, [r7, #28]
 8001bce:	f003 0307 	and.w	r3, r3, #7
 8001bd2:	009b      	lsls	r3, r3, #2
 8001bd4:	fa02 f303 	lsl.w	r3, r2, r3
 8001bd8:	69ba      	ldr	r2, [r7, #24]
 8001bda:	4313      	orrs	r3, r2
 8001bdc:	61bb      	str	r3, [r7, #24]
 8001bde:	69fb      	ldr	r3, [r7, #28]
 8001be0:	08da      	lsrs	r2, r3, #3
 8001be2:	687b      	ldr	r3, [r7, #4]
 8001be4:	3208      	adds	r2, #8
 8001be6:	69b9      	ldr	r1, [r7, #24]
 8001be8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8001bec:	687b      	ldr	r3, [r7, #4]
 8001bee:	681b      	ldr	r3, [r3, #0]
 8001bf0:	61bb      	str	r3, [r7, #24]
 8001bf2:	69fb      	ldr	r3, [r7, #28]
 8001bf4:	005b      	lsls	r3, r3, #1
 8001bf6:	2203      	movs	r2, #3
 8001bf8:	fa02 f303 	lsl.w	r3, r2, r3
 8001bfc:	43db      	mvns	r3, r3
 8001bfe:	69ba      	ldr	r2, [r7, #24]
 8001c00:	4013      	ands	r3, r2
 8001c02:	61bb      	str	r3, [r7, #24]
 8001c04:	683b      	ldr	r3, [r7, #0]
 8001c06:	685b      	ldr	r3, [r3, #4]
 8001c08:	f003 0203 	and.w	r2, r3, #3
 8001c0c:	69fb      	ldr	r3, [r7, #28]
 8001c0e:	005b      	lsls	r3, r3, #1
 8001c10:	fa02 f303 	lsl.w	r3, r2, r3
 8001c14:	69ba      	ldr	r2, [r7, #24]
 8001c16:	4313      	orrs	r3, r2
 8001c18:	61bb      	str	r3, [r7, #24]
 8001c1a:	687b      	ldr	r3, [r7, #4]
 8001c1c:	69ba      	ldr	r2, [r7, #24]
 8001c1e:	601a      	str	r2, [r3, #0]
 8001c20:	683b      	ldr	r3, [r7, #0]
 8001c22:	685b      	ldr	r3, [r3, #4]
 8001c24:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8001c28:	2b00      	cmp	r3, #0
 8001c2a:	f000 80ae 	beq.w	8001d8a <HAL_GPIO_Init+0x2e2>
 8001c2e:	2300      	movs	r3, #0
 8001c30:	60fb      	str	r3, [r7, #12]
 8001c32:	4b5d      	ldr	r3, [pc, #372]	@ (8001da8 <HAL_GPIO_Init+0x300>)
 8001c34:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001c36:	4a5c      	ldr	r2, [pc, #368]	@ (8001da8 <HAL_GPIO_Init+0x300>)
 8001c38:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001c3c:	6453      	str	r3, [r2, #68]	@ 0x44
 8001c3e:	4b5a      	ldr	r3, [pc, #360]	@ (8001da8 <HAL_GPIO_Init+0x300>)
 8001c40:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001c42:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001c46:	60fb      	str	r3, [r7, #12]
 8001c48:	68fb      	ldr	r3, [r7, #12]
 8001c4a:	4a58      	ldr	r2, [pc, #352]	@ (8001dac <HAL_GPIO_Init+0x304>)
 8001c4c:	69fb      	ldr	r3, [r7, #28]
 8001c4e:	089b      	lsrs	r3, r3, #2
 8001c50:	3302      	adds	r3, #2
 8001c52:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001c56:	61bb      	str	r3, [r7, #24]
 8001c58:	69fb      	ldr	r3, [r7, #28]
 8001c5a:	f003 0303 	and.w	r3, r3, #3
 8001c5e:	009b      	lsls	r3, r3, #2
 8001c60:	220f      	movs	r2, #15
 8001c62:	fa02 f303 	lsl.w	r3, r2, r3
 8001c66:	43db      	mvns	r3, r3
 8001c68:	69ba      	ldr	r2, [r7, #24]
 8001c6a:	4013      	ands	r3, r2
 8001c6c:	61bb      	str	r3, [r7, #24]
 8001c6e:	687b      	ldr	r3, [r7, #4]
 8001c70:	4a4f      	ldr	r2, [pc, #316]	@ (8001db0 <HAL_GPIO_Init+0x308>)
 8001c72:	4293      	cmp	r3, r2
 8001c74:	d025      	beq.n	8001cc2 <HAL_GPIO_Init+0x21a>
 8001c76:	687b      	ldr	r3, [r7, #4]
 8001c78:	4a4e      	ldr	r2, [pc, #312]	@ (8001db4 <HAL_GPIO_Init+0x30c>)
 8001c7a:	4293      	cmp	r3, r2
 8001c7c:	d01f      	beq.n	8001cbe <HAL_GPIO_Init+0x216>
 8001c7e:	687b      	ldr	r3, [r7, #4]
 8001c80:	4a4d      	ldr	r2, [pc, #308]	@ (8001db8 <HAL_GPIO_Init+0x310>)
 8001c82:	4293      	cmp	r3, r2
 8001c84:	d019      	beq.n	8001cba <HAL_GPIO_Init+0x212>
 8001c86:	687b      	ldr	r3, [r7, #4]
 8001c88:	4a4c      	ldr	r2, [pc, #304]	@ (8001dbc <HAL_GPIO_Init+0x314>)
 8001c8a:	4293      	cmp	r3, r2
 8001c8c:	d013      	beq.n	8001cb6 <HAL_GPIO_Init+0x20e>
 8001c8e:	687b      	ldr	r3, [r7, #4]
 8001c90:	4a4b      	ldr	r2, [pc, #300]	@ (8001dc0 <HAL_GPIO_Init+0x318>)
 8001c92:	4293      	cmp	r3, r2
 8001c94:	d00d      	beq.n	8001cb2 <HAL_GPIO_Init+0x20a>
 8001c96:	687b      	ldr	r3, [r7, #4]
 8001c98:	4a4a      	ldr	r2, [pc, #296]	@ (8001dc4 <HAL_GPIO_Init+0x31c>)
 8001c9a:	4293      	cmp	r3, r2
 8001c9c:	d007      	beq.n	8001cae <HAL_GPIO_Init+0x206>
 8001c9e:	687b      	ldr	r3, [r7, #4]
 8001ca0:	4a49      	ldr	r2, [pc, #292]	@ (8001dc8 <HAL_GPIO_Init+0x320>)
 8001ca2:	4293      	cmp	r3, r2
 8001ca4:	d101      	bne.n	8001caa <HAL_GPIO_Init+0x202>
 8001ca6:	2306      	movs	r3, #6
 8001ca8:	e00c      	b.n	8001cc4 <HAL_GPIO_Init+0x21c>
 8001caa:	2307      	movs	r3, #7
 8001cac:	e00a      	b.n	8001cc4 <HAL_GPIO_Init+0x21c>
 8001cae:	2305      	movs	r3, #5
 8001cb0:	e008      	b.n	8001cc4 <HAL_GPIO_Init+0x21c>
 8001cb2:	2304      	movs	r3, #4
 8001cb4:	e006      	b.n	8001cc4 <HAL_GPIO_Init+0x21c>
 8001cb6:	2303      	movs	r3, #3
 8001cb8:	e004      	b.n	8001cc4 <HAL_GPIO_Init+0x21c>
 8001cba:	2302      	movs	r3, #2
 8001cbc:	e002      	b.n	8001cc4 <HAL_GPIO_Init+0x21c>
 8001cbe:	2301      	movs	r3, #1
 8001cc0:	e000      	b.n	8001cc4 <HAL_GPIO_Init+0x21c>
 8001cc2:	2300      	movs	r3, #0
 8001cc4:	69fa      	ldr	r2, [r7, #28]
 8001cc6:	f002 0203 	and.w	r2, r2, #3
 8001cca:	0092      	lsls	r2, r2, #2
 8001ccc:	4093      	lsls	r3, r2
 8001cce:	69ba      	ldr	r2, [r7, #24]
 8001cd0:	4313      	orrs	r3, r2
 8001cd2:	61bb      	str	r3, [r7, #24]
 8001cd4:	4935      	ldr	r1, [pc, #212]	@ (8001dac <HAL_GPIO_Init+0x304>)
 8001cd6:	69fb      	ldr	r3, [r7, #28]
 8001cd8:	089b      	lsrs	r3, r3, #2
 8001cda:	3302      	adds	r3, #2
 8001cdc:	69ba      	ldr	r2, [r7, #24]
 8001cde:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001ce2:	4b3a      	ldr	r3, [pc, #232]	@ (8001dcc <HAL_GPIO_Init+0x324>)
 8001ce4:	689b      	ldr	r3, [r3, #8]
 8001ce6:	61bb      	str	r3, [r7, #24]
 8001ce8:	693b      	ldr	r3, [r7, #16]
 8001cea:	43db      	mvns	r3, r3
 8001cec:	69ba      	ldr	r2, [r7, #24]
 8001cee:	4013      	ands	r3, r2
 8001cf0:	61bb      	str	r3, [r7, #24]
 8001cf2:	683b      	ldr	r3, [r7, #0]
 8001cf4:	685b      	ldr	r3, [r3, #4]
 8001cf6:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8001cfa:	2b00      	cmp	r3, #0
 8001cfc:	d003      	beq.n	8001d06 <HAL_GPIO_Init+0x25e>
 8001cfe:	69ba      	ldr	r2, [r7, #24]
 8001d00:	693b      	ldr	r3, [r7, #16]
 8001d02:	4313      	orrs	r3, r2
 8001d04:	61bb      	str	r3, [r7, #24]
 8001d06:	4a31      	ldr	r2, [pc, #196]	@ (8001dcc <HAL_GPIO_Init+0x324>)
 8001d08:	69bb      	ldr	r3, [r7, #24]
 8001d0a:	6093      	str	r3, [r2, #8]
 8001d0c:	4b2f      	ldr	r3, [pc, #188]	@ (8001dcc <HAL_GPIO_Init+0x324>)
 8001d0e:	68db      	ldr	r3, [r3, #12]
 8001d10:	61bb      	str	r3, [r7, #24]
 8001d12:	693b      	ldr	r3, [r7, #16]
 8001d14:	43db      	mvns	r3, r3
 8001d16:	69ba      	ldr	r2, [r7, #24]
 8001d18:	4013      	ands	r3, r2
 8001d1a:	61bb      	str	r3, [r7, #24]
 8001d1c:	683b      	ldr	r3, [r7, #0]
 8001d1e:	685b      	ldr	r3, [r3, #4]
 8001d20:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8001d24:	2b00      	cmp	r3, #0
 8001d26:	d003      	beq.n	8001d30 <HAL_GPIO_Init+0x288>
 8001d28:	69ba      	ldr	r2, [r7, #24]
 8001d2a:	693b      	ldr	r3, [r7, #16]
 8001d2c:	4313      	orrs	r3, r2
 8001d2e:	61bb      	str	r3, [r7, #24]
 8001d30:	4a26      	ldr	r2, [pc, #152]	@ (8001dcc <HAL_GPIO_Init+0x324>)
 8001d32:	69bb      	ldr	r3, [r7, #24]
 8001d34:	60d3      	str	r3, [r2, #12]
 8001d36:	4b25      	ldr	r3, [pc, #148]	@ (8001dcc <HAL_GPIO_Init+0x324>)
 8001d38:	685b      	ldr	r3, [r3, #4]
 8001d3a:	61bb      	str	r3, [r7, #24]
 8001d3c:	693b      	ldr	r3, [r7, #16]
 8001d3e:	43db      	mvns	r3, r3
 8001d40:	69ba      	ldr	r2, [r7, #24]
 8001d42:	4013      	ands	r3, r2
 8001d44:	61bb      	str	r3, [r7, #24]
 8001d46:	683b      	ldr	r3, [r7, #0]
 8001d48:	685b      	ldr	r3, [r3, #4]
 8001d4a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001d4e:	2b00      	cmp	r3, #0
 8001d50:	d003      	beq.n	8001d5a <HAL_GPIO_Init+0x2b2>
 8001d52:	69ba      	ldr	r2, [r7, #24]
 8001d54:	693b      	ldr	r3, [r7, #16]
 8001d56:	4313      	orrs	r3, r2
 8001d58:	61bb      	str	r3, [r7, #24]
 8001d5a:	4a1c      	ldr	r2, [pc, #112]	@ (8001dcc <HAL_GPIO_Init+0x324>)
 8001d5c:	69bb      	ldr	r3, [r7, #24]
 8001d5e:	6053      	str	r3, [r2, #4]
 8001d60:	4b1a      	ldr	r3, [pc, #104]	@ (8001dcc <HAL_GPIO_Init+0x324>)
 8001d62:	681b      	ldr	r3, [r3, #0]
 8001d64:	61bb      	str	r3, [r7, #24]
 8001d66:	693b      	ldr	r3, [r7, #16]
 8001d68:	43db      	mvns	r3, r3
 8001d6a:	69ba      	ldr	r2, [r7, #24]
 8001d6c:	4013      	ands	r3, r2
 8001d6e:	61bb      	str	r3, [r7, #24]
 8001d70:	683b      	ldr	r3, [r7, #0]
 8001d72:	685b      	ldr	r3, [r3, #4]
 8001d74:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001d78:	2b00      	cmp	r3, #0
 8001d7a:	d003      	beq.n	8001d84 <HAL_GPIO_Init+0x2dc>
 8001d7c:	69ba      	ldr	r2, [r7, #24]
 8001d7e:	693b      	ldr	r3, [r7, #16]
 8001d80:	4313      	orrs	r3, r2
 8001d82:	61bb      	str	r3, [r7, #24]
 8001d84:	4a11      	ldr	r2, [pc, #68]	@ (8001dcc <HAL_GPIO_Init+0x324>)
 8001d86:	69bb      	ldr	r3, [r7, #24]
 8001d88:	6013      	str	r3, [r2, #0]
 8001d8a:	69fb      	ldr	r3, [r7, #28]
 8001d8c:	3301      	adds	r3, #1
 8001d8e:	61fb      	str	r3, [r7, #28]
 8001d90:	69fb      	ldr	r3, [r7, #28]
 8001d92:	2b0f      	cmp	r3, #15
 8001d94:	f67f ae96 	bls.w	8001ac4 <HAL_GPIO_Init+0x1c>
 8001d98:	bf00      	nop
 8001d9a:	bf00      	nop
 8001d9c:	3724      	adds	r7, #36	@ 0x24
 8001d9e:	46bd      	mov	sp, r7
 8001da0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001da4:	4770      	bx	lr
 8001da6:	bf00      	nop
 8001da8:	40023800 	.word	0x40023800
 8001dac:	40013800 	.word	0x40013800
 8001db0:	40020000 	.word	0x40020000
 8001db4:	40020400 	.word	0x40020400
 8001db8:	40020800 	.word	0x40020800
 8001dbc:	40020c00 	.word	0x40020c00
 8001dc0:	40021000 	.word	0x40021000
 8001dc4:	40021400 	.word	0x40021400
 8001dc8:	40021800 	.word	0x40021800
 8001dcc:	40013c00 	.word	0x40013c00

08001dd0 <HAL_I2C_Init>:
 8001dd0:	b580      	push	{r7, lr}
 8001dd2:	b084      	sub	sp, #16
 8001dd4:	af00      	add	r7, sp, #0
 8001dd6:	6078      	str	r0, [r7, #4]
 8001dd8:	687b      	ldr	r3, [r7, #4]
 8001dda:	2b00      	cmp	r3, #0
 8001ddc:	d101      	bne.n	8001de2 <HAL_I2C_Init+0x12>
 8001dde:	2301      	movs	r3, #1
 8001de0:	e12b      	b.n	800203a <HAL_I2C_Init+0x26a>
 8001de2:	687b      	ldr	r3, [r7, #4]
 8001de4:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8001de8:	b2db      	uxtb	r3, r3
 8001dea:	2b00      	cmp	r3, #0
 8001dec:	d106      	bne.n	8001dfc <HAL_I2C_Init+0x2c>
 8001dee:	687b      	ldr	r3, [r7, #4]
 8001df0:	2200      	movs	r2, #0
 8001df2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001df6:	6878      	ldr	r0, [r7, #4]
 8001df8:	f7fe ff9a 	bl	8000d30 <HAL_I2C_MspInit>
 8001dfc:	687b      	ldr	r3, [r7, #4]
 8001dfe:	2224      	movs	r2, #36	@ 0x24
 8001e00:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8001e04:	687b      	ldr	r3, [r7, #4]
 8001e06:	681b      	ldr	r3, [r3, #0]
 8001e08:	681a      	ldr	r2, [r3, #0]
 8001e0a:	687b      	ldr	r3, [r7, #4]
 8001e0c:	681b      	ldr	r3, [r3, #0]
 8001e0e:	f022 0201 	bic.w	r2, r2, #1
 8001e12:	601a      	str	r2, [r3, #0]
 8001e14:	687b      	ldr	r3, [r7, #4]
 8001e16:	681b      	ldr	r3, [r3, #0]
 8001e18:	681a      	ldr	r2, [r3, #0]
 8001e1a:	687b      	ldr	r3, [r7, #4]
 8001e1c:	681b      	ldr	r3, [r3, #0]
 8001e1e:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8001e22:	601a      	str	r2, [r3, #0]
 8001e24:	687b      	ldr	r3, [r7, #4]
 8001e26:	681b      	ldr	r3, [r3, #0]
 8001e28:	681a      	ldr	r2, [r3, #0]
 8001e2a:	687b      	ldr	r3, [r7, #4]
 8001e2c:	681b      	ldr	r3, [r3, #0]
 8001e2e:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8001e32:	601a      	str	r2, [r3, #0]
 8001e34:	f001 f908 	bl	8003048 <HAL_RCC_GetPCLK1Freq>
 8001e38:	60f8      	str	r0, [r7, #12]
 8001e3a:	687b      	ldr	r3, [r7, #4]
 8001e3c:	685b      	ldr	r3, [r3, #4]
 8001e3e:	4a81      	ldr	r2, [pc, #516]	@ (8002044 <HAL_I2C_Init+0x274>)
 8001e40:	4293      	cmp	r3, r2
 8001e42:	d807      	bhi.n	8001e54 <HAL_I2C_Init+0x84>
 8001e44:	68fb      	ldr	r3, [r7, #12]
 8001e46:	4a80      	ldr	r2, [pc, #512]	@ (8002048 <HAL_I2C_Init+0x278>)
 8001e48:	4293      	cmp	r3, r2
 8001e4a:	bf94      	ite	ls
 8001e4c:	2301      	movls	r3, #1
 8001e4e:	2300      	movhi	r3, #0
 8001e50:	b2db      	uxtb	r3, r3
 8001e52:	e006      	b.n	8001e62 <HAL_I2C_Init+0x92>
 8001e54:	68fb      	ldr	r3, [r7, #12]
 8001e56:	4a7d      	ldr	r2, [pc, #500]	@ (800204c <HAL_I2C_Init+0x27c>)
 8001e58:	4293      	cmp	r3, r2
 8001e5a:	bf94      	ite	ls
 8001e5c:	2301      	movls	r3, #1
 8001e5e:	2300      	movhi	r3, #0
 8001e60:	b2db      	uxtb	r3, r3
 8001e62:	2b00      	cmp	r3, #0
 8001e64:	d001      	beq.n	8001e6a <HAL_I2C_Init+0x9a>
 8001e66:	2301      	movs	r3, #1
 8001e68:	e0e7      	b.n	800203a <HAL_I2C_Init+0x26a>
 8001e6a:	68fb      	ldr	r3, [r7, #12]
 8001e6c:	4a78      	ldr	r2, [pc, #480]	@ (8002050 <HAL_I2C_Init+0x280>)
 8001e6e:	fba2 2303 	umull	r2, r3, r2, r3
 8001e72:	0c9b      	lsrs	r3, r3, #18
 8001e74:	60bb      	str	r3, [r7, #8]
 8001e76:	687b      	ldr	r3, [r7, #4]
 8001e78:	681b      	ldr	r3, [r3, #0]
 8001e7a:	685b      	ldr	r3, [r3, #4]
 8001e7c:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8001e80:	687b      	ldr	r3, [r7, #4]
 8001e82:	681b      	ldr	r3, [r3, #0]
 8001e84:	68ba      	ldr	r2, [r7, #8]
 8001e86:	430a      	orrs	r2, r1
 8001e88:	605a      	str	r2, [r3, #4]
 8001e8a:	687b      	ldr	r3, [r7, #4]
 8001e8c:	681b      	ldr	r3, [r3, #0]
 8001e8e:	6a1b      	ldr	r3, [r3, #32]
 8001e90:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8001e94:	687b      	ldr	r3, [r7, #4]
 8001e96:	685b      	ldr	r3, [r3, #4]
 8001e98:	4a6a      	ldr	r2, [pc, #424]	@ (8002044 <HAL_I2C_Init+0x274>)
 8001e9a:	4293      	cmp	r3, r2
 8001e9c:	d802      	bhi.n	8001ea4 <HAL_I2C_Init+0xd4>
 8001e9e:	68bb      	ldr	r3, [r7, #8]
 8001ea0:	3301      	adds	r3, #1
 8001ea2:	e009      	b.n	8001eb8 <HAL_I2C_Init+0xe8>
 8001ea4:	68bb      	ldr	r3, [r7, #8]
 8001ea6:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8001eaa:	fb02 f303 	mul.w	r3, r2, r3
 8001eae:	4a69      	ldr	r2, [pc, #420]	@ (8002054 <HAL_I2C_Init+0x284>)
 8001eb0:	fba2 2303 	umull	r2, r3, r2, r3
 8001eb4:	099b      	lsrs	r3, r3, #6
 8001eb6:	3301      	adds	r3, #1
 8001eb8:	687a      	ldr	r2, [r7, #4]
 8001eba:	6812      	ldr	r2, [r2, #0]
 8001ebc:	430b      	orrs	r3, r1
 8001ebe:	6213      	str	r3, [r2, #32]
 8001ec0:	687b      	ldr	r3, [r7, #4]
 8001ec2:	681b      	ldr	r3, [r3, #0]
 8001ec4:	69db      	ldr	r3, [r3, #28]
 8001ec6:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 8001eca:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 8001ece:	687b      	ldr	r3, [r7, #4]
 8001ed0:	685b      	ldr	r3, [r3, #4]
 8001ed2:	495c      	ldr	r1, [pc, #368]	@ (8002044 <HAL_I2C_Init+0x274>)
 8001ed4:	428b      	cmp	r3, r1
 8001ed6:	d819      	bhi.n	8001f0c <HAL_I2C_Init+0x13c>
 8001ed8:	68fb      	ldr	r3, [r7, #12]
 8001eda:	1e59      	subs	r1, r3, #1
 8001edc:	687b      	ldr	r3, [r7, #4]
 8001ede:	685b      	ldr	r3, [r3, #4]
 8001ee0:	005b      	lsls	r3, r3, #1
 8001ee2:	fbb1 f3f3 	udiv	r3, r1, r3
 8001ee6:	1c59      	adds	r1, r3, #1
 8001ee8:	f640 73fc 	movw	r3, #4092	@ 0xffc
 8001eec:	400b      	ands	r3, r1
 8001eee:	2b00      	cmp	r3, #0
 8001ef0:	d00a      	beq.n	8001f08 <HAL_I2C_Init+0x138>
 8001ef2:	68fb      	ldr	r3, [r7, #12]
 8001ef4:	1e59      	subs	r1, r3, #1
 8001ef6:	687b      	ldr	r3, [r7, #4]
 8001ef8:	685b      	ldr	r3, [r3, #4]
 8001efa:	005b      	lsls	r3, r3, #1
 8001efc:	fbb1 f3f3 	udiv	r3, r1, r3
 8001f00:	3301      	adds	r3, #1
 8001f02:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001f06:	e051      	b.n	8001fac <HAL_I2C_Init+0x1dc>
 8001f08:	2304      	movs	r3, #4
 8001f0a:	e04f      	b.n	8001fac <HAL_I2C_Init+0x1dc>
 8001f0c:	687b      	ldr	r3, [r7, #4]
 8001f0e:	689b      	ldr	r3, [r3, #8]
 8001f10:	2b00      	cmp	r3, #0
 8001f12:	d111      	bne.n	8001f38 <HAL_I2C_Init+0x168>
 8001f14:	68fb      	ldr	r3, [r7, #12]
 8001f16:	1e58      	subs	r0, r3, #1
 8001f18:	687b      	ldr	r3, [r7, #4]
 8001f1a:	6859      	ldr	r1, [r3, #4]
 8001f1c:	460b      	mov	r3, r1
 8001f1e:	005b      	lsls	r3, r3, #1
 8001f20:	440b      	add	r3, r1
 8001f22:	fbb0 f3f3 	udiv	r3, r0, r3
 8001f26:	3301      	adds	r3, #1
 8001f28:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001f2c:	2b00      	cmp	r3, #0
 8001f2e:	bf0c      	ite	eq
 8001f30:	2301      	moveq	r3, #1
 8001f32:	2300      	movne	r3, #0
 8001f34:	b2db      	uxtb	r3, r3
 8001f36:	e012      	b.n	8001f5e <HAL_I2C_Init+0x18e>
 8001f38:	68fb      	ldr	r3, [r7, #12]
 8001f3a:	1e58      	subs	r0, r3, #1
 8001f3c:	687b      	ldr	r3, [r7, #4]
 8001f3e:	6859      	ldr	r1, [r3, #4]
 8001f40:	460b      	mov	r3, r1
 8001f42:	009b      	lsls	r3, r3, #2
 8001f44:	440b      	add	r3, r1
 8001f46:	0099      	lsls	r1, r3, #2
 8001f48:	440b      	add	r3, r1
 8001f4a:	fbb0 f3f3 	udiv	r3, r0, r3
 8001f4e:	3301      	adds	r3, #1
 8001f50:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001f54:	2b00      	cmp	r3, #0
 8001f56:	bf0c      	ite	eq
 8001f58:	2301      	moveq	r3, #1
 8001f5a:	2300      	movne	r3, #0
 8001f5c:	b2db      	uxtb	r3, r3
 8001f5e:	2b00      	cmp	r3, #0
 8001f60:	d001      	beq.n	8001f66 <HAL_I2C_Init+0x196>
 8001f62:	2301      	movs	r3, #1
 8001f64:	e022      	b.n	8001fac <HAL_I2C_Init+0x1dc>
 8001f66:	687b      	ldr	r3, [r7, #4]
 8001f68:	689b      	ldr	r3, [r3, #8]
 8001f6a:	2b00      	cmp	r3, #0
 8001f6c:	d10e      	bne.n	8001f8c <HAL_I2C_Init+0x1bc>
 8001f6e:	68fb      	ldr	r3, [r7, #12]
 8001f70:	1e58      	subs	r0, r3, #1
 8001f72:	687b      	ldr	r3, [r7, #4]
 8001f74:	6859      	ldr	r1, [r3, #4]
 8001f76:	460b      	mov	r3, r1
 8001f78:	005b      	lsls	r3, r3, #1
 8001f7a:	440b      	add	r3, r1
 8001f7c:	fbb0 f3f3 	udiv	r3, r0, r3
 8001f80:	3301      	adds	r3, #1
 8001f82:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001f86:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8001f8a:	e00f      	b.n	8001fac <HAL_I2C_Init+0x1dc>
 8001f8c:	68fb      	ldr	r3, [r7, #12]
 8001f8e:	1e58      	subs	r0, r3, #1
 8001f90:	687b      	ldr	r3, [r7, #4]
 8001f92:	6859      	ldr	r1, [r3, #4]
 8001f94:	460b      	mov	r3, r1
 8001f96:	009b      	lsls	r3, r3, #2
 8001f98:	440b      	add	r3, r1
 8001f9a:	0099      	lsls	r1, r3, #2
 8001f9c:	440b      	add	r3, r1
 8001f9e:	fbb0 f3f3 	udiv	r3, r0, r3
 8001fa2:	3301      	adds	r3, #1
 8001fa4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001fa8:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8001fac:	6879      	ldr	r1, [r7, #4]
 8001fae:	6809      	ldr	r1, [r1, #0]
 8001fb0:	4313      	orrs	r3, r2
 8001fb2:	61cb      	str	r3, [r1, #28]
 8001fb4:	687b      	ldr	r3, [r7, #4]
 8001fb6:	681b      	ldr	r3, [r3, #0]
 8001fb8:	681b      	ldr	r3, [r3, #0]
 8001fba:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 8001fbe:	687b      	ldr	r3, [r7, #4]
 8001fc0:	69da      	ldr	r2, [r3, #28]
 8001fc2:	687b      	ldr	r3, [r7, #4]
 8001fc4:	6a1b      	ldr	r3, [r3, #32]
 8001fc6:	431a      	orrs	r2, r3
 8001fc8:	687b      	ldr	r3, [r7, #4]
 8001fca:	681b      	ldr	r3, [r3, #0]
 8001fcc:	430a      	orrs	r2, r1
 8001fce:	601a      	str	r2, [r3, #0]
 8001fd0:	687b      	ldr	r3, [r7, #4]
 8001fd2:	681b      	ldr	r3, [r3, #0]
 8001fd4:	689b      	ldr	r3, [r3, #8]
 8001fd6:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 8001fda:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8001fde:	687a      	ldr	r2, [r7, #4]
 8001fe0:	6911      	ldr	r1, [r2, #16]
 8001fe2:	687a      	ldr	r2, [r7, #4]
 8001fe4:	68d2      	ldr	r2, [r2, #12]
 8001fe6:	4311      	orrs	r1, r2
 8001fe8:	687a      	ldr	r2, [r7, #4]
 8001fea:	6812      	ldr	r2, [r2, #0]
 8001fec:	430b      	orrs	r3, r1
 8001fee:	6093      	str	r3, [r2, #8]
 8001ff0:	687b      	ldr	r3, [r7, #4]
 8001ff2:	681b      	ldr	r3, [r3, #0]
 8001ff4:	68db      	ldr	r3, [r3, #12]
 8001ff6:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 8001ffa:	687b      	ldr	r3, [r7, #4]
 8001ffc:	695a      	ldr	r2, [r3, #20]
 8001ffe:	687b      	ldr	r3, [r7, #4]
 8002000:	699b      	ldr	r3, [r3, #24]
 8002002:	431a      	orrs	r2, r3
 8002004:	687b      	ldr	r3, [r7, #4]
 8002006:	681b      	ldr	r3, [r3, #0]
 8002008:	430a      	orrs	r2, r1
 800200a:	60da      	str	r2, [r3, #12]
 800200c:	687b      	ldr	r3, [r7, #4]
 800200e:	681b      	ldr	r3, [r3, #0]
 8002010:	681a      	ldr	r2, [r3, #0]
 8002012:	687b      	ldr	r3, [r7, #4]
 8002014:	681b      	ldr	r3, [r3, #0]
 8002016:	f042 0201 	orr.w	r2, r2, #1
 800201a:	601a      	str	r2, [r3, #0]
 800201c:	687b      	ldr	r3, [r7, #4]
 800201e:	2200      	movs	r2, #0
 8002020:	641a      	str	r2, [r3, #64]	@ 0x40
 8002022:	687b      	ldr	r3, [r7, #4]
 8002024:	2220      	movs	r2, #32
 8002026:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800202a:	687b      	ldr	r3, [r7, #4]
 800202c:	2200      	movs	r2, #0
 800202e:	631a      	str	r2, [r3, #48]	@ 0x30
 8002030:	687b      	ldr	r3, [r7, #4]
 8002032:	2200      	movs	r2, #0
 8002034:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002038:	2300      	movs	r3, #0
 800203a:	4618      	mov	r0, r3
 800203c:	3710      	adds	r7, #16
 800203e:	46bd      	mov	sp, r7
 8002040:	bd80      	pop	{r7, pc}
 8002042:	bf00      	nop
 8002044:	000186a0 	.word	0x000186a0
 8002048:	001e847f 	.word	0x001e847f
 800204c:	003d08ff 	.word	0x003d08ff
 8002050:	431bde83 	.word	0x431bde83
 8002054:	10624dd3 	.word	0x10624dd3

08002058 <HAL_I2C_Master_Transmit>:
 8002058:	b580      	push	{r7, lr}
 800205a:	b088      	sub	sp, #32
 800205c:	af02      	add	r7, sp, #8
 800205e:	60f8      	str	r0, [r7, #12]
 8002060:	607a      	str	r2, [r7, #4]
 8002062:	461a      	mov	r2, r3
 8002064:	460b      	mov	r3, r1
 8002066:	817b      	strh	r3, [r7, #10]
 8002068:	4613      	mov	r3, r2
 800206a:	813b      	strh	r3, [r7, #8]
 800206c:	f7ff f9f6 	bl	800145c <HAL_GetTick>
 8002070:	6178      	str	r0, [r7, #20]
 8002072:	68fb      	ldr	r3, [r7, #12]
 8002074:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8002078:	b2db      	uxtb	r3, r3
 800207a:	2b20      	cmp	r3, #32
 800207c:	f040 80e0 	bne.w	8002240 <HAL_I2C_Master_Transmit+0x1e8>
 8002080:	697b      	ldr	r3, [r7, #20]
 8002082:	9300      	str	r3, [sp, #0]
 8002084:	2319      	movs	r3, #25
 8002086:	2201      	movs	r2, #1
 8002088:	4970      	ldr	r1, [pc, #448]	@ (800224c <HAL_I2C_Master_Transmit+0x1f4>)
 800208a:	68f8      	ldr	r0, [r7, #12]
 800208c:	f000 fc64 	bl	8002958 <I2C_WaitOnFlagUntilTimeout>
 8002090:	4603      	mov	r3, r0
 8002092:	2b00      	cmp	r3, #0
 8002094:	d001      	beq.n	800209a <HAL_I2C_Master_Transmit+0x42>
 8002096:	2302      	movs	r3, #2
 8002098:	e0d3      	b.n	8002242 <HAL_I2C_Master_Transmit+0x1ea>
 800209a:	68fb      	ldr	r3, [r7, #12]
 800209c:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80020a0:	2b01      	cmp	r3, #1
 80020a2:	d101      	bne.n	80020a8 <HAL_I2C_Master_Transmit+0x50>
 80020a4:	2302      	movs	r3, #2
 80020a6:	e0cc      	b.n	8002242 <HAL_I2C_Master_Transmit+0x1ea>
 80020a8:	68fb      	ldr	r3, [r7, #12]
 80020aa:	2201      	movs	r2, #1
 80020ac:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80020b0:	68fb      	ldr	r3, [r7, #12]
 80020b2:	681b      	ldr	r3, [r3, #0]
 80020b4:	681b      	ldr	r3, [r3, #0]
 80020b6:	f003 0301 	and.w	r3, r3, #1
 80020ba:	2b01      	cmp	r3, #1
 80020bc:	d007      	beq.n	80020ce <HAL_I2C_Master_Transmit+0x76>
 80020be:	68fb      	ldr	r3, [r7, #12]
 80020c0:	681b      	ldr	r3, [r3, #0]
 80020c2:	681a      	ldr	r2, [r3, #0]
 80020c4:	68fb      	ldr	r3, [r7, #12]
 80020c6:	681b      	ldr	r3, [r3, #0]
 80020c8:	f042 0201 	orr.w	r2, r2, #1
 80020cc:	601a      	str	r2, [r3, #0]
 80020ce:	68fb      	ldr	r3, [r7, #12]
 80020d0:	681b      	ldr	r3, [r3, #0]
 80020d2:	681a      	ldr	r2, [r3, #0]
 80020d4:	68fb      	ldr	r3, [r7, #12]
 80020d6:	681b      	ldr	r3, [r3, #0]
 80020d8:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80020dc:	601a      	str	r2, [r3, #0]
 80020de:	68fb      	ldr	r3, [r7, #12]
 80020e0:	2221      	movs	r2, #33	@ 0x21
 80020e2:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80020e6:	68fb      	ldr	r3, [r7, #12]
 80020e8:	2210      	movs	r2, #16
 80020ea:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80020ee:	68fb      	ldr	r3, [r7, #12]
 80020f0:	2200      	movs	r2, #0
 80020f2:	641a      	str	r2, [r3, #64]	@ 0x40
 80020f4:	68fb      	ldr	r3, [r7, #12]
 80020f6:	687a      	ldr	r2, [r7, #4]
 80020f8:	625a      	str	r2, [r3, #36]	@ 0x24
 80020fa:	68fb      	ldr	r3, [r7, #12]
 80020fc:	893a      	ldrh	r2, [r7, #8]
 80020fe:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8002100:	68fb      	ldr	r3, [r7, #12]
 8002102:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8002104:	b29a      	uxth	r2, r3
 8002106:	68fb      	ldr	r3, [r7, #12]
 8002108:	851a      	strh	r2, [r3, #40]	@ 0x28
 800210a:	68fb      	ldr	r3, [r7, #12]
 800210c:	4a50      	ldr	r2, [pc, #320]	@ (8002250 <HAL_I2C_Master_Transmit+0x1f8>)
 800210e:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002110:	8979      	ldrh	r1, [r7, #10]
 8002112:	697b      	ldr	r3, [r7, #20]
 8002114:	6a3a      	ldr	r2, [r7, #32]
 8002116:	68f8      	ldr	r0, [r7, #12]
 8002118:	f000 face 	bl	80026b8 <I2C_MasterRequestWrite>
 800211c:	4603      	mov	r3, r0
 800211e:	2b00      	cmp	r3, #0
 8002120:	d001      	beq.n	8002126 <HAL_I2C_Master_Transmit+0xce>
 8002122:	2301      	movs	r3, #1
 8002124:	e08d      	b.n	8002242 <HAL_I2C_Master_Transmit+0x1ea>
 8002126:	2300      	movs	r3, #0
 8002128:	613b      	str	r3, [r7, #16]
 800212a:	68fb      	ldr	r3, [r7, #12]
 800212c:	681b      	ldr	r3, [r3, #0]
 800212e:	695b      	ldr	r3, [r3, #20]
 8002130:	613b      	str	r3, [r7, #16]
 8002132:	68fb      	ldr	r3, [r7, #12]
 8002134:	681b      	ldr	r3, [r3, #0]
 8002136:	699b      	ldr	r3, [r3, #24]
 8002138:	613b      	str	r3, [r7, #16]
 800213a:	693b      	ldr	r3, [r7, #16]
 800213c:	e066      	b.n	800220c <HAL_I2C_Master_Transmit+0x1b4>
 800213e:	697a      	ldr	r2, [r7, #20]
 8002140:	6a39      	ldr	r1, [r7, #32]
 8002142:	68f8      	ldr	r0, [r7, #12]
 8002144:	f000 fd22 	bl	8002b8c <I2C_WaitOnTXEFlagUntilTimeout>
 8002148:	4603      	mov	r3, r0
 800214a:	2b00      	cmp	r3, #0
 800214c:	d00d      	beq.n	800216a <HAL_I2C_Master_Transmit+0x112>
 800214e:	68fb      	ldr	r3, [r7, #12]
 8002150:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002152:	2b04      	cmp	r3, #4
 8002154:	d107      	bne.n	8002166 <HAL_I2C_Master_Transmit+0x10e>
 8002156:	68fb      	ldr	r3, [r7, #12]
 8002158:	681b      	ldr	r3, [r3, #0]
 800215a:	681a      	ldr	r2, [r3, #0]
 800215c:	68fb      	ldr	r3, [r7, #12]
 800215e:	681b      	ldr	r3, [r3, #0]
 8002160:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8002164:	601a      	str	r2, [r3, #0]
 8002166:	2301      	movs	r3, #1
 8002168:	e06b      	b.n	8002242 <HAL_I2C_Master_Transmit+0x1ea>
 800216a:	68fb      	ldr	r3, [r7, #12]
 800216c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800216e:	781a      	ldrb	r2, [r3, #0]
 8002170:	68fb      	ldr	r3, [r7, #12]
 8002172:	681b      	ldr	r3, [r3, #0]
 8002174:	611a      	str	r2, [r3, #16]
 8002176:	68fb      	ldr	r3, [r7, #12]
 8002178:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800217a:	1c5a      	adds	r2, r3, #1
 800217c:	68fb      	ldr	r3, [r7, #12]
 800217e:	625a      	str	r2, [r3, #36]	@ 0x24
 8002180:	68fb      	ldr	r3, [r7, #12]
 8002182:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8002184:	b29b      	uxth	r3, r3
 8002186:	3b01      	subs	r3, #1
 8002188:	b29a      	uxth	r2, r3
 800218a:	68fb      	ldr	r3, [r7, #12]
 800218c:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800218e:	68fb      	ldr	r3, [r7, #12]
 8002190:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002192:	3b01      	subs	r3, #1
 8002194:	b29a      	uxth	r2, r3
 8002196:	68fb      	ldr	r3, [r7, #12]
 8002198:	851a      	strh	r2, [r3, #40]	@ 0x28
 800219a:	68fb      	ldr	r3, [r7, #12]
 800219c:	681b      	ldr	r3, [r3, #0]
 800219e:	695b      	ldr	r3, [r3, #20]
 80021a0:	f003 0304 	and.w	r3, r3, #4
 80021a4:	2b04      	cmp	r3, #4
 80021a6:	d11b      	bne.n	80021e0 <HAL_I2C_Master_Transmit+0x188>
 80021a8:	68fb      	ldr	r3, [r7, #12]
 80021aa:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80021ac:	2b00      	cmp	r3, #0
 80021ae:	d017      	beq.n	80021e0 <HAL_I2C_Master_Transmit+0x188>
 80021b0:	68fb      	ldr	r3, [r7, #12]
 80021b2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80021b4:	781a      	ldrb	r2, [r3, #0]
 80021b6:	68fb      	ldr	r3, [r7, #12]
 80021b8:	681b      	ldr	r3, [r3, #0]
 80021ba:	611a      	str	r2, [r3, #16]
 80021bc:	68fb      	ldr	r3, [r7, #12]
 80021be:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80021c0:	1c5a      	adds	r2, r3, #1
 80021c2:	68fb      	ldr	r3, [r7, #12]
 80021c4:	625a      	str	r2, [r3, #36]	@ 0x24
 80021c6:	68fb      	ldr	r3, [r7, #12]
 80021c8:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80021ca:	b29b      	uxth	r3, r3
 80021cc:	3b01      	subs	r3, #1
 80021ce:	b29a      	uxth	r2, r3
 80021d0:	68fb      	ldr	r3, [r7, #12]
 80021d2:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80021d4:	68fb      	ldr	r3, [r7, #12]
 80021d6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80021d8:	3b01      	subs	r3, #1
 80021da:	b29a      	uxth	r2, r3
 80021dc:	68fb      	ldr	r3, [r7, #12]
 80021de:	851a      	strh	r2, [r3, #40]	@ 0x28
 80021e0:	697a      	ldr	r2, [r7, #20]
 80021e2:	6a39      	ldr	r1, [r7, #32]
 80021e4:	68f8      	ldr	r0, [r7, #12]
 80021e6:	f000 fd19 	bl	8002c1c <I2C_WaitOnBTFFlagUntilTimeout>
 80021ea:	4603      	mov	r3, r0
 80021ec:	2b00      	cmp	r3, #0
 80021ee:	d00d      	beq.n	800220c <HAL_I2C_Master_Transmit+0x1b4>
 80021f0:	68fb      	ldr	r3, [r7, #12]
 80021f2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80021f4:	2b04      	cmp	r3, #4
 80021f6:	d107      	bne.n	8002208 <HAL_I2C_Master_Transmit+0x1b0>
 80021f8:	68fb      	ldr	r3, [r7, #12]
 80021fa:	681b      	ldr	r3, [r3, #0]
 80021fc:	681a      	ldr	r2, [r3, #0]
 80021fe:	68fb      	ldr	r3, [r7, #12]
 8002200:	681b      	ldr	r3, [r3, #0]
 8002202:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8002206:	601a      	str	r2, [r3, #0]
 8002208:	2301      	movs	r3, #1
 800220a:	e01a      	b.n	8002242 <HAL_I2C_Master_Transmit+0x1ea>
 800220c:	68fb      	ldr	r3, [r7, #12]
 800220e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002210:	2b00      	cmp	r3, #0
 8002212:	d194      	bne.n	800213e <HAL_I2C_Master_Transmit+0xe6>
 8002214:	68fb      	ldr	r3, [r7, #12]
 8002216:	681b      	ldr	r3, [r3, #0]
 8002218:	681a      	ldr	r2, [r3, #0]
 800221a:	68fb      	ldr	r3, [r7, #12]
 800221c:	681b      	ldr	r3, [r3, #0]
 800221e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8002222:	601a      	str	r2, [r3, #0]
 8002224:	68fb      	ldr	r3, [r7, #12]
 8002226:	2220      	movs	r2, #32
 8002228:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800222c:	68fb      	ldr	r3, [r7, #12]
 800222e:	2200      	movs	r2, #0
 8002230:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002234:	68fb      	ldr	r3, [r7, #12]
 8002236:	2200      	movs	r2, #0
 8002238:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800223c:	2300      	movs	r3, #0
 800223e:	e000      	b.n	8002242 <HAL_I2C_Master_Transmit+0x1ea>
 8002240:	2302      	movs	r3, #2
 8002242:	4618      	mov	r0, r3
 8002244:	3718      	adds	r7, #24
 8002246:	46bd      	mov	sp, r7
 8002248:	bd80      	pop	{r7, pc}
 800224a:	bf00      	nop
 800224c:	00100002 	.word	0x00100002
 8002250:	ffff0000 	.word	0xffff0000

08002254 <HAL_I2C_Master_Receive>:
 8002254:	b580      	push	{r7, lr}
 8002256:	b08c      	sub	sp, #48	@ 0x30
 8002258:	af02      	add	r7, sp, #8
 800225a:	60f8      	str	r0, [r7, #12]
 800225c:	607a      	str	r2, [r7, #4]
 800225e:	461a      	mov	r2, r3
 8002260:	460b      	mov	r3, r1
 8002262:	817b      	strh	r3, [r7, #10]
 8002264:	4613      	mov	r3, r2
 8002266:	813b      	strh	r3, [r7, #8]
 8002268:	f7ff f8f8 	bl	800145c <HAL_GetTick>
 800226c:	6278      	str	r0, [r7, #36]	@ 0x24
 800226e:	68fb      	ldr	r3, [r7, #12]
 8002270:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8002274:	b2db      	uxtb	r3, r3
 8002276:	2b20      	cmp	r3, #32
 8002278:	f040 8217 	bne.w	80026aa <HAL_I2C_Master_Receive+0x456>
 800227c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800227e:	9300      	str	r3, [sp, #0]
 8002280:	2319      	movs	r3, #25
 8002282:	2201      	movs	r2, #1
 8002284:	497c      	ldr	r1, [pc, #496]	@ (8002478 <HAL_I2C_Master_Receive+0x224>)
 8002286:	68f8      	ldr	r0, [r7, #12]
 8002288:	f000 fb66 	bl	8002958 <I2C_WaitOnFlagUntilTimeout>
 800228c:	4603      	mov	r3, r0
 800228e:	2b00      	cmp	r3, #0
 8002290:	d001      	beq.n	8002296 <HAL_I2C_Master_Receive+0x42>
 8002292:	2302      	movs	r3, #2
 8002294:	e20a      	b.n	80026ac <HAL_I2C_Master_Receive+0x458>
 8002296:	68fb      	ldr	r3, [r7, #12]
 8002298:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800229c:	2b01      	cmp	r3, #1
 800229e:	d101      	bne.n	80022a4 <HAL_I2C_Master_Receive+0x50>
 80022a0:	2302      	movs	r3, #2
 80022a2:	e203      	b.n	80026ac <HAL_I2C_Master_Receive+0x458>
 80022a4:	68fb      	ldr	r3, [r7, #12]
 80022a6:	2201      	movs	r2, #1
 80022a8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80022ac:	68fb      	ldr	r3, [r7, #12]
 80022ae:	681b      	ldr	r3, [r3, #0]
 80022b0:	681b      	ldr	r3, [r3, #0]
 80022b2:	f003 0301 	and.w	r3, r3, #1
 80022b6:	2b01      	cmp	r3, #1
 80022b8:	d007      	beq.n	80022ca <HAL_I2C_Master_Receive+0x76>
 80022ba:	68fb      	ldr	r3, [r7, #12]
 80022bc:	681b      	ldr	r3, [r3, #0]
 80022be:	681a      	ldr	r2, [r3, #0]
 80022c0:	68fb      	ldr	r3, [r7, #12]
 80022c2:	681b      	ldr	r3, [r3, #0]
 80022c4:	f042 0201 	orr.w	r2, r2, #1
 80022c8:	601a      	str	r2, [r3, #0]
 80022ca:	68fb      	ldr	r3, [r7, #12]
 80022cc:	681b      	ldr	r3, [r3, #0]
 80022ce:	681a      	ldr	r2, [r3, #0]
 80022d0:	68fb      	ldr	r3, [r7, #12]
 80022d2:	681b      	ldr	r3, [r3, #0]
 80022d4:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80022d8:	601a      	str	r2, [r3, #0]
 80022da:	68fb      	ldr	r3, [r7, #12]
 80022dc:	2222      	movs	r2, #34	@ 0x22
 80022de:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80022e2:	68fb      	ldr	r3, [r7, #12]
 80022e4:	2210      	movs	r2, #16
 80022e6:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80022ea:	68fb      	ldr	r3, [r7, #12]
 80022ec:	2200      	movs	r2, #0
 80022ee:	641a      	str	r2, [r3, #64]	@ 0x40
 80022f0:	68fb      	ldr	r3, [r7, #12]
 80022f2:	687a      	ldr	r2, [r7, #4]
 80022f4:	625a      	str	r2, [r3, #36]	@ 0x24
 80022f6:	68fb      	ldr	r3, [r7, #12]
 80022f8:	893a      	ldrh	r2, [r7, #8]
 80022fa:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80022fc:	68fb      	ldr	r3, [r7, #12]
 80022fe:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8002300:	b29a      	uxth	r2, r3
 8002302:	68fb      	ldr	r3, [r7, #12]
 8002304:	851a      	strh	r2, [r3, #40]	@ 0x28
 8002306:	68fb      	ldr	r3, [r7, #12]
 8002308:	4a5c      	ldr	r2, [pc, #368]	@ (800247c <HAL_I2C_Master_Receive+0x228>)
 800230a:	62da      	str	r2, [r3, #44]	@ 0x2c
 800230c:	8979      	ldrh	r1, [r7, #10]
 800230e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002310:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8002312:	68f8      	ldr	r0, [r7, #12]
 8002314:	f000 fa52 	bl	80027bc <I2C_MasterRequestRead>
 8002318:	4603      	mov	r3, r0
 800231a:	2b00      	cmp	r3, #0
 800231c:	d001      	beq.n	8002322 <HAL_I2C_Master_Receive+0xce>
 800231e:	2301      	movs	r3, #1
 8002320:	e1c4      	b.n	80026ac <HAL_I2C_Master_Receive+0x458>
 8002322:	68fb      	ldr	r3, [r7, #12]
 8002324:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002326:	2b00      	cmp	r3, #0
 8002328:	d113      	bne.n	8002352 <HAL_I2C_Master_Receive+0xfe>
 800232a:	2300      	movs	r3, #0
 800232c:	623b      	str	r3, [r7, #32]
 800232e:	68fb      	ldr	r3, [r7, #12]
 8002330:	681b      	ldr	r3, [r3, #0]
 8002332:	695b      	ldr	r3, [r3, #20]
 8002334:	623b      	str	r3, [r7, #32]
 8002336:	68fb      	ldr	r3, [r7, #12]
 8002338:	681b      	ldr	r3, [r3, #0]
 800233a:	699b      	ldr	r3, [r3, #24]
 800233c:	623b      	str	r3, [r7, #32]
 800233e:	6a3b      	ldr	r3, [r7, #32]
 8002340:	68fb      	ldr	r3, [r7, #12]
 8002342:	681b      	ldr	r3, [r3, #0]
 8002344:	681a      	ldr	r2, [r3, #0]
 8002346:	68fb      	ldr	r3, [r7, #12]
 8002348:	681b      	ldr	r3, [r3, #0]
 800234a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800234e:	601a      	str	r2, [r3, #0]
 8002350:	e198      	b.n	8002684 <HAL_I2C_Master_Receive+0x430>
 8002352:	68fb      	ldr	r3, [r7, #12]
 8002354:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002356:	2b01      	cmp	r3, #1
 8002358:	d11b      	bne.n	8002392 <HAL_I2C_Master_Receive+0x13e>
 800235a:	68fb      	ldr	r3, [r7, #12]
 800235c:	681b      	ldr	r3, [r3, #0]
 800235e:	681a      	ldr	r2, [r3, #0]
 8002360:	68fb      	ldr	r3, [r7, #12]
 8002362:	681b      	ldr	r3, [r3, #0]
 8002364:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8002368:	601a      	str	r2, [r3, #0]
 800236a:	2300      	movs	r3, #0
 800236c:	61fb      	str	r3, [r7, #28]
 800236e:	68fb      	ldr	r3, [r7, #12]
 8002370:	681b      	ldr	r3, [r3, #0]
 8002372:	695b      	ldr	r3, [r3, #20]
 8002374:	61fb      	str	r3, [r7, #28]
 8002376:	68fb      	ldr	r3, [r7, #12]
 8002378:	681b      	ldr	r3, [r3, #0]
 800237a:	699b      	ldr	r3, [r3, #24]
 800237c:	61fb      	str	r3, [r7, #28]
 800237e:	69fb      	ldr	r3, [r7, #28]
 8002380:	68fb      	ldr	r3, [r7, #12]
 8002382:	681b      	ldr	r3, [r3, #0]
 8002384:	681a      	ldr	r2, [r3, #0]
 8002386:	68fb      	ldr	r3, [r7, #12]
 8002388:	681b      	ldr	r3, [r3, #0]
 800238a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800238e:	601a      	str	r2, [r3, #0]
 8002390:	e178      	b.n	8002684 <HAL_I2C_Master_Receive+0x430>
 8002392:	68fb      	ldr	r3, [r7, #12]
 8002394:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002396:	2b02      	cmp	r3, #2
 8002398:	d11b      	bne.n	80023d2 <HAL_I2C_Master_Receive+0x17e>
 800239a:	68fb      	ldr	r3, [r7, #12]
 800239c:	681b      	ldr	r3, [r3, #0]
 800239e:	681a      	ldr	r2, [r3, #0]
 80023a0:	68fb      	ldr	r3, [r7, #12]
 80023a2:	681b      	ldr	r3, [r3, #0]
 80023a4:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80023a8:	601a      	str	r2, [r3, #0]
 80023aa:	68fb      	ldr	r3, [r7, #12]
 80023ac:	681b      	ldr	r3, [r3, #0]
 80023ae:	681a      	ldr	r2, [r3, #0]
 80023b0:	68fb      	ldr	r3, [r7, #12]
 80023b2:	681b      	ldr	r3, [r3, #0]
 80023b4:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80023b8:	601a      	str	r2, [r3, #0]
 80023ba:	2300      	movs	r3, #0
 80023bc:	61bb      	str	r3, [r7, #24]
 80023be:	68fb      	ldr	r3, [r7, #12]
 80023c0:	681b      	ldr	r3, [r3, #0]
 80023c2:	695b      	ldr	r3, [r3, #20]
 80023c4:	61bb      	str	r3, [r7, #24]
 80023c6:	68fb      	ldr	r3, [r7, #12]
 80023c8:	681b      	ldr	r3, [r3, #0]
 80023ca:	699b      	ldr	r3, [r3, #24]
 80023cc:	61bb      	str	r3, [r7, #24]
 80023ce:	69bb      	ldr	r3, [r7, #24]
 80023d0:	e158      	b.n	8002684 <HAL_I2C_Master_Receive+0x430>
 80023d2:	68fb      	ldr	r3, [r7, #12]
 80023d4:	681b      	ldr	r3, [r3, #0]
 80023d6:	681a      	ldr	r2, [r3, #0]
 80023d8:	68fb      	ldr	r3, [r7, #12]
 80023da:	681b      	ldr	r3, [r3, #0]
 80023dc:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 80023e0:	601a      	str	r2, [r3, #0]
 80023e2:	2300      	movs	r3, #0
 80023e4:	617b      	str	r3, [r7, #20]
 80023e6:	68fb      	ldr	r3, [r7, #12]
 80023e8:	681b      	ldr	r3, [r3, #0]
 80023ea:	695b      	ldr	r3, [r3, #20]
 80023ec:	617b      	str	r3, [r7, #20]
 80023ee:	68fb      	ldr	r3, [r7, #12]
 80023f0:	681b      	ldr	r3, [r3, #0]
 80023f2:	699b      	ldr	r3, [r3, #24]
 80023f4:	617b      	str	r3, [r7, #20]
 80023f6:	697b      	ldr	r3, [r7, #20]
 80023f8:	e144      	b.n	8002684 <HAL_I2C_Master_Receive+0x430>
 80023fa:	68fb      	ldr	r3, [r7, #12]
 80023fc:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80023fe:	2b03      	cmp	r3, #3
 8002400:	f200 80f1 	bhi.w	80025e6 <HAL_I2C_Master_Receive+0x392>
 8002404:	68fb      	ldr	r3, [r7, #12]
 8002406:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002408:	2b01      	cmp	r3, #1
 800240a:	d123      	bne.n	8002454 <HAL_I2C_Master_Receive+0x200>
 800240c:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800240e:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8002410:	68f8      	ldr	r0, [r7, #12]
 8002412:	f000 fc4b 	bl	8002cac <I2C_WaitOnRXNEFlagUntilTimeout>
 8002416:	4603      	mov	r3, r0
 8002418:	2b00      	cmp	r3, #0
 800241a:	d001      	beq.n	8002420 <HAL_I2C_Master_Receive+0x1cc>
 800241c:	2301      	movs	r3, #1
 800241e:	e145      	b.n	80026ac <HAL_I2C_Master_Receive+0x458>
 8002420:	68fb      	ldr	r3, [r7, #12]
 8002422:	681b      	ldr	r3, [r3, #0]
 8002424:	691a      	ldr	r2, [r3, #16]
 8002426:	68fb      	ldr	r3, [r7, #12]
 8002428:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800242a:	b2d2      	uxtb	r2, r2
 800242c:	701a      	strb	r2, [r3, #0]
 800242e:	68fb      	ldr	r3, [r7, #12]
 8002430:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002432:	1c5a      	adds	r2, r3, #1
 8002434:	68fb      	ldr	r3, [r7, #12]
 8002436:	625a      	str	r2, [r3, #36]	@ 0x24
 8002438:	68fb      	ldr	r3, [r7, #12]
 800243a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800243c:	3b01      	subs	r3, #1
 800243e:	b29a      	uxth	r2, r3
 8002440:	68fb      	ldr	r3, [r7, #12]
 8002442:	851a      	strh	r2, [r3, #40]	@ 0x28
 8002444:	68fb      	ldr	r3, [r7, #12]
 8002446:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8002448:	b29b      	uxth	r3, r3
 800244a:	3b01      	subs	r3, #1
 800244c:	b29a      	uxth	r2, r3
 800244e:	68fb      	ldr	r3, [r7, #12]
 8002450:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8002452:	e117      	b.n	8002684 <HAL_I2C_Master_Receive+0x430>
 8002454:	68fb      	ldr	r3, [r7, #12]
 8002456:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002458:	2b02      	cmp	r3, #2
 800245a:	d14e      	bne.n	80024fa <HAL_I2C_Master_Receive+0x2a6>
 800245c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800245e:	9300      	str	r3, [sp, #0]
 8002460:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8002462:	2200      	movs	r2, #0
 8002464:	4906      	ldr	r1, [pc, #24]	@ (8002480 <HAL_I2C_Master_Receive+0x22c>)
 8002466:	68f8      	ldr	r0, [r7, #12]
 8002468:	f000 fa76 	bl	8002958 <I2C_WaitOnFlagUntilTimeout>
 800246c:	4603      	mov	r3, r0
 800246e:	2b00      	cmp	r3, #0
 8002470:	d008      	beq.n	8002484 <HAL_I2C_Master_Receive+0x230>
 8002472:	2301      	movs	r3, #1
 8002474:	e11a      	b.n	80026ac <HAL_I2C_Master_Receive+0x458>
 8002476:	bf00      	nop
 8002478:	00100002 	.word	0x00100002
 800247c:	ffff0000 	.word	0xffff0000
 8002480:	00010004 	.word	0x00010004
 8002484:	68fb      	ldr	r3, [r7, #12]
 8002486:	681b      	ldr	r3, [r3, #0]
 8002488:	681a      	ldr	r2, [r3, #0]
 800248a:	68fb      	ldr	r3, [r7, #12]
 800248c:	681b      	ldr	r3, [r3, #0]
 800248e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8002492:	601a      	str	r2, [r3, #0]
 8002494:	68fb      	ldr	r3, [r7, #12]
 8002496:	681b      	ldr	r3, [r3, #0]
 8002498:	691a      	ldr	r2, [r3, #16]
 800249a:	68fb      	ldr	r3, [r7, #12]
 800249c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800249e:	b2d2      	uxtb	r2, r2
 80024a0:	701a      	strb	r2, [r3, #0]
 80024a2:	68fb      	ldr	r3, [r7, #12]
 80024a4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80024a6:	1c5a      	adds	r2, r3, #1
 80024a8:	68fb      	ldr	r3, [r7, #12]
 80024aa:	625a      	str	r2, [r3, #36]	@ 0x24
 80024ac:	68fb      	ldr	r3, [r7, #12]
 80024ae:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80024b0:	3b01      	subs	r3, #1
 80024b2:	b29a      	uxth	r2, r3
 80024b4:	68fb      	ldr	r3, [r7, #12]
 80024b6:	851a      	strh	r2, [r3, #40]	@ 0x28
 80024b8:	68fb      	ldr	r3, [r7, #12]
 80024ba:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80024bc:	b29b      	uxth	r3, r3
 80024be:	3b01      	subs	r3, #1
 80024c0:	b29a      	uxth	r2, r3
 80024c2:	68fb      	ldr	r3, [r7, #12]
 80024c4:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80024c6:	68fb      	ldr	r3, [r7, #12]
 80024c8:	681b      	ldr	r3, [r3, #0]
 80024ca:	691a      	ldr	r2, [r3, #16]
 80024cc:	68fb      	ldr	r3, [r7, #12]
 80024ce:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80024d0:	b2d2      	uxtb	r2, r2
 80024d2:	701a      	strb	r2, [r3, #0]
 80024d4:	68fb      	ldr	r3, [r7, #12]
 80024d6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80024d8:	1c5a      	adds	r2, r3, #1
 80024da:	68fb      	ldr	r3, [r7, #12]
 80024dc:	625a      	str	r2, [r3, #36]	@ 0x24
 80024de:	68fb      	ldr	r3, [r7, #12]
 80024e0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80024e2:	3b01      	subs	r3, #1
 80024e4:	b29a      	uxth	r2, r3
 80024e6:	68fb      	ldr	r3, [r7, #12]
 80024e8:	851a      	strh	r2, [r3, #40]	@ 0x28
 80024ea:	68fb      	ldr	r3, [r7, #12]
 80024ec:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80024ee:	b29b      	uxth	r3, r3
 80024f0:	3b01      	subs	r3, #1
 80024f2:	b29a      	uxth	r2, r3
 80024f4:	68fb      	ldr	r3, [r7, #12]
 80024f6:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80024f8:	e0c4      	b.n	8002684 <HAL_I2C_Master_Receive+0x430>
 80024fa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80024fc:	9300      	str	r3, [sp, #0]
 80024fe:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8002500:	2200      	movs	r2, #0
 8002502:	496c      	ldr	r1, [pc, #432]	@ (80026b4 <HAL_I2C_Master_Receive+0x460>)
 8002504:	68f8      	ldr	r0, [r7, #12]
 8002506:	f000 fa27 	bl	8002958 <I2C_WaitOnFlagUntilTimeout>
 800250a:	4603      	mov	r3, r0
 800250c:	2b00      	cmp	r3, #0
 800250e:	d001      	beq.n	8002514 <HAL_I2C_Master_Receive+0x2c0>
 8002510:	2301      	movs	r3, #1
 8002512:	e0cb      	b.n	80026ac <HAL_I2C_Master_Receive+0x458>
 8002514:	68fb      	ldr	r3, [r7, #12]
 8002516:	681b      	ldr	r3, [r3, #0]
 8002518:	681a      	ldr	r2, [r3, #0]
 800251a:	68fb      	ldr	r3, [r7, #12]
 800251c:	681b      	ldr	r3, [r3, #0]
 800251e:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8002522:	601a      	str	r2, [r3, #0]
 8002524:	68fb      	ldr	r3, [r7, #12]
 8002526:	681b      	ldr	r3, [r3, #0]
 8002528:	691a      	ldr	r2, [r3, #16]
 800252a:	68fb      	ldr	r3, [r7, #12]
 800252c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800252e:	b2d2      	uxtb	r2, r2
 8002530:	701a      	strb	r2, [r3, #0]
 8002532:	68fb      	ldr	r3, [r7, #12]
 8002534:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002536:	1c5a      	adds	r2, r3, #1
 8002538:	68fb      	ldr	r3, [r7, #12]
 800253a:	625a      	str	r2, [r3, #36]	@ 0x24
 800253c:	68fb      	ldr	r3, [r7, #12]
 800253e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002540:	3b01      	subs	r3, #1
 8002542:	b29a      	uxth	r2, r3
 8002544:	68fb      	ldr	r3, [r7, #12]
 8002546:	851a      	strh	r2, [r3, #40]	@ 0x28
 8002548:	68fb      	ldr	r3, [r7, #12]
 800254a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800254c:	b29b      	uxth	r3, r3
 800254e:	3b01      	subs	r3, #1
 8002550:	b29a      	uxth	r2, r3
 8002552:	68fb      	ldr	r3, [r7, #12]
 8002554:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8002556:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002558:	9300      	str	r3, [sp, #0]
 800255a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800255c:	2200      	movs	r2, #0
 800255e:	4955      	ldr	r1, [pc, #340]	@ (80026b4 <HAL_I2C_Master_Receive+0x460>)
 8002560:	68f8      	ldr	r0, [r7, #12]
 8002562:	f000 f9f9 	bl	8002958 <I2C_WaitOnFlagUntilTimeout>
 8002566:	4603      	mov	r3, r0
 8002568:	2b00      	cmp	r3, #0
 800256a:	d001      	beq.n	8002570 <HAL_I2C_Master_Receive+0x31c>
 800256c:	2301      	movs	r3, #1
 800256e:	e09d      	b.n	80026ac <HAL_I2C_Master_Receive+0x458>
 8002570:	68fb      	ldr	r3, [r7, #12]
 8002572:	681b      	ldr	r3, [r3, #0]
 8002574:	681a      	ldr	r2, [r3, #0]
 8002576:	68fb      	ldr	r3, [r7, #12]
 8002578:	681b      	ldr	r3, [r3, #0]
 800257a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800257e:	601a      	str	r2, [r3, #0]
 8002580:	68fb      	ldr	r3, [r7, #12]
 8002582:	681b      	ldr	r3, [r3, #0]
 8002584:	691a      	ldr	r2, [r3, #16]
 8002586:	68fb      	ldr	r3, [r7, #12]
 8002588:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800258a:	b2d2      	uxtb	r2, r2
 800258c:	701a      	strb	r2, [r3, #0]
 800258e:	68fb      	ldr	r3, [r7, #12]
 8002590:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002592:	1c5a      	adds	r2, r3, #1
 8002594:	68fb      	ldr	r3, [r7, #12]
 8002596:	625a      	str	r2, [r3, #36]	@ 0x24
 8002598:	68fb      	ldr	r3, [r7, #12]
 800259a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800259c:	3b01      	subs	r3, #1
 800259e:	b29a      	uxth	r2, r3
 80025a0:	68fb      	ldr	r3, [r7, #12]
 80025a2:	851a      	strh	r2, [r3, #40]	@ 0x28
 80025a4:	68fb      	ldr	r3, [r7, #12]
 80025a6:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80025a8:	b29b      	uxth	r3, r3
 80025aa:	3b01      	subs	r3, #1
 80025ac:	b29a      	uxth	r2, r3
 80025ae:	68fb      	ldr	r3, [r7, #12]
 80025b0:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80025b2:	68fb      	ldr	r3, [r7, #12]
 80025b4:	681b      	ldr	r3, [r3, #0]
 80025b6:	691a      	ldr	r2, [r3, #16]
 80025b8:	68fb      	ldr	r3, [r7, #12]
 80025ba:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80025bc:	b2d2      	uxtb	r2, r2
 80025be:	701a      	strb	r2, [r3, #0]
 80025c0:	68fb      	ldr	r3, [r7, #12]
 80025c2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80025c4:	1c5a      	adds	r2, r3, #1
 80025c6:	68fb      	ldr	r3, [r7, #12]
 80025c8:	625a      	str	r2, [r3, #36]	@ 0x24
 80025ca:	68fb      	ldr	r3, [r7, #12]
 80025cc:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80025ce:	3b01      	subs	r3, #1
 80025d0:	b29a      	uxth	r2, r3
 80025d2:	68fb      	ldr	r3, [r7, #12]
 80025d4:	851a      	strh	r2, [r3, #40]	@ 0x28
 80025d6:	68fb      	ldr	r3, [r7, #12]
 80025d8:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80025da:	b29b      	uxth	r3, r3
 80025dc:	3b01      	subs	r3, #1
 80025de:	b29a      	uxth	r2, r3
 80025e0:	68fb      	ldr	r3, [r7, #12]
 80025e2:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80025e4:	e04e      	b.n	8002684 <HAL_I2C_Master_Receive+0x430>
 80025e6:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80025e8:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 80025ea:	68f8      	ldr	r0, [r7, #12]
 80025ec:	f000 fb5e 	bl	8002cac <I2C_WaitOnRXNEFlagUntilTimeout>
 80025f0:	4603      	mov	r3, r0
 80025f2:	2b00      	cmp	r3, #0
 80025f4:	d001      	beq.n	80025fa <HAL_I2C_Master_Receive+0x3a6>
 80025f6:	2301      	movs	r3, #1
 80025f8:	e058      	b.n	80026ac <HAL_I2C_Master_Receive+0x458>
 80025fa:	68fb      	ldr	r3, [r7, #12]
 80025fc:	681b      	ldr	r3, [r3, #0]
 80025fe:	691a      	ldr	r2, [r3, #16]
 8002600:	68fb      	ldr	r3, [r7, #12]
 8002602:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002604:	b2d2      	uxtb	r2, r2
 8002606:	701a      	strb	r2, [r3, #0]
 8002608:	68fb      	ldr	r3, [r7, #12]
 800260a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800260c:	1c5a      	adds	r2, r3, #1
 800260e:	68fb      	ldr	r3, [r7, #12]
 8002610:	625a      	str	r2, [r3, #36]	@ 0x24
 8002612:	68fb      	ldr	r3, [r7, #12]
 8002614:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002616:	3b01      	subs	r3, #1
 8002618:	b29a      	uxth	r2, r3
 800261a:	68fb      	ldr	r3, [r7, #12]
 800261c:	851a      	strh	r2, [r3, #40]	@ 0x28
 800261e:	68fb      	ldr	r3, [r7, #12]
 8002620:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8002622:	b29b      	uxth	r3, r3
 8002624:	3b01      	subs	r3, #1
 8002626:	b29a      	uxth	r2, r3
 8002628:	68fb      	ldr	r3, [r7, #12]
 800262a:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800262c:	68fb      	ldr	r3, [r7, #12]
 800262e:	681b      	ldr	r3, [r3, #0]
 8002630:	695b      	ldr	r3, [r3, #20]
 8002632:	f003 0304 	and.w	r3, r3, #4
 8002636:	2b04      	cmp	r3, #4
 8002638:	d124      	bne.n	8002684 <HAL_I2C_Master_Receive+0x430>
 800263a:	68fb      	ldr	r3, [r7, #12]
 800263c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800263e:	2b03      	cmp	r3, #3
 8002640:	d107      	bne.n	8002652 <HAL_I2C_Master_Receive+0x3fe>
 8002642:	68fb      	ldr	r3, [r7, #12]
 8002644:	681b      	ldr	r3, [r3, #0]
 8002646:	681a      	ldr	r2, [r3, #0]
 8002648:	68fb      	ldr	r3, [r7, #12]
 800264a:	681b      	ldr	r3, [r3, #0]
 800264c:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8002650:	601a      	str	r2, [r3, #0]
 8002652:	68fb      	ldr	r3, [r7, #12]
 8002654:	681b      	ldr	r3, [r3, #0]
 8002656:	691a      	ldr	r2, [r3, #16]
 8002658:	68fb      	ldr	r3, [r7, #12]
 800265a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800265c:	b2d2      	uxtb	r2, r2
 800265e:	701a      	strb	r2, [r3, #0]
 8002660:	68fb      	ldr	r3, [r7, #12]
 8002662:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002664:	1c5a      	adds	r2, r3, #1
 8002666:	68fb      	ldr	r3, [r7, #12]
 8002668:	625a      	str	r2, [r3, #36]	@ 0x24
 800266a:	68fb      	ldr	r3, [r7, #12]
 800266c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800266e:	3b01      	subs	r3, #1
 8002670:	b29a      	uxth	r2, r3
 8002672:	68fb      	ldr	r3, [r7, #12]
 8002674:	851a      	strh	r2, [r3, #40]	@ 0x28
 8002676:	68fb      	ldr	r3, [r7, #12]
 8002678:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800267a:	b29b      	uxth	r3, r3
 800267c:	3b01      	subs	r3, #1
 800267e:	b29a      	uxth	r2, r3
 8002680:	68fb      	ldr	r3, [r7, #12]
 8002682:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8002684:	68fb      	ldr	r3, [r7, #12]
 8002686:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002688:	2b00      	cmp	r3, #0
 800268a:	f47f aeb6 	bne.w	80023fa <HAL_I2C_Master_Receive+0x1a6>
 800268e:	68fb      	ldr	r3, [r7, #12]
 8002690:	2220      	movs	r2, #32
 8002692:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002696:	68fb      	ldr	r3, [r7, #12]
 8002698:	2200      	movs	r2, #0
 800269a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800269e:	68fb      	ldr	r3, [r7, #12]
 80026a0:	2200      	movs	r2, #0
 80026a2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80026a6:	2300      	movs	r3, #0
 80026a8:	e000      	b.n	80026ac <HAL_I2C_Master_Receive+0x458>
 80026aa:	2302      	movs	r3, #2
 80026ac:	4618      	mov	r0, r3
 80026ae:	3728      	adds	r7, #40	@ 0x28
 80026b0:	46bd      	mov	sp, r7
 80026b2:	bd80      	pop	{r7, pc}
 80026b4:	00010004 	.word	0x00010004

080026b8 <I2C_MasterRequestWrite>:
 80026b8:	b580      	push	{r7, lr}
 80026ba:	b088      	sub	sp, #32
 80026bc:	af02      	add	r7, sp, #8
 80026be:	60f8      	str	r0, [r7, #12]
 80026c0:	607a      	str	r2, [r7, #4]
 80026c2:	603b      	str	r3, [r7, #0]
 80026c4:	460b      	mov	r3, r1
 80026c6:	817b      	strh	r3, [r7, #10]
 80026c8:	68fb      	ldr	r3, [r7, #12]
 80026ca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80026cc:	617b      	str	r3, [r7, #20]
 80026ce:	697b      	ldr	r3, [r7, #20]
 80026d0:	2b08      	cmp	r3, #8
 80026d2:	d006      	beq.n	80026e2 <I2C_MasterRequestWrite+0x2a>
 80026d4:	697b      	ldr	r3, [r7, #20]
 80026d6:	2b01      	cmp	r3, #1
 80026d8:	d003      	beq.n	80026e2 <I2C_MasterRequestWrite+0x2a>
 80026da:	697b      	ldr	r3, [r7, #20]
 80026dc:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 80026e0:	d108      	bne.n	80026f4 <I2C_MasterRequestWrite+0x3c>
 80026e2:	68fb      	ldr	r3, [r7, #12]
 80026e4:	681b      	ldr	r3, [r3, #0]
 80026e6:	681a      	ldr	r2, [r3, #0]
 80026e8:	68fb      	ldr	r3, [r7, #12]
 80026ea:	681b      	ldr	r3, [r3, #0]
 80026ec:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80026f0:	601a      	str	r2, [r3, #0]
 80026f2:	e00b      	b.n	800270c <I2C_MasterRequestWrite+0x54>
 80026f4:	68fb      	ldr	r3, [r7, #12]
 80026f6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80026f8:	2b12      	cmp	r3, #18
 80026fa:	d107      	bne.n	800270c <I2C_MasterRequestWrite+0x54>
 80026fc:	68fb      	ldr	r3, [r7, #12]
 80026fe:	681b      	ldr	r3, [r3, #0]
 8002700:	681a      	ldr	r2, [r3, #0]
 8002702:	68fb      	ldr	r3, [r7, #12]
 8002704:	681b      	ldr	r3, [r3, #0]
 8002706:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800270a:	601a      	str	r2, [r3, #0]
 800270c:	683b      	ldr	r3, [r7, #0]
 800270e:	9300      	str	r3, [sp, #0]
 8002710:	687b      	ldr	r3, [r7, #4]
 8002712:	2200      	movs	r2, #0
 8002714:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8002718:	68f8      	ldr	r0, [r7, #12]
 800271a:	f000 f91d 	bl	8002958 <I2C_WaitOnFlagUntilTimeout>
 800271e:	4603      	mov	r3, r0
 8002720:	2b00      	cmp	r3, #0
 8002722:	d00d      	beq.n	8002740 <I2C_MasterRequestWrite+0x88>
 8002724:	68fb      	ldr	r3, [r7, #12]
 8002726:	681b      	ldr	r3, [r3, #0]
 8002728:	681b      	ldr	r3, [r3, #0]
 800272a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800272e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8002732:	d103      	bne.n	800273c <I2C_MasterRequestWrite+0x84>
 8002734:	68fb      	ldr	r3, [r7, #12]
 8002736:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800273a:	641a      	str	r2, [r3, #64]	@ 0x40
 800273c:	2303      	movs	r3, #3
 800273e:	e035      	b.n	80027ac <I2C_MasterRequestWrite+0xf4>
 8002740:	68fb      	ldr	r3, [r7, #12]
 8002742:	691b      	ldr	r3, [r3, #16]
 8002744:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8002748:	d108      	bne.n	800275c <I2C_MasterRequestWrite+0xa4>
 800274a:	897b      	ldrh	r3, [r7, #10]
 800274c:	b2db      	uxtb	r3, r3
 800274e:	461a      	mov	r2, r3
 8002750:	68fb      	ldr	r3, [r7, #12]
 8002752:	681b      	ldr	r3, [r3, #0]
 8002754:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 8002758:	611a      	str	r2, [r3, #16]
 800275a:	e01b      	b.n	8002794 <I2C_MasterRequestWrite+0xdc>
 800275c:	897b      	ldrh	r3, [r7, #10]
 800275e:	11db      	asrs	r3, r3, #7
 8002760:	b2db      	uxtb	r3, r3
 8002762:	f003 0306 	and.w	r3, r3, #6
 8002766:	b2db      	uxtb	r3, r3
 8002768:	f063 030f 	orn	r3, r3, #15
 800276c:	b2da      	uxtb	r2, r3
 800276e:	68fb      	ldr	r3, [r7, #12]
 8002770:	681b      	ldr	r3, [r3, #0]
 8002772:	611a      	str	r2, [r3, #16]
 8002774:	683b      	ldr	r3, [r7, #0]
 8002776:	687a      	ldr	r2, [r7, #4]
 8002778:	490e      	ldr	r1, [pc, #56]	@ (80027b4 <I2C_MasterRequestWrite+0xfc>)
 800277a:	68f8      	ldr	r0, [r7, #12]
 800277c:	f000 f966 	bl	8002a4c <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8002780:	4603      	mov	r3, r0
 8002782:	2b00      	cmp	r3, #0
 8002784:	d001      	beq.n	800278a <I2C_MasterRequestWrite+0xd2>
 8002786:	2301      	movs	r3, #1
 8002788:	e010      	b.n	80027ac <I2C_MasterRequestWrite+0xf4>
 800278a:	897b      	ldrh	r3, [r7, #10]
 800278c:	b2da      	uxtb	r2, r3
 800278e:	68fb      	ldr	r3, [r7, #12]
 8002790:	681b      	ldr	r3, [r3, #0]
 8002792:	611a      	str	r2, [r3, #16]
 8002794:	683b      	ldr	r3, [r7, #0]
 8002796:	687a      	ldr	r2, [r7, #4]
 8002798:	4907      	ldr	r1, [pc, #28]	@ (80027b8 <I2C_MasterRequestWrite+0x100>)
 800279a:	68f8      	ldr	r0, [r7, #12]
 800279c:	f000 f956 	bl	8002a4c <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80027a0:	4603      	mov	r3, r0
 80027a2:	2b00      	cmp	r3, #0
 80027a4:	d001      	beq.n	80027aa <I2C_MasterRequestWrite+0xf2>
 80027a6:	2301      	movs	r3, #1
 80027a8:	e000      	b.n	80027ac <I2C_MasterRequestWrite+0xf4>
 80027aa:	2300      	movs	r3, #0
 80027ac:	4618      	mov	r0, r3
 80027ae:	3718      	adds	r7, #24
 80027b0:	46bd      	mov	sp, r7
 80027b2:	bd80      	pop	{r7, pc}
 80027b4:	00010008 	.word	0x00010008
 80027b8:	00010002 	.word	0x00010002

080027bc <I2C_MasterRequestRead>:
 80027bc:	b580      	push	{r7, lr}
 80027be:	b088      	sub	sp, #32
 80027c0:	af02      	add	r7, sp, #8
 80027c2:	60f8      	str	r0, [r7, #12]
 80027c4:	607a      	str	r2, [r7, #4]
 80027c6:	603b      	str	r3, [r7, #0]
 80027c8:	460b      	mov	r3, r1
 80027ca:	817b      	strh	r3, [r7, #10]
 80027cc:	68fb      	ldr	r3, [r7, #12]
 80027ce:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80027d0:	617b      	str	r3, [r7, #20]
 80027d2:	68fb      	ldr	r3, [r7, #12]
 80027d4:	681b      	ldr	r3, [r3, #0]
 80027d6:	681a      	ldr	r2, [r3, #0]
 80027d8:	68fb      	ldr	r3, [r7, #12]
 80027da:	681b      	ldr	r3, [r3, #0]
 80027dc:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 80027e0:	601a      	str	r2, [r3, #0]
 80027e2:	697b      	ldr	r3, [r7, #20]
 80027e4:	2b08      	cmp	r3, #8
 80027e6:	d006      	beq.n	80027f6 <I2C_MasterRequestRead+0x3a>
 80027e8:	697b      	ldr	r3, [r7, #20]
 80027ea:	2b01      	cmp	r3, #1
 80027ec:	d003      	beq.n	80027f6 <I2C_MasterRequestRead+0x3a>
 80027ee:	697b      	ldr	r3, [r7, #20]
 80027f0:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 80027f4:	d108      	bne.n	8002808 <I2C_MasterRequestRead+0x4c>
 80027f6:	68fb      	ldr	r3, [r7, #12]
 80027f8:	681b      	ldr	r3, [r3, #0]
 80027fa:	681a      	ldr	r2, [r3, #0]
 80027fc:	68fb      	ldr	r3, [r7, #12]
 80027fe:	681b      	ldr	r3, [r3, #0]
 8002800:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8002804:	601a      	str	r2, [r3, #0]
 8002806:	e00b      	b.n	8002820 <I2C_MasterRequestRead+0x64>
 8002808:	68fb      	ldr	r3, [r7, #12]
 800280a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800280c:	2b11      	cmp	r3, #17
 800280e:	d107      	bne.n	8002820 <I2C_MasterRequestRead+0x64>
 8002810:	68fb      	ldr	r3, [r7, #12]
 8002812:	681b      	ldr	r3, [r3, #0]
 8002814:	681a      	ldr	r2, [r3, #0]
 8002816:	68fb      	ldr	r3, [r7, #12]
 8002818:	681b      	ldr	r3, [r3, #0]
 800281a:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800281e:	601a      	str	r2, [r3, #0]
 8002820:	683b      	ldr	r3, [r7, #0]
 8002822:	9300      	str	r3, [sp, #0]
 8002824:	687b      	ldr	r3, [r7, #4]
 8002826:	2200      	movs	r2, #0
 8002828:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 800282c:	68f8      	ldr	r0, [r7, #12]
 800282e:	f000 f893 	bl	8002958 <I2C_WaitOnFlagUntilTimeout>
 8002832:	4603      	mov	r3, r0
 8002834:	2b00      	cmp	r3, #0
 8002836:	d00d      	beq.n	8002854 <I2C_MasterRequestRead+0x98>
 8002838:	68fb      	ldr	r3, [r7, #12]
 800283a:	681b      	ldr	r3, [r3, #0]
 800283c:	681b      	ldr	r3, [r3, #0]
 800283e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002842:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8002846:	d103      	bne.n	8002850 <I2C_MasterRequestRead+0x94>
 8002848:	68fb      	ldr	r3, [r7, #12]
 800284a:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800284e:	641a      	str	r2, [r3, #64]	@ 0x40
 8002850:	2303      	movs	r3, #3
 8002852:	e079      	b.n	8002948 <I2C_MasterRequestRead+0x18c>
 8002854:	68fb      	ldr	r3, [r7, #12]
 8002856:	691b      	ldr	r3, [r3, #16]
 8002858:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 800285c:	d108      	bne.n	8002870 <I2C_MasterRequestRead+0xb4>
 800285e:	897b      	ldrh	r3, [r7, #10]
 8002860:	b2db      	uxtb	r3, r3
 8002862:	f043 0301 	orr.w	r3, r3, #1
 8002866:	b2da      	uxtb	r2, r3
 8002868:	68fb      	ldr	r3, [r7, #12]
 800286a:	681b      	ldr	r3, [r3, #0]
 800286c:	611a      	str	r2, [r3, #16]
 800286e:	e05f      	b.n	8002930 <I2C_MasterRequestRead+0x174>
 8002870:	897b      	ldrh	r3, [r7, #10]
 8002872:	11db      	asrs	r3, r3, #7
 8002874:	b2db      	uxtb	r3, r3
 8002876:	f003 0306 	and.w	r3, r3, #6
 800287a:	b2db      	uxtb	r3, r3
 800287c:	f063 030f 	orn	r3, r3, #15
 8002880:	b2da      	uxtb	r2, r3
 8002882:	68fb      	ldr	r3, [r7, #12]
 8002884:	681b      	ldr	r3, [r3, #0]
 8002886:	611a      	str	r2, [r3, #16]
 8002888:	683b      	ldr	r3, [r7, #0]
 800288a:	687a      	ldr	r2, [r7, #4]
 800288c:	4930      	ldr	r1, [pc, #192]	@ (8002950 <I2C_MasterRequestRead+0x194>)
 800288e:	68f8      	ldr	r0, [r7, #12]
 8002890:	f000 f8dc 	bl	8002a4c <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8002894:	4603      	mov	r3, r0
 8002896:	2b00      	cmp	r3, #0
 8002898:	d001      	beq.n	800289e <I2C_MasterRequestRead+0xe2>
 800289a:	2301      	movs	r3, #1
 800289c:	e054      	b.n	8002948 <I2C_MasterRequestRead+0x18c>
 800289e:	897b      	ldrh	r3, [r7, #10]
 80028a0:	b2da      	uxtb	r2, r3
 80028a2:	68fb      	ldr	r3, [r7, #12]
 80028a4:	681b      	ldr	r3, [r3, #0]
 80028a6:	611a      	str	r2, [r3, #16]
 80028a8:	683b      	ldr	r3, [r7, #0]
 80028aa:	687a      	ldr	r2, [r7, #4]
 80028ac:	4929      	ldr	r1, [pc, #164]	@ (8002954 <I2C_MasterRequestRead+0x198>)
 80028ae:	68f8      	ldr	r0, [r7, #12]
 80028b0:	f000 f8cc 	bl	8002a4c <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80028b4:	4603      	mov	r3, r0
 80028b6:	2b00      	cmp	r3, #0
 80028b8:	d001      	beq.n	80028be <I2C_MasterRequestRead+0x102>
 80028ba:	2301      	movs	r3, #1
 80028bc:	e044      	b.n	8002948 <I2C_MasterRequestRead+0x18c>
 80028be:	2300      	movs	r3, #0
 80028c0:	613b      	str	r3, [r7, #16]
 80028c2:	68fb      	ldr	r3, [r7, #12]
 80028c4:	681b      	ldr	r3, [r3, #0]
 80028c6:	695b      	ldr	r3, [r3, #20]
 80028c8:	613b      	str	r3, [r7, #16]
 80028ca:	68fb      	ldr	r3, [r7, #12]
 80028cc:	681b      	ldr	r3, [r3, #0]
 80028ce:	699b      	ldr	r3, [r3, #24]
 80028d0:	613b      	str	r3, [r7, #16]
 80028d2:	693b      	ldr	r3, [r7, #16]
 80028d4:	68fb      	ldr	r3, [r7, #12]
 80028d6:	681b      	ldr	r3, [r3, #0]
 80028d8:	681a      	ldr	r2, [r3, #0]
 80028da:	68fb      	ldr	r3, [r7, #12]
 80028dc:	681b      	ldr	r3, [r3, #0]
 80028de:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80028e2:	601a      	str	r2, [r3, #0]
 80028e4:	683b      	ldr	r3, [r7, #0]
 80028e6:	9300      	str	r3, [sp, #0]
 80028e8:	687b      	ldr	r3, [r7, #4]
 80028ea:	2200      	movs	r2, #0
 80028ec:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 80028f0:	68f8      	ldr	r0, [r7, #12]
 80028f2:	f000 f831 	bl	8002958 <I2C_WaitOnFlagUntilTimeout>
 80028f6:	4603      	mov	r3, r0
 80028f8:	2b00      	cmp	r3, #0
 80028fa:	d00d      	beq.n	8002918 <I2C_MasterRequestRead+0x15c>
 80028fc:	68fb      	ldr	r3, [r7, #12]
 80028fe:	681b      	ldr	r3, [r3, #0]
 8002900:	681b      	ldr	r3, [r3, #0]
 8002902:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002906:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800290a:	d103      	bne.n	8002914 <I2C_MasterRequestRead+0x158>
 800290c:	68fb      	ldr	r3, [r7, #12]
 800290e:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002912:	641a      	str	r2, [r3, #64]	@ 0x40
 8002914:	2303      	movs	r3, #3
 8002916:	e017      	b.n	8002948 <I2C_MasterRequestRead+0x18c>
 8002918:	897b      	ldrh	r3, [r7, #10]
 800291a:	11db      	asrs	r3, r3, #7
 800291c:	b2db      	uxtb	r3, r3
 800291e:	f003 0306 	and.w	r3, r3, #6
 8002922:	b2db      	uxtb	r3, r3
 8002924:	f063 030e 	orn	r3, r3, #14
 8002928:	b2da      	uxtb	r2, r3
 800292a:	68fb      	ldr	r3, [r7, #12]
 800292c:	681b      	ldr	r3, [r3, #0]
 800292e:	611a      	str	r2, [r3, #16]
 8002930:	683b      	ldr	r3, [r7, #0]
 8002932:	687a      	ldr	r2, [r7, #4]
 8002934:	4907      	ldr	r1, [pc, #28]	@ (8002954 <I2C_MasterRequestRead+0x198>)
 8002936:	68f8      	ldr	r0, [r7, #12]
 8002938:	f000 f888 	bl	8002a4c <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800293c:	4603      	mov	r3, r0
 800293e:	2b00      	cmp	r3, #0
 8002940:	d001      	beq.n	8002946 <I2C_MasterRequestRead+0x18a>
 8002942:	2301      	movs	r3, #1
 8002944:	e000      	b.n	8002948 <I2C_MasterRequestRead+0x18c>
 8002946:	2300      	movs	r3, #0
 8002948:	4618      	mov	r0, r3
 800294a:	3718      	adds	r7, #24
 800294c:	46bd      	mov	sp, r7
 800294e:	bd80      	pop	{r7, pc}
 8002950:	00010008 	.word	0x00010008
 8002954:	00010002 	.word	0x00010002

08002958 <I2C_WaitOnFlagUntilTimeout>:
 8002958:	b580      	push	{r7, lr}
 800295a:	b084      	sub	sp, #16
 800295c:	af00      	add	r7, sp, #0
 800295e:	60f8      	str	r0, [r7, #12]
 8002960:	60b9      	str	r1, [r7, #8]
 8002962:	603b      	str	r3, [r7, #0]
 8002964:	4613      	mov	r3, r2
 8002966:	71fb      	strb	r3, [r7, #7]
 8002968:	e048      	b.n	80029fc <I2C_WaitOnFlagUntilTimeout+0xa4>
 800296a:	683b      	ldr	r3, [r7, #0]
 800296c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002970:	d044      	beq.n	80029fc <I2C_WaitOnFlagUntilTimeout+0xa4>
 8002972:	f7fe fd73 	bl	800145c <HAL_GetTick>
 8002976:	4602      	mov	r2, r0
 8002978:	69bb      	ldr	r3, [r7, #24]
 800297a:	1ad3      	subs	r3, r2, r3
 800297c:	683a      	ldr	r2, [r7, #0]
 800297e:	429a      	cmp	r2, r3
 8002980:	d302      	bcc.n	8002988 <I2C_WaitOnFlagUntilTimeout+0x30>
 8002982:	683b      	ldr	r3, [r7, #0]
 8002984:	2b00      	cmp	r3, #0
 8002986:	d139      	bne.n	80029fc <I2C_WaitOnFlagUntilTimeout+0xa4>
 8002988:	68bb      	ldr	r3, [r7, #8]
 800298a:	0c1b      	lsrs	r3, r3, #16
 800298c:	b2db      	uxtb	r3, r3
 800298e:	2b01      	cmp	r3, #1
 8002990:	d10d      	bne.n	80029ae <I2C_WaitOnFlagUntilTimeout+0x56>
 8002992:	68fb      	ldr	r3, [r7, #12]
 8002994:	681b      	ldr	r3, [r3, #0]
 8002996:	695b      	ldr	r3, [r3, #20]
 8002998:	43da      	mvns	r2, r3
 800299a:	68bb      	ldr	r3, [r7, #8]
 800299c:	4013      	ands	r3, r2
 800299e:	b29b      	uxth	r3, r3
 80029a0:	2b00      	cmp	r3, #0
 80029a2:	bf0c      	ite	eq
 80029a4:	2301      	moveq	r3, #1
 80029a6:	2300      	movne	r3, #0
 80029a8:	b2db      	uxtb	r3, r3
 80029aa:	461a      	mov	r2, r3
 80029ac:	e00c      	b.n	80029c8 <I2C_WaitOnFlagUntilTimeout+0x70>
 80029ae:	68fb      	ldr	r3, [r7, #12]
 80029b0:	681b      	ldr	r3, [r3, #0]
 80029b2:	699b      	ldr	r3, [r3, #24]
 80029b4:	43da      	mvns	r2, r3
 80029b6:	68bb      	ldr	r3, [r7, #8]
 80029b8:	4013      	ands	r3, r2
 80029ba:	b29b      	uxth	r3, r3
 80029bc:	2b00      	cmp	r3, #0
 80029be:	bf0c      	ite	eq
 80029c0:	2301      	moveq	r3, #1
 80029c2:	2300      	movne	r3, #0
 80029c4:	b2db      	uxtb	r3, r3
 80029c6:	461a      	mov	r2, r3
 80029c8:	79fb      	ldrb	r3, [r7, #7]
 80029ca:	429a      	cmp	r2, r3
 80029cc:	d116      	bne.n	80029fc <I2C_WaitOnFlagUntilTimeout+0xa4>
 80029ce:	68fb      	ldr	r3, [r7, #12]
 80029d0:	2200      	movs	r2, #0
 80029d2:	631a      	str	r2, [r3, #48]	@ 0x30
 80029d4:	68fb      	ldr	r3, [r7, #12]
 80029d6:	2220      	movs	r2, #32
 80029d8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80029dc:	68fb      	ldr	r3, [r7, #12]
 80029de:	2200      	movs	r2, #0
 80029e0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80029e4:	68fb      	ldr	r3, [r7, #12]
 80029e6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80029e8:	f043 0220 	orr.w	r2, r3, #32
 80029ec:	68fb      	ldr	r3, [r7, #12]
 80029ee:	641a      	str	r2, [r3, #64]	@ 0x40
 80029f0:	68fb      	ldr	r3, [r7, #12]
 80029f2:	2200      	movs	r2, #0
 80029f4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80029f8:	2301      	movs	r3, #1
 80029fa:	e023      	b.n	8002a44 <I2C_WaitOnFlagUntilTimeout+0xec>
 80029fc:	68bb      	ldr	r3, [r7, #8]
 80029fe:	0c1b      	lsrs	r3, r3, #16
 8002a00:	b2db      	uxtb	r3, r3
 8002a02:	2b01      	cmp	r3, #1
 8002a04:	d10d      	bne.n	8002a22 <I2C_WaitOnFlagUntilTimeout+0xca>
 8002a06:	68fb      	ldr	r3, [r7, #12]
 8002a08:	681b      	ldr	r3, [r3, #0]
 8002a0a:	695b      	ldr	r3, [r3, #20]
 8002a0c:	43da      	mvns	r2, r3
 8002a0e:	68bb      	ldr	r3, [r7, #8]
 8002a10:	4013      	ands	r3, r2
 8002a12:	b29b      	uxth	r3, r3
 8002a14:	2b00      	cmp	r3, #0
 8002a16:	bf0c      	ite	eq
 8002a18:	2301      	moveq	r3, #1
 8002a1a:	2300      	movne	r3, #0
 8002a1c:	b2db      	uxtb	r3, r3
 8002a1e:	461a      	mov	r2, r3
 8002a20:	e00c      	b.n	8002a3c <I2C_WaitOnFlagUntilTimeout+0xe4>
 8002a22:	68fb      	ldr	r3, [r7, #12]
 8002a24:	681b      	ldr	r3, [r3, #0]
 8002a26:	699b      	ldr	r3, [r3, #24]
 8002a28:	43da      	mvns	r2, r3
 8002a2a:	68bb      	ldr	r3, [r7, #8]
 8002a2c:	4013      	ands	r3, r2
 8002a2e:	b29b      	uxth	r3, r3
 8002a30:	2b00      	cmp	r3, #0
 8002a32:	bf0c      	ite	eq
 8002a34:	2301      	moveq	r3, #1
 8002a36:	2300      	movne	r3, #0
 8002a38:	b2db      	uxtb	r3, r3
 8002a3a:	461a      	mov	r2, r3
 8002a3c:	79fb      	ldrb	r3, [r7, #7]
 8002a3e:	429a      	cmp	r2, r3
 8002a40:	d093      	beq.n	800296a <I2C_WaitOnFlagUntilTimeout+0x12>
 8002a42:	2300      	movs	r3, #0
 8002a44:	4618      	mov	r0, r3
 8002a46:	3710      	adds	r7, #16
 8002a48:	46bd      	mov	sp, r7
 8002a4a:	bd80      	pop	{r7, pc}

08002a4c <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 8002a4c:	b580      	push	{r7, lr}
 8002a4e:	b084      	sub	sp, #16
 8002a50:	af00      	add	r7, sp, #0
 8002a52:	60f8      	str	r0, [r7, #12]
 8002a54:	60b9      	str	r1, [r7, #8]
 8002a56:	607a      	str	r2, [r7, #4]
 8002a58:	603b      	str	r3, [r7, #0]
 8002a5a:	e071      	b.n	8002b40 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8002a5c:	68fb      	ldr	r3, [r7, #12]
 8002a5e:	681b      	ldr	r3, [r3, #0]
 8002a60:	695b      	ldr	r3, [r3, #20]
 8002a62:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002a66:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8002a6a:	d123      	bne.n	8002ab4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 8002a6c:	68fb      	ldr	r3, [r7, #12]
 8002a6e:	681b      	ldr	r3, [r3, #0]
 8002a70:	681a      	ldr	r2, [r3, #0]
 8002a72:	68fb      	ldr	r3, [r7, #12]
 8002a74:	681b      	ldr	r3, [r3, #0]
 8002a76:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8002a7a:	601a      	str	r2, [r3, #0]
 8002a7c:	68fb      	ldr	r3, [r7, #12]
 8002a7e:	681b      	ldr	r3, [r3, #0]
 8002a80:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8002a84:	615a      	str	r2, [r3, #20]
 8002a86:	68fb      	ldr	r3, [r7, #12]
 8002a88:	2200      	movs	r2, #0
 8002a8a:	631a      	str	r2, [r3, #48]	@ 0x30
 8002a8c:	68fb      	ldr	r3, [r7, #12]
 8002a8e:	2220      	movs	r2, #32
 8002a90:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002a94:	68fb      	ldr	r3, [r7, #12]
 8002a96:	2200      	movs	r2, #0
 8002a98:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002a9c:	68fb      	ldr	r3, [r7, #12]
 8002a9e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002aa0:	f043 0204 	orr.w	r2, r3, #4
 8002aa4:	68fb      	ldr	r3, [r7, #12]
 8002aa6:	641a      	str	r2, [r3, #64]	@ 0x40
 8002aa8:	68fb      	ldr	r3, [r7, #12]
 8002aaa:	2200      	movs	r2, #0
 8002aac:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002ab0:	2301      	movs	r3, #1
 8002ab2:	e067      	b.n	8002b84 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8002ab4:	687b      	ldr	r3, [r7, #4]
 8002ab6:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002aba:	d041      	beq.n	8002b40 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8002abc:	f7fe fcce 	bl	800145c <HAL_GetTick>
 8002ac0:	4602      	mov	r2, r0
 8002ac2:	683b      	ldr	r3, [r7, #0]
 8002ac4:	1ad3      	subs	r3, r2, r3
 8002ac6:	687a      	ldr	r2, [r7, #4]
 8002ac8:	429a      	cmp	r2, r3
 8002aca:	d302      	bcc.n	8002ad2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8002acc:	687b      	ldr	r3, [r7, #4]
 8002ace:	2b00      	cmp	r3, #0
 8002ad0:	d136      	bne.n	8002b40 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8002ad2:	68bb      	ldr	r3, [r7, #8]
 8002ad4:	0c1b      	lsrs	r3, r3, #16
 8002ad6:	b2db      	uxtb	r3, r3
 8002ad8:	2b01      	cmp	r3, #1
 8002ada:	d10c      	bne.n	8002af6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xaa>
 8002adc:	68fb      	ldr	r3, [r7, #12]
 8002ade:	681b      	ldr	r3, [r3, #0]
 8002ae0:	695b      	ldr	r3, [r3, #20]
 8002ae2:	43da      	mvns	r2, r3
 8002ae4:	68bb      	ldr	r3, [r7, #8]
 8002ae6:	4013      	ands	r3, r2
 8002ae8:	b29b      	uxth	r3, r3
 8002aea:	2b00      	cmp	r3, #0
 8002aec:	bf14      	ite	ne
 8002aee:	2301      	movne	r3, #1
 8002af0:	2300      	moveq	r3, #0
 8002af2:	b2db      	uxtb	r3, r3
 8002af4:	e00b      	b.n	8002b0e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc2>
 8002af6:	68fb      	ldr	r3, [r7, #12]
 8002af8:	681b      	ldr	r3, [r3, #0]
 8002afa:	699b      	ldr	r3, [r3, #24]
 8002afc:	43da      	mvns	r2, r3
 8002afe:	68bb      	ldr	r3, [r7, #8]
 8002b00:	4013      	ands	r3, r2
 8002b02:	b29b      	uxth	r3, r3
 8002b04:	2b00      	cmp	r3, #0
 8002b06:	bf14      	ite	ne
 8002b08:	2301      	movne	r3, #1
 8002b0a:	2300      	moveq	r3, #0
 8002b0c:	b2db      	uxtb	r3, r3
 8002b0e:	2b00      	cmp	r3, #0
 8002b10:	d016      	beq.n	8002b40 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8002b12:	68fb      	ldr	r3, [r7, #12]
 8002b14:	2200      	movs	r2, #0
 8002b16:	631a      	str	r2, [r3, #48]	@ 0x30
 8002b18:	68fb      	ldr	r3, [r7, #12]
 8002b1a:	2220      	movs	r2, #32
 8002b1c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002b20:	68fb      	ldr	r3, [r7, #12]
 8002b22:	2200      	movs	r2, #0
 8002b24:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002b28:	68fb      	ldr	r3, [r7, #12]
 8002b2a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002b2c:	f043 0220 	orr.w	r2, r3, #32
 8002b30:	68fb      	ldr	r3, [r7, #12]
 8002b32:	641a      	str	r2, [r3, #64]	@ 0x40
 8002b34:	68fb      	ldr	r3, [r7, #12]
 8002b36:	2200      	movs	r2, #0
 8002b38:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002b3c:	2301      	movs	r3, #1
 8002b3e:	e021      	b.n	8002b84 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8002b40:	68bb      	ldr	r3, [r7, #8]
 8002b42:	0c1b      	lsrs	r3, r3, #16
 8002b44:	b2db      	uxtb	r3, r3
 8002b46:	2b01      	cmp	r3, #1
 8002b48:	d10c      	bne.n	8002b64 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x118>
 8002b4a:	68fb      	ldr	r3, [r7, #12]
 8002b4c:	681b      	ldr	r3, [r3, #0]
 8002b4e:	695b      	ldr	r3, [r3, #20]
 8002b50:	43da      	mvns	r2, r3
 8002b52:	68bb      	ldr	r3, [r7, #8]
 8002b54:	4013      	ands	r3, r2
 8002b56:	b29b      	uxth	r3, r3
 8002b58:	2b00      	cmp	r3, #0
 8002b5a:	bf14      	ite	ne
 8002b5c:	2301      	movne	r3, #1
 8002b5e:	2300      	moveq	r3, #0
 8002b60:	b2db      	uxtb	r3, r3
 8002b62:	e00b      	b.n	8002b7c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x130>
 8002b64:	68fb      	ldr	r3, [r7, #12]
 8002b66:	681b      	ldr	r3, [r3, #0]
 8002b68:	699b      	ldr	r3, [r3, #24]
 8002b6a:	43da      	mvns	r2, r3
 8002b6c:	68bb      	ldr	r3, [r7, #8]
 8002b6e:	4013      	ands	r3, r2
 8002b70:	b29b      	uxth	r3, r3
 8002b72:	2b00      	cmp	r3, #0
 8002b74:	bf14      	ite	ne
 8002b76:	2301      	movne	r3, #1
 8002b78:	2300      	moveq	r3, #0
 8002b7a:	b2db      	uxtb	r3, r3
 8002b7c:	2b00      	cmp	r3, #0
 8002b7e:	f47f af6d 	bne.w	8002a5c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 8002b82:	2300      	movs	r3, #0
 8002b84:	4618      	mov	r0, r3
 8002b86:	3710      	adds	r7, #16
 8002b88:	46bd      	mov	sp, r7
 8002b8a:	bd80      	pop	{r7, pc}

08002b8c <I2C_WaitOnTXEFlagUntilTimeout>:
 8002b8c:	b580      	push	{r7, lr}
 8002b8e:	b084      	sub	sp, #16
 8002b90:	af00      	add	r7, sp, #0
 8002b92:	60f8      	str	r0, [r7, #12]
 8002b94:	60b9      	str	r1, [r7, #8]
 8002b96:	607a      	str	r2, [r7, #4]
 8002b98:	e034      	b.n	8002c04 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8002b9a:	68f8      	ldr	r0, [r7, #12]
 8002b9c:	f000 f8e3 	bl	8002d66 <I2C_IsAcknowledgeFailed>
 8002ba0:	4603      	mov	r3, r0
 8002ba2:	2b00      	cmp	r3, #0
 8002ba4:	d001      	beq.n	8002baa <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 8002ba6:	2301      	movs	r3, #1
 8002ba8:	e034      	b.n	8002c14 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 8002baa:	68bb      	ldr	r3, [r7, #8]
 8002bac:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002bb0:	d028      	beq.n	8002c04 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8002bb2:	f7fe fc53 	bl	800145c <HAL_GetTick>
 8002bb6:	4602      	mov	r2, r0
 8002bb8:	687b      	ldr	r3, [r7, #4]
 8002bba:	1ad3      	subs	r3, r2, r3
 8002bbc:	68ba      	ldr	r2, [r7, #8]
 8002bbe:	429a      	cmp	r2, r3
 8002bc0:	d302      	bcc.n	8002bc8 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8002bc2:	68bb      	ldr	r3, [r7, #8]
 8002bc4:	2b00      	cmp	r3, #0
 8002bc6:	d11d      	bne.n	8002c04 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8002bc8:	68fb      	ldr	r3, [r7, #12]
 8002bca:	681b      	ldr	r3, [r3, #0]
 8002bcc:	695b      	ldr	r3, [r3, #20]
 8002bce:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002bd2:	2b80      	cmp	r3, #128	@ 0x80
 8002bd4:	d016      	beq.n	8002c04 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8002bd6:	68fb      	ldr	r3, [r7, #12]
 8002bd8:	2200      	movs	r2, #0
 8002bda:	631a      	str	r2, [r3, #48]	@ 0x30
 8002bdc:	68fb      	ldr	r3, [r7, #12]
 8002bde:	2220      	movs	r2, #32
 8002be0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002be4:	68fb      	ldr	r3, [r7, #12]
 8002be6:	2200      	movs	r2, #0
 8002be8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002bec:	68fb      	ldr	r3, [r7, #12]
 8002bee:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002bf0:	f043 0220 	orr.w	r2, r3, #32
 8002bf4:	68fb      	ldr	r3, [r7, #12]
 8002bf6:	641a      	str	r2, [r3, #64]	@ 0x40
 8002bf8:	68fb      	ldr	r3, [r7, #12]
 8002bfa:	2200      	movs	r2, #0
 8002bfc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002c00:	2301      	movs	r3, #1
 8002c02:	e007      	b.n	8002c14 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 8002c04:	68fb      	ldr	r3, [r7, #12]
 8002c06:	681b      	ldr	r3, [r3, #0]
 8002c08:	695b      	ldr	r3, [r3, #20]
 8002c0a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002c0e:	2b80      	cmp	r3, #128	@ 0x80
 8002c10:	d1c3      	bne.n	8002b9a <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 8002c12:	2300      	movs	r3, #0
 8002c14:	4618      	mov	r0, r3
 8002c16:	3710      	adds	r7, #16
 8002c18:	46bd      	mov	sp, r7
 8002c1a:	bd80      	pop	{r7, pc}

08002c1c <I2C_WaitOnBTFFlagUntilTimeout>:
 8002c1c:	b580      	push	{r7, lr}
 8002c1e:	b084      	sub	sp, #16
 8002c20:	af00      	add	r7, sp, #0
 8002c22:	60f8      	str	r0, [r7, #12]
 8002c24:	60b9      	str	r1, [r7, #8]
 8002c26:	607a      	str	r2, [r7, #4]
 8002c28:	e034      	b.n	8002c94 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8002c2a:	68f8      	ldr	r0, [r7, #12]
 8002c2c:	f000 f89b 	bl	8002d66 <I2C_IsAcknowledgeFailed>
 8002c30:	4603      	mov	r3, r0
 8002c32:	2b00      	cmp	r3, #0
 8002c34:	d001      	beq.n	8002c3a <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 8002c36:	2301      	movs	r3, #1
 8002c38:	e034      	b.n	8002ca4 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 8002c3a:	68bb      	ldr	r3, [r7, #8]
 8002c3c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002c40:	d028      	beq.n	8002c94 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8002c42:	f7fe fc0b 	bl	800145c <HAL_GetTick>
 8002c46:	4602      	mov	r2, r0
 8002c48:	687b      	ldr	r3, [r7, #4]
 8002c4a:	1ad3      	subs	r3, r2, r3
 8002c4c:	68ba      	ldr	r2, [r7, #8]
 8002c4e:	429a      	cmp	r2, r3
 8002c50:	d302      	bcc.n	8002c58 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8002c52:	68bb      	ldr	r3, [r7, #8]
 8002c54:	2b00      	cmp	r3, #0
 8002c56:	d11d      	bne.n	8002c94 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8002c58:	68fb      	ldr	r3, [r7, #12]
 8002c5a:	681b      	ldr	r3, [r3, #0]
 8002c5c:	695b      	ldr	r3, [r3, #20]
 8002c5e:	f003 0304 	and.w	r3, r3, #4
 8002c62:	2b04      	cmp	r3, #4
 8002c64:	d016      	beq.n	8002c94 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8002c66:	68fb      	ldr	r3, [r7, #12]
 8002c68:	2200      	movs	r2, #0
 8002c6a:	631a      	str	r2, [r3, #48]	@ 0x30
 8002c6c:	68fb      	ldr	r3, [r7, #12]
 8002c6e:	2220      	movs	r2, #32
 8002c70:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002c74:	68fb      	ldr	r3, [r7, #12]
 8002c76:	2200      	movs	r2, #0
 8002c78:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002c7c:	68fb      	ldr	r3, [r7, #12]
 8002c7e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002c80:	f043 0220 	orr.w	r2, r3, #32
 8002c84:	68fb      	ldr	r3, [r7, #12]
 8002c86:	641a      	str	r2, [r3, #64]	@ 0x40
 8002c88:	68fb      	ldr	r3, [r7, #12]
 8002c8a:	2200      	movs	r2, #0
 8002c8c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002c90:	2301      	movs	r3, #1
 8002c92:	e007      	b.n	8002ca4 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 8002c94:	68fb      	ldr	r3, [r7, #12]
 8002c96:	681b      	ldr	r3, [r3, #0]
 8002c98:	695b      	ldr	r3, [r3, #20]
 8002c9a:	f003 0304 	and.w	r3, r3, #4
 8002c9e:	2b04      	cmp	r3, #4
 8002ca0:	d1c3      	bne.n	8002c2a <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 8002ca2:	2300      	movs	r3, #0
 8002ca4:	4618      	mov	r0, r3
 8002ca6:	3710      	adds	r7, #16
 8002ca8:	46bd      	mov	sp, r7
 8002caa:	bd80      	pop	{r7, pc}

08002cac <I2C_WaitOnRXNEFlagUntilTimeout>:
 8002cac:	b580      	push	{r7, lr}
 8002cae:	b084      	sub	sp, #16
 8002cb0:	af00      	add	r7, sp, #0
 8002cb2:	60f8      	str	r0, [r7, #12]
 8002cb4:	60b9      	str	r1, [r7, #8]
 8002cb6:	607a      	str	r2, [r7, #4]
 8002cb8:	e049      	b.n	8002d4e <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 8002cba:	68fb      	ldr	r3, [r7, #12]
 8002cbc:	681b      	ldr	r3, [r3, #0]
 8002cbe:	695b      	ldr	r3, [r3, #20]
 8002cc0:	f003 0310 	and.w	r3, r3, #16
 8002cc4:	2b10      	cmp	r3, #16
 8002cc6:	d119      	bne.n	8002cfc <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
 8002cc8:	68fb      	ldr	r3, [r7, #12]
 8002cca:	681b      	ldr	r3, [r3, #0]
 8002ccc:	f06f 0210 	mvn.w	r2, #16
 8002cd0:	615a      	str	r2, [r3, #20]
 8002cd2:	68fb      	ldr	r3, [r7, #12]
 8002cd4:	2200      	movs	r2, #0
 8002cd6:	631a      	str	r2, [r3, #48]	@ 0x30
 8002cd8:	68fb      	ldr	r3, [r7, #12]
 8002cda:	2220      	movs	r2, #32
 8002cdc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002ce0:	68fb      	ldr	r3, [r7, #12]
 8002ce2:	2200      	movs	r2, #0
 8002ce4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002ce8:	68fb      	ldr	r3, [r7, #12]
 8002cea:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8002cec:	68fb      	ldr	r3, [r7, #12]
 8002cee:	641a      	str	r2, [r3, #64]	@ 0x40
 8002cf0:	68fb      	ldr	r3, [r7, #12]
 8002cf2:	2200      	movs	r2, #0
 8002cf4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002cf8:	2301      	movs	r3, #1
 8002cfa:	e030      	b.n	8002d5e <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
 8002cfc:	f7fe fbae 	bl	800145c <HAL_GetTick>
 8002d00:	4602      	mov	r2, r0
 8002d02:	687b      	ldr	r3, [r7, #4]
 8002d04:	1ad3      	subs	r3, r2, r3
 8002d06:	68ba      	ldr	r2, [r7, #8]
 8002d08:	429a      	cmp	r2, r3
 8002d0a:	d302      	bcc.n	8002d12 <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 8002d0c:	68bb      	ldr	r3, [r7, #8]
 8002d0e:	2b00      	cmp	r3, #0
 8002d10:	d11d      	bne.n	8002d4e <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 8002d12:	68fb      	ldr	r3, [r7, #12]
 8002d14:	681b      	ldr	r3, [r3, #0]
 8002d16:	695b      	ldr	r3, [r3, #20]
 8002d18:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002d1c:	2b40      	cmp	r3, #64	@ 0x40
 8002d1e:	d016      	beq.n	8002d4e <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 8002d20:	68fb      	ldr	r3, [r7, #12]
 8002d22:	2200      	movs	r2, #0
 8002d24:	631a      	str	r2, [r3, #48]	@ 0x30
 8002d26:	68fb      	ldr	r3, [r7, #12]
 8002d28:	2220      	movs	r2, #32
 8002d2a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002d2e:	68fb      	ldr	r3, [r7, #12]
 8002d30:	2200      	movs	r2, #0
 8002d32:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002d36:	68fb      	ldr	r3, [r7, #12]
 8002d38:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002d3a:	f043 0220 	orr.w	r2, r3, #32
 8002d3e:	68fb      	ldr	r3, [r7, #12]
 8002d40:	641a      	str	r2, [r3, #64]	@ 0x40
 8002d42:	68fb      	ldr	r3, [r7, #12]
 8002d44:	2200      	movs	r2, #0
 8002d46:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002d4a:	2301      	movs	r3, #1
 8002d4c:	e007      	b.n	8002d5e <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
 8002d4e:	68fb      	ldr	r3, [r7, #12]
 8002d50:	681b      	ldr	r3, [r3, #0]
 8002d52:	695b      	ldr	r3, [r3, #20]
 8002d54:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002d58:	2b40      	cmp	r3, #64	@ 0x40
 8002d5a:	d1ae      	bne.n	8002cba <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
 8002d5c:	2300      	movs	r3, #0
 8002d5e:	4618      	mov	r0, r3
 8002d60:	3710      	adds	r7, #16
 8002d62:	46bd      	mov	sp, r7
 8002d64:	bd80      	pop	{r7, pc}

08002d66 <I2C_IsAcknowledgeFailed>:
 8002d66:	b480      	push	{r7}
 8002d68:	b083      	sub	sp, #12
 8002d6a:	af00      	add	r7, sp, #0
 8002d6c:	6078      	str	r0, [r7, #4]
 8002d6e:	687b      	ldr	r3, [r7, #4]
 8002d70:	681b      	ldr	r3, [r3, #0]
 8002d72:	695b      	ldr	r3, [r3, #20]
 8002d74:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002d78:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8002d7c:	d11b      	bne.n	8002db6 <I2C_IsAcknowledgeFailed+0x50>
 8002d7e:	687b      	ldr	r3, [r7, #4]
 8002d80:	681b      	ldr	r3, [r3, #0]
 8002d82:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8002d86:	615a      	str	r2, [r3, #20]
 8002d88:	687b      	ldr	r3, [r7, #4]
 8002d8a:	2200      	movs	r2, #0
 8002d8c:	631a      	str	r2, [r3, #48]	@ 0x30
 8002d8e:	687b      	ldr	r3, [r7, #4]
 8002d90:	2220      	movs	r2, #32
 8002d92:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002d96:	687b      	ldr	r3, [r7, #4]
 8002d98:	2200      	movs	r2, #0
 8002d9a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002d9e:	687b      	ldr	r3, [r7, #4]
 8002da0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002da2:	f043 0204 	orr.w	r2, r3, #4
 8002da6:	687b      	ldr	r3, [r7, #4]
 8002da8:	641a      	str	r2, [r3, #64]	@ 0x40
 8002daa:	687b      	ldr	r3, [r7, #4]
 8002dac:	2200      	movs	r2, #0
 8002dae:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002db2:	2301      	movs	r3, #1
 8002db4:	e000      	b.n	8002db8 <I2C_IsAcknowledgeFailed+0x52>
 8002db6:	2300      	movs	r3, #0
 8002db8:	4618      	mov	r0, r3
 8002dba:	370c      	adds	r7, #12
 8002dbc:	46bd      	mov	sp, r7
 8002dbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002dc2:	4770      	bx	lr

08002dc4 <HAL_PWREx_EnableOverDrive>:
 8002dc4:	b580      	push	{r7, lr}
 8002dc6:	b082      	sub	sp, #8
 8002dc8:	af00      	add	r7, sp, #0
 8002dca:	2300      	movs	r3, #0
 8002dcc:	607b      	str	r3, [r7, #4]
 8002dce:	2300      	movs	r3, #0
 8002dd0:	603b      	str	r3, [r7, #0]
 8002dd2:	4b20      	ldr	r3, [pc, #128]	@ (8002e54 <HAL_PWREx_EnableOverDrive+0x90>)
 8002dd4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002dd6:	4a1f      	ldr	r2, [pc, #124]	@ (8002e54 <HAL_PWREx_EnableOverDrive+0x90>)
 8002dd8:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002ddc:	6413      	str	r3, [r2, #64]	@ 0x40
 8002dde:	4b1d      	ldr	r3, [pc, #116]	@ (8002e54 <HAL_PWREx_EnableOverDrive+0x90>)
 8002de0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002de2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002de6:	603b      	str	r3, [r7, #0]
 8002de8:	683b      	ldr	r3, [r7, #0]
 8002dea:	4b1b      	ldr	r3, [pc, #108]	@ (8002e58 <HAL_PWREx_EnableOverDrive+0x94>)
 8002dec:	2201      	movs	r2, #1
 8002dee:	601a      	str	r2, [r3, #0]
 8002df0:	f7fe fb34 	bl	800145c <HAL_GetTick>
 8002df4:	6078      	str	r0, [r7, #4]
 8002df6:	e009      	b.n	8002e0c <HAL_PWREx_EnableOverDrive+0x48>
 8002df8:	f7fe fb30 	bl	800145c <HAL_GetTick>
 8002dfc:	4602      	mov	r2, r0
 8002dfe:	687b      	ldr	r3, [r7, #4]
 8002e00:	1ad3      	subs	r3, r2, r3
 8002e02:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8002e06:	d901      	bls.n	8002e0c <HAL_PWREx_EnableOverDrive+0x48>
 8002e08:	2303      	movs	r3, #3
 8002e0a:	e01f      	b.n	8002e4c <HAL_PWREx_EnableOverDrive+0x88>
 8002e0c:	4b13      	ldr	r3, [pc, #76]	@ (8002e5c <HAL_PWREx_EnableOverDrive+0x98>)
 8002e0e:	685b      	ldr	r3, [r3, #4]
 8002e10:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002e14:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8002e18:	d1ee      	bne.n	8002df8 <HAL_PWREx_EnableOverDrive+0x34>
 8002e1a:	4b11      	ldr	r3, [pc, #68]	@ (8002e60 <HAL_PWREx_EnableOverDrive+0x9c>)
 8002e1c:	2201      	movs	r2, #1
 8002e1e:	601a      	str	r2, [r3, #0]
 8002e20:	f7fe fb1c 	bl	800145c <HAL_GetTick>
 8002e24:	6078      	str	r0, [r7, #4]
 8002e26:	e009      	b.n	8002e3c <HAL_PWREx_EnableOverDrive+0x78>
 8002e28:	f7fe fb18 	bl	800145c <HAL_GetTick>
 8002e2c:	4602      	mov	r2, r0
 8002e2e:	687b      	ldr	r3, [r7, #4]
 8002e30:	1ad3      	subs	r3, r2, r3
 8002e32:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8002e36:	d901      	bls.n	8002e3c <HAL_PWREx_EnableOverDrive+0x78>
 8002e38:	2303      	movs	r3, #3
 8002e3a:	e007      	b.n	8002e4c <HAL_PWREx_EnableOverDrive+0x88>
 8002e3c:	4b07      	ldr	r3, [pc, #28]	@ (8002e5c <HAL_PWREx_EnableOverDrive+0x98>)
 8002e3e:	685b      	ldr	r3, [r3, #4]
 8002e40:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002e44:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8002e48:	d1ee      	bne.n	8002e28 <HAL_PWREx_EnableOverDrive+0x64>
 8002e4a:	2300      	movs	r3, #0
 8002e4c:	4618      	mov	r0, r3
 8002e4e:	3708      	adds	r7, #8
 8002e50:	46bd      	mov	sp, r7
 8002e52:	bd80      	pop	{r7, pc}
 8002e54:	40023800 	.word	0x40023800
 8002e58:	420e0040 	.word	0x420e0040
 8002e5c:	40007000 	.word	0x40007000
 8002e60:	420e0044 	.word	0x420e0044

08002e64 <HAL_RCC_ClockConfig>:
 8002e64:	b580      	push	{r7, lr}
 8002e66:	b084      	sub	sp, #16
 8002e68:	af00      	add	r7, sp, #0
 8002e6a:	6078      	str	r0, [r7, #4]
 8002e6c:	6039      	str	r1, [r7, #0]
 8002e6e:	687b      	ldr	r3, [r7, #4]
 8002e70:	2b00      	cmp	r3, #0
 8002e72:	d101      	bne.n	8002e78 <HAL_RCC_ClockConfig+0x14>
 8002e74:	2301      	movs	r3, #1
 8002e76:	e0cc      	b.n	8003012 <HAL_RCC_ClockConfig+0x1ae>
 8002e78:	4b68      	ldr	r3, [pc, #416]	@ (800301c <HAL_RCC_ClockConfig+0x1b8>)
 8002e7a:	681b      	ldr	r3, [r3, #0]
 8002e7c:	f003 030f 	and.w	r3, r3, #15
 8002e80:	683a      	ldr	r2, [r7, #0]
 8002e82:	429a      	cmp	r2, r3
 8002e84:	d90c      	bls.n	8002ea0 <HAL_RCC_ClockConfig+0x3c>
 8002e86:	4b65      	ldr	r3, [pc, #404]	@ (800301c <HAL_RCC_ClockConfig+0x1b8>)
 8002e88:	683a      	ldr	r2, [r7, #0]
 8002e8a:	b2d2      	uxtb	r2, r2
 8002e8c:	701a      	strb	r2, [r3, #0]
 8002e8e:	4b63      	ldr	r3, [pc, #396]	@ (800301c <HAL_RCC_ClockConfig+0x1b8>)
 8002e90:	681b      	ldr	r3, [r3, #0]
 8002e92:	f003 030f 	and.w	r3, r3, #15
 8002e96:	683a      	ldr	r2, [r7, #0]
 8002e98:	429a      	cmp	r2, r3
 8002e9a:	d001      	beq.n	8002ea0 <HAL_RCC_ClockConfig+0x3c>
 8002e9c:	2301      	movs	r3, #1
 8002e9e:	e0b8      	b.n	8003012 <HAL_RCC_ClockConfig+0x1ae>
 8002ea0:	687b      	ldr	r3, [r7, #4]
 8002ea2:	681b      	ldr	r3, [r3, #0]
 8002ea4:	f003 0302 	and.w	r3, r3, #2
 8002ea8:	2b00      	cmp	r3, #0
 8002eaa:	d020      	beq.n	8002eee <HAL_RCC_ClockConfig+0x8a>
 8002eac:	687b      	ldr	r3, [r7, #4]
 8002eae:	681b      	ldr	r3, [r3, #0]
 8002eb0:	f003 0304 	and.w	r3, r3, #4
 8002eb4:	2b00      	cmp	r3, #0
 8002eb6:	d005      	beq.n	8002ec4 <HAL_RCC_ClockConfig+0x60>
 8002eb8:	4b59      	ldr	r3, [pc, #356]	@ (8003020 <HAL_RCC_ClockConfig+0x1bc>)
 8002eba:	689b      	ldr	r3, [r3, #8]
 8002ebc:	4a58      	ldr	r2, [pc, #352]	@ (8003020 <HAL_RCC_ClockConfig+0x1bc>)
 8002ebe:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 8002ec2:	6093      	str	r3, [r2, #8]
 8002ec4:	687b      	ldr	r3, [r7, #4]
 8002ec6:	681b      	ldr	r3, [r3, #0]
 8002ec8:	f003 0308 	and.w	r3, r3, #8
 8002ecc:	2b00      	cmp	r3, #0
 8002ece:	d005      	beq.n	8002edc <HAL_RCC_ClockConfig+0x78>
 8002ed0:	4b53      	ldr	r3, [pc, #332]	@ (8003020 <HAL_RCC_ClockConfig+0x1bc>)
 8002ed2:	689b      	ldr	r3, [r3, #8]
 8002ed4:	4a52      	ldr	r2, [pc, #328]	@ (8003020 <HAL_RCC_ClockConfig+0x1bc>)
 8002ed6:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 8002eda:	6093      	str	r3, [r2, #8]
 8002edc:	4b50      	ldr	r3, [pc, #320]	@ (8003020 <HAL_RCC_ClockConfig+0x1bc>)
 8002ede:	689b      	ldr	r3, [r3, #8]
 8002ee0:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8002ee4:	687b      	ldr	r3, [r7, #4]
 8002ee6:	689b      	ldr	r3, [r3, #8]
 8002ee8:	494d      	ldr	r1, [pc, #308]	@ (8003020 <HAL_RCC_ClockConfig+0x1bc>)
 8002eea:	4313      	orrs	r3, r2
 8002eec:	608b      	str	r3, [r1, #8]
 8002eee:	687b      	ldr	r3, [r7, #4]
 8002ef0:	681b      	ldr	r3, [r3, #0]
 8002ef2:	f003 0301 	and.w	r3, r3, #1
 8002ef6:	2b00      	cmp	r3, #0
 8002ef8:	d044      	beq.n	8002f84 <HAL_RCC_ClockConfig+0x120>
 8002efa:	687b      	ldr	r3, [r7, #4]
 8002efc:	685b      	ldr	r3, [r3, #4]
 8002efe:	2b01      	cmp	r3, #1
 8002f00:	d107      	bne.n	8002f12 <HAL_RCC_ClockConfig+0xae>
 8002f02:	4b47      	ldr	r3, [pc, #284]	@ (8003020 <HAL_RCC_ClockConfig+0x1bc>)
 8002f04:	681b      	ldr	r3, [r3, #0]
 8002f06:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002f0a:	2b00      	cmp	r3, #0
 8002f0c:	d119      	bne.n	8002f42 <HAL_RCC_ClockConfig+0xde>
 8002f0e:	2301      	movs	r3, #1
 8002f10:	e07f      	b.n	8003012 <HAL_RCC_ClockConfig+0x1ae>
 8002f12:	687b      	ldr	r3, [r7, #4]
 8002f14:	685b      	ldr	r3, [r3, #4]
 8002f16:	2b02      	cmp	r3, #2
 8002f18:	d003      	beq.n	8002f22 <HAL_RCC_ClockConfig+0xbe>
 8002f1a:	687b      	ldr	r3, [r7, #4]
 8002f1c:	685b      	ldr	r3, [r3, #4]
 8002f1e:	2b03      	cmp	r3, #3
 8002f20:	d107      	bne.n	8002f32 <HAL_RCC_ClockConfig+0xce>
 8002f22:	4b3f      	ldr	r3, [pc, #252]	@ (8003020 <HAL_RCC_ClockConfig+0x1bc>)
 8002f24:	681b      	ldr	r3, [r3, #0]
 8002f26:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002f2a:	2b00      	cmp	r3, #0
 8002f2c:	d109      	bne.n	8002f42 <HAL_RCC_ClockConfig+0xde>
 8002f2e:	2301      	movs	r3, #1
 8002f30:	e06f      	b.n	8003012 <HAL_RCC_ClockConfig+0x1ae>
 8002f32:	4b3b      	ldr	r3, [pc, #236]	@ (8003020 <HAL_RCC_ClockConfig+0x1bc>)
 8002f34:	681b      	ldr	r3, [r3, #0]
 8002f36:	f003 0302 	and.w	r3, r3, #2
 8002f3a:	2b00      	cmp	r3, #0
 8002f3c:	d101      	bne.n	8002f42 <HAL_RCC_ClockConfig+0xde>
 8002f3e:	2301      	movs	r3, #1
 8002f40:	e067      	b.n	8003012 <HAL_RCC_ClockConfig+0x1ae>
 8002f42:	4b37      	ldr	r3, [pc, #220]	@ (8003020 <HAL_RCC_ClockConfig+0x1bc>)
 8002f44:	689b      	ldr	r3, [r3, #8]
 8002f46:	f023 0203 	bic.w	r2, r3, #3
 8002f4a:	687b      	ldr	r3, [r7, #4]
 8002f4c:	685b      	ldr	r3, [r3, #4]
 8002f4e:	4934      	ldr	r1, [pc, #208]	@ (8003020 <HAL_RCC_ClockConfig+0x1bc>)
 8002f50:	4313      	orrs	r3, r2
 8002f52:	608b      	str	r3, [r1, #8]
 8002f54:	f7fe fa82 	bl	800145c <HAL_GetTick>
 8002f58:	60f8      	str	r0, [r7, #12]
 8002f5a:	e00a      	b.n	8002f72 <HAL_RCC_ClockConfig+0x10e>
 8002f5c:	f7fe fa7e 	bl	800145c <HAL_GetTick>
 8002f60:	4602      	mov	r2, r0
 8002f62:	68fb      	ldr	r3, [r7, #12]
 8002f64:	1ad3      	subs	r3, r2, r3
 8002f66:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002f6a:	4293      	cmp	r3, r2
 8002f6c:	d901      	bls.n	8002f72 <HAL_RCC_ClockConfig+0x10e>
 8002f6e:	2303      	movs	r3, #3
 8002f70:	e04f      	b.n	8003012 <HAL_RCC_ClockConfig+0x1ae>
 8002f72:	4b2b      	ldr	r3, [pc, #172]	@ (8003020 <HAL_RCC_ClockConfig+0x1bc>)
 8002f74:	689b      	ldr	r3, [r3, #8]
 8002f76:	f003 020c 	and.w	r2, r3, #12
 8002f7a:	687b      	ldr	r3, [r7, #4]
 8002f7c:	685b      	ldr	r3, [r3, #4]
 8002f7e:	009b      	lsls	r3, r3, #2
 8002f80:	429a      	cmp	r2, r3
 8002f82:	d1eb      	bne.n	8002f5c <HAL_RCC_ClockConfig+0xf8>
 8002f84:	4b25      	ldr	r3, [pc, #148]	@ (800301c <HAL_RCC_ClockConfig+0x1b8>)
 8002f86:	681b      	ldr	r3, [r3, #0]
 8002f88:	f003 030f 	and.w	r3, r3, #15
 8002f8c:	683a      	ldr	r2, [r7, #0]
 8002f8e:	429a      	cmp	r2, r3
 8002f90:	d20c      	bcs.n	8002fac <HAL_RCC_ClockConfig+0x148>
 8002f92:	4b22      	ldr	r3, [pc, #136]	@ (800301c <HAL_RCC_ClockConfig+0x1b8>)
 8002f94:	683a      	ldr	r2, [r7, #0]
 8002f96:	b2d2      	uxtb	r2, r2
 8002f98:	701a      	strb	r2, [r3, #0]
 8002f9a:	4b20      	ldr	r3, [pc, #128]	@ (800301c <HAL_RCC_ClockConfig+0x1b8>)
 8002f9c:	681b      	ldr	r3, [r3, #0]
 8002f9e:	f003 030f 	and.w	r3, r3, #15
 8002fa2:	683a      	ldr	r2, [r7, #0]
 8002fa4:	429a      	cmp	r2, r3
 8002fa6:	d001      	beq.n	8002fac <HAL_RCC_ClockConfig+0x148>
 8002fa8:	2301      	movs	r3, #1
 8002faa:	e032      	b.n	8003012 <HAL_RCC_ClockConfig+0x1ae>
 8002fac:	687b      	ldr	r3, [r7, #4]
 8002fae:	681b      	ldr	r3, [r3, #0]
 8002fb0:	f003 0304 	and.w	r3, r3, #4
 8002fb4:	2b00      	cmp	r3, #0
 8002fb6:	d008      	beq.n	8002fca <HAL_RCC_ClockConfig+0x166>
 8002fb8:	4b19      	ldr	r3, [pc, #100]	@ (8003020 <HAL_RCC_ClockConfig+0x1bc>)
 8002fba:	689b      	ldr	r3, [r3, #8]
 8002fbc:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8002fc0:	687b      	ldr	r3, [r7, #4]
 8002fc2:	68db      	ldr	r3, [r3, #12]
 8002fc4:	4916      	ldr	r1, [pc, #88]	@ (8003020 <HAL_RCC_ClockConfig+0x1bc>)
 8002fc6:	4313      	orrs	r3, r2
 8002fc8:	608b      	str	r3, [r1, #8]
 8002fca:	687b      	ldr	r3, [r7, #4]
 8002fcc:	681b      	ldr	r3, [r3, #0]
 8002fce:	f003 0308 	and.w	r3, r3, #8
 8002fd2:	2b00      	cmp	r3, #0
 8002fd4:	d009      	beq.n	8002fea <HAL_RCC_ClockConfig+0x186>
 8002fd6:	4b12      	ldr	r3, [pc, #72]	@ (8003020 <HAL_RCC_ClockConfig+0x1bc>)
 8002fd8:	689b      	ldr	r3, [r3, #8]
 8002fda:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8002fde:	687b      	ldr	r3, [r7, #4]
 8002fe0:	691b      	ldr	r3, [r3, #16]
 8002fe2:	00db      	lsls	r3, r3, #3
 8002fe4:	490e      	ldr	r1, [pc, #56]	@ (8003020 <HAL_RCC_ClockConfig+0x1bc>)
 8002fe6:	4313      	orrs	r3, r2
 8002fe8:	608b      	str	r3, [r1, #8]
 8002fea:	f000 f855 	bl	8003098 <HAL_RCC_GetSysClockFreq>
 8002fee:	4602      	mov	r2, r0
 8002ff0:	4b0b      	ldr	r3, [pc, #44]	@ (8003020 <HAL_RCC_ClockConfig+0x1bc>)
 8002ff2:	689b      	ldr	r3, [r3, #8]
 8002ff4:	091b      	lsrs	r3, r3, #4
 8002ff6:	f003 030f 	and.w	r3, r3, #15
 8002ffa:	490a      	ldr	r1, [pc, #40]	@ (8003024 <HAL_RCC_ClockConfig+0x1c0>)
 8002ffc:	5ccb      	ldrb	r3, [r1, r3]
 8002ffe:	fa22 f303 	lsr.w	r3, r2, r3
 8003002:	4a09      	ldr	r2, [pc, #36]	@ (8003028 <HAL_RCC_ClockConfig+0x1c4>)
 8003004:	6013      	str	r3, [r2, #0]
 8003006:	4b09      	ldr	r3, [pc, #36]	@ (800302c <HAL_RCC_ClockConfig+0x1c8>)
 8003008:	681b      	ldr	r3, [r3, #0]
 800300a:	4618      	mov	r0, r3
 800300c:	f7fe f9e2 	bl	80013d4 <HAL_InitTick>
 8003010:	2300      	movs	r3, #0
 8003012:	4618      	mov	r0, r3
 8003014:	3710      	adds	r7, #16
 8003016:	46bd      	mov	sp, r7
 8003018:	bd80      	pop	{r7, pc}
 800301a:	bf00      	nop
 800301c:	40023c00 	.word	0x40023c00
 8003020:	40023800 	.word	0x40023800
 8003024:	0800588c 	.word	0x0800588c
 8003028:	20000010 	.word	0x20000010
 800302c:	20000014 	.word	0x20000014

08003030 <HAL_RCC_GetHCLKFreq>:
 8003030:	b480      	push	{r7}
 8003032:	af00      	add	r7, sp, #0
 8003034:	4b03      	ldr	r3, [pc, #12]	@ (8003044 <HAL_RCC_GetHCLKFreq+0x14>)
 8003036:	681b      	ldr	r3, [r3, #0]
 8003038:	4618      	mov	r0, r3
 800303a:	46bd      	mov	sp, r7
 800303c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003040:	4770      	bx	lr
 8003042:	bf00      	nop
 8003044:	20000010 	.word	0x20000010

08003048 <HAL_RCC_GetPCLK1Freq>:
 8003048:	b580      	push	{r7, lr}
 800304a:	af00      	add	r7, sp, #0
 800304c:	f7ff fff0 	bl	8003030 <HAL_RCC_GetHCLKFreq>
 8003050:	4602      	mov	r2, r0
 8003052:	4b05      	ldr	r3, [pc, #20]	@ (8003068 <HAL_RCC_GetPCLK1Freq+0x20>)
 8003054:	689b      	ldr	r3, [r3, #8]
 8003056:	0a9b      	lsrs	r3, r3, #10
 8003058:	f003 0307 	and.w	r3, r3, #7
 800305c:	4903      	ldr	r1, [pc, #12]	@ (800306c <HAL_RCC_GetPCLK1Freq+0x24>)
 800305e:	5ccb      	ldrb	r3, [r1, r3]
 8003060:	fa22 f303 	lsr.w	r3, r2, r3
 8003064:	4618      	mov	r0, r3
 8003066:	bd80      	pop	{r7, pc}
 8003068:	40023800 	.word	0x40023800
 800306c:	0800589c 	.word	0x0800589c

08003070 <HAL_RCC_GetPCLK2Freq>:
 8003070:	b580      	push	{r7, lr}
 8003072:	af00      	add	r7, sp, #0
 8003074:	f7ff ffdc 	bl	8003030 <HAL_RCC_GetHCLKFreq>
 8003078:	4602      	mov	r2, r0
 800307a:	4b05      	ldr	r3, [pc, #20]	@ (8003090 <HAL_RCC_GetPCLK2Freq+0x20>)
 800307c:	689b      	ldr	r3, [r3, #8]
 800307e:	0b5b      	lsrs	r3, r3, #13
 8003080:	f003 0307 	and.w	r3, r3, #7
 8003084:	4903      	ldr	r1, [pc, #12]	@ (8003094 <HAL_RCC_GetPCLK2Freq+0x24>)
 8003086:	5ccb      	ldrb	r3, [r1, r3]
 8003088:	fa22 f303 	lsr.w	r3, r2, r3
 800308c:	4618      	mov	r0, r3
 800308e:	bd80      	pop	{r7, pc}
 8003090:	40023800 	.word	0x40023800
 8003094:	0800589c 	.word	0x0800589c

08003098 <HAL_RCC_GetSysClockFreq>:
 8003098:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800309c:	b0ae      	sub	sp, #184	@ 0xb8
 800309e:	af00      	add	r7, sp, #0
 80030a0:	2300      	movs	r3, #0
 80030a2:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 80030a6:	2300      	movs	r3, #0
 80030a8:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80030ac:	2300      	movs	r3, #0
 80030ae:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 80030b2:	2300      	movs	r3, #0
 80030b4:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 80030b8:	2300      	movs	r3, #0
 80030ba:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80030be:	4bcb      	ldr	r3, [pc, #812]	@ (80033ec <HAL_RCC_GetSysClockFreq+0x354>)
 80030c0:	689b      	ldr	r3, [r3, #8]
 80030c2:	f003 030c 	and.w	r3, r3, #12
 80030c6:	2b0c      	cmp	r3, #12
 80030c8:	f200 8206 	bhi.w	80034d8 <HAL_RCC_GetSysClockFreq+0x440>
 80030cc:	a201      	add	r2, pc, #4	@ (adr r2, 80030d4 <HAL_RCC_GetSysClockFreq+0x3c>)
 80030ce:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80030d2:	bf00      	nop
 80030d4:	08003109 	.word	0x08003109
 80030d8:	080034d9 	.word	0x080034d9
 80030dc:	080034d9 	.word	0x080034d9
 80030e0:	080034d9 	.word	0x080034d9
 80030e4:	08003111 	.word	0x08003111
 80030e8:	080034d9 	.word	0x080034d9
 80030ec:	080034d9 	.word	0x080034d9
 80030f0:	080034d9 	.word	0x080034d9
 80030f4:	08003119 	.word	0x08003119
 80030f8:	080034d9 	.word	0x080034d9
 80030fc:	080034d9 	.word	0x080034d9
 8003100:	080034d9 	.word	0x080034d9
 8003104:	08003309 	.word	0x08003309
 8003108:	4bb9      	ldr	r3, [pc, #740]	@ (80033f0 <HAL_RCC_GetSysClockFreq+0x358>)
 800310a:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 800310e:	e1e7      	b.n	80034e0 <HAL_RCC_GetSysClockFreq+0x448>
 8003110:	4bb8      	ldr	r3, [pc, #736]	@ (80033f4 <HAL_RCC_GetSysClockFreq+0x35c>)
 8003112:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8003116:	e1e3      	b.n	80034e0 <HAL_RCC_GetSysClockFreq+0x448>
 8003118:	4bb4      	ldr	r3, [pc, #720]	@ (80033ec <HAL_RCC_GetSysClockFreq+0x354>)
 800311a:	685b      	ldr	r3, [r3, #4]
 800311c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8003120:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8003124:	4bb1      	ldr	r3, [pc, #708]	@ (80033ec <HAL_RCC_GetSysClockFreq+0x354>)
 8003126:	685b      	ldr	r3, [r3, #4]
 8003128:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800312c:	2b00      	cmp	r3, #0
 800312e:	d071      	beq.n	8003214 <HAL_RCC_GetSysClockFreq+0x17c>
 8003130:	4bae      	ldr	r3, [pc, #696]	@ (80033ec <HAL_RCC_GetSysClockFreq+0x354>)
 8003132:	685b      	ldr	r3, [r3, #4]
 8003134:	099b      	lsrs	r3, r3, #6
 8003136:	2200      	movs	r2, #0
 8003138:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 800313c:	f8c7 209c 	str.w	r2, [r7, #156]	@ 0x9c
 8003140:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8003144:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003148:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800314c:	2300      	movs	r3, #0
 800314e:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8003152:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 8003156:	4622      	mov	r2, r4
 8003158:	462b      	mov	r3, r5
 800315a:	f04f 0000 	mov.w	r0, #0
 800315e:	f04f 0100 	mov.w	r1, #0
 8003162:	0159      	lsls	r1, r3, #5
 8003164:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8003168:	0150      	lsls	r0, r2, #5
 800316a:	4602      	mov	r2, r0
 800316c:	460b      	mov	r3, r1
 800316e:	4621      	mov	r1, r4
 8003170:	1a51      	subs	r1, r2, r1
 8003172:	6439      	str	r1, [r7, #64]	@ 0x40
 8003174:	4629      	mov	r1, r5
 8003176:	eb63 0301 	sbc.w	r3, r3, r1
 800317a:	647b      	str	r3, [r7, #68]	@ 0x44
 800317c:	f04f 0200 	mov.w	r2, #0
 8003180:	f04f 0300 	mov.w	r3, #0
 8003184:	e9d7 8910 	ldrd	r8, r9, [r7, #64]	@ 0x40
 8003188:	4649      	mov	r1, r9
 800318a:	018b      	lsls	r3, r1, #6
 800318c:	4641      	mov	r1, r8
 800318e:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8003192:	4641      	mov	r1, r8
 8003194:	018a      	lsls	r2, r1, #6
 8003196:	4641      	mov	r1, r8
 8003198:	1a51      	subs	r1, r2, r1
 800319a:	63b9      	str	r1, [r7, #56]	@ 0x38
 800319c:	4649      	mov	r1, r9
 800319e:	eb63 0301 	sbc.w	r3, r3, r1
 80031a2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80031a4:	f04f 0200 	mov.w	r2, #0
 80031a8:	f04f 0300 	mov.w	r3, #0
 80031ac:	e9d7 890e 	ldrd	r8, r9, [r7, #56]	@ 0x38
 80031b0:	4649      	mov	r1, r9
 80031b2:	00cb      	lsls	r3, r1, #3
 80031b4:	4641      	mov	r1, r8
 80031b6:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80031ba:	4641      	mov	r1, r8
 80031bc:	00ca      	lsls	r2, r1, #3
 80031be:	4610      	mov	r0, r2
 80031c0:	4619      	mov	r1, r3
 80031c2:	4603      	mov	r3, r0
 80031c4:	4622      	mov	r2, r4
 80031c6:	189b      	adds	r3, r3, r2
 80031c8:	633b      	str	r3, [r7, #48]	@ 0x30
 80031ca:	462b      	mov	r3, r5
 80031cc:	460a      	mov	r2, r1
 80031ce:	eb42 0303 	adc.w	r3, r2, r3
 80031d2:	637b      	str	r3, [r7, #52]	@ 0x34
 80031d4:	f04f 0200 	mov.w	r2, #0
 80031d8:	f04f 0300 	mov.w	r3, #0
 80031dc:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	@ 0x30
 80031e0:	4629      	mov	r1, r5
 80031e2:	024b      	lsls	r3, r1, #9
 80031e4:	4621      	mov	r1, r4
 80031e6:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 80031ea:	4621      	mov	r1, r4
 80031ec:	024a      	lsls	r2, r1, #9
 80031ee:	4610      	mov	r0, r2
 80031f0:	4619      	mov	r1, r3
 80031f2:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 80031f6:	2200      	movs	r2, #0
 80031f8:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80031fc:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8003200:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	@ 0x88
 8003204:	f7fd f864 	bl	80002d0 <__aeabi_uldivmod>
 8003208:	4602      	mov	r2, r0
 800320a:	460b      	mov	r3, r1
 800320c:	4613      	mov	r3, r2
 800320e:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8003212:	e067      	b.n	80032e4 <HAL_RCC_GetSysClockFreq+0x24c>
 8003214:	4b75      	ldr	r3, [pc, #468]	@ (80033ec <HAL_RCC_GetSysClockFreq+0x354>)
 8003216:	685b      	ldr	r3, [r3, #4]
 8003218:	099b      	lsrs	r3, r3, #6
 800321a:	2200      	movs	r2, #0
 800321c:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8003220:	f8c7 2084 	str.w	r2, [r7, #132]	@ 0x84
 8003224:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 8003228:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800322c:	67bb      	str	r3, [r7, #120]	@ 0x78
 800322e:	2300      	movs	r3, #0
 8003230:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8003232:	e9d7 451e 	ldrd	r4, r5, [r7, #120]	@ 0x78
 8003236:	4622      	mov	r2, r4
 8003238:	462b      	mov	r3, r5
 800323a:	f04f 0000 	mov.w	r0, #0
 800323e:	f04f 0100 	mov.w	r1, #0
 8003242:	0159      	lsls	r1, r3, #5
 8003244:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8003248:	0150      	lsls	r0, r2, #5
 800324a:	4602      	mov	r2, r0
 800324c:	460b      	mov	r3, r1
 800324e:	4621      	mov	r1, r4
 8003250:	1a51      	subs	r1, r2, r1
 8003252:	62b9      	str	r1, [r7, #40]	@ 0x28
 8003254:	4629      	mov	r1, r5
 8003256:	eb63 0301 	sbc.w	r3, r3, r1
 800325a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800325c:	f04f 0200 	mov.w	r2, #0
 8003260:	f04f 0300 	mov.w	r3, #0
 8003264:	e9d7 890a 	ldrd	r8, r9, [r7, #40]	@ 0x28
 8003268:	4649      	mov	r1, r9
 800326a:	018b      	lsls	r3, r1, #6
 800326c:	4641      	mov	r1, r8
 800326e:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8003272:	4641      	mov	r1, r8
 8003274:	018a      	lsls	r2, r1, #6
 8003276:	4641      	mov	r1, r8
 8003278:	ebb2 0a01 	subs.w	sl, r2, r1
 800327c:	4649      	mov	r1, r9
 800327e:	eb63 0b01 	sbc.w	fp, r3, r1
 8003282:	f04f 0200 	mov.w	r2, #0
 8003286:	f04f 0300 	mov.w	r3, #0
 800328a:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 800328e:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8003292:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8003296:	4692      	mov	sl, r2
 8003298:	469b      	mov	fp, r3
 800329a:	4623      	mov	r3, r4
 800329c:	eb1a 0303 	adds.w	r3, sl, r3
 80032a0:	623b      	str	r3, [r7, #32]
 80032a2:	462b      	mov	r3, r5
 80032a4:	eb4b 0303 	adc.w	r3, fp, r3
 80032a8:	627b      	str	r3, [r7, #36]	@ 0x24
 80032aa:	f04f 0200 	mov.w	r2, #0
 80032ae:	f04f 0300 	mov.w	r3, #0
 80032b2:	e9d7 4508 	ldrd	r4, r5, [r7, #32]
 80032b6:	4629      	mov	r1, r5
 80032b8:	028b      	lsls	r3, r1, #10
 80032ba:	4621      	mov	r1, r4
 80032bc:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 80032c0:	4621      	mov	r1, r4
 80032c2:	028a      	lsls	r2, r1, #10
 80032c4:	4610      	mov	r0, r2
 80032c6:	4619      	mov	r1, r3
 80032c8:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 80032cc:	2200      	movs	r2, #0
 80032ce:	673b      	str	r3, [r7, #112]	@ 0x70
 80032d0:	677a      	str	r2, [r7, #116]	@ 0x74
 80032d2:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	@ 0x70
 80032d6:	f7fc fffb 	bl	80002d0 <__aeabi_uldivmod>
 80032da:	4602      	mov	r2, r0
 80032dc:	460b      	mov	r3, r1
 80032de:	4613      	mov	r3, r2
 80032e0:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80032e4:	4b41      	ldr	r3, [pc, #260]	@ (80033ec <HAL_RCC_GetSysClockFreq+0x354>)
 80032e6:	685b      	ldr	r3, [r3, #4]
 80032e8:	0c1b      	lsrs	r3, r3, #16
 80032ea:	f003 0303 	and.w	r3, r3, #3
 80032ee:	3301      	adds	r3, #1
 80032f0:	005b      	lsls	r3, r3, #1
 80032f2:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 80032f6:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 80032fa:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 80032fe:	fbb2 f3f3 	udiv	r3, r2, r3
 8003302:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8003306:	e0eb      	b.n	80034e0 <HAL_RCC_GetSysClockFreq+0x448>
 8003308:	4b38      	ldr	r3, [pc, #224]	@ (80033ec <HAL_RCC_GetSysClockFreq+0x354>)
 800330a:	685b      	ldr	r3, [r3, #4]
 800330c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8003310:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8003314:	4b35      	ldr	r3, [pc, #212]	@ (80033ec <HAL_RCC_GetSysClockFreq+0x354>)
 8003316:	685b      	ldr	r3, [r3, #4]
 8003318:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800331c:	2b00      	cmp	r3, #0
 800331e:	d06b      	beq.n	80033f8 <HAL_RCC_GetSysClockFreq+0x360>
 8003320:	4b32      	ldr	r3, [pc, #200]	@ (80033ec <HAL_RCC_GetSysClockFreq+0x354>)
 8003322:	685b      	ldr	r3, [r3, #4]
 8003324:	099b      	lsrs	r3, r3, #6
 8003326:	2200      	movs	r2, #0
 8003328:	66bb      	str	r3, [r7, #104]	@ 0x68
 800332a:	66fa      	str	r2, [r7, #108]	@ 0x6c
 800332c:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 800332e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003332:	663b      	str	r3, [r7, #96]	@ 0x60
 8003334:	2300      	movs	r3, #0
 8003336:	667b      	str	r3, [r7, #100]	@ 0x64
 8003338:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	@ 0x60
 800333c:	4622      	mov	r2, r4
 800333e:	462b      	mov	r3, r5
 8003340:	f04f 0000 	mov.w	r0, #0
 8003344:	f04f 0100 	mov.w	r1, #0
 8003348:	0159      	lsls	r1, r3, #5
 800334a:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800334e:	0150      	lsls	r0, r2, #5
 8003350:	4602      	mov	r2, r0
 8003352:	460b      	mov	r3, r1
 8003354:	4621      	mov	r1, r4
 8003356:	1a51      	subs	r1, r2, r1
 8003358:	61b9      	str	r1, [r7, #24]
 800335a:	4629      	mov	r1, r5
 800335c:	eb63 0301 	sbc.w	r3, r3, r1
 8003360:	61fb      	str	r3, [r7, #28]
 8003362:	f04f 0200 	mov.w	r2, #0
 8003366:	f04f 0300 	mov.w	r3, #0
 800336a:	e9d7 ab06 	ldrd	sl, fp, [r7, #24]
 800336e:	4659      	mov	r1, fp
 8003370:	018b      	lsls	r3, r1, #6
 8003372:	4651      	mov	r1, sl
 8003374:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8003378:	4651      	mov	r1, sl
 800337a:	018a      	lsls	r2, r1, #6
 800337c:	4651      	mov	r1, sl
 800337e:	ebb2 0801 	subs.w	r8, r2, r1
 8003382:	4659      	mov	r1, fp
 8003384:	eb63 0901 	sbc.w	r9, r3, r1
 8003388:	f04f 0200 	mov.w	r2, #0
 800338c:	f04f 0300 	mov.w	r3, #0
 8003390:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8003394:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8003398:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 800339c:	4690      	mov	r8, r2
 800339e:	4699      	mov	r9, r3
 80033a0:	4623      	mov	r3, r4
 80033a2:	eb18 0303 	adds.w	r3, r8, r3
 80033a6:	613b      	str	r3, [r7, #16]
 80033a8:	462b      	mov	r3, r5
 80033aa:	eb49 0303 	adc.w	r3, r9, r3
 80033ae:	617b      	str	r3, [r7, #20]
 80033b0:	f04f 0200 	mov.w	r2, #0
 80033b4:	f04f 0300 	mov.w	r3, #0
 80033b8:	e9d7 4504 	ldrd	r4, r5, [r7, #16]
 80033bc:	4629      	mov	r1, r5
 80033be:	024b      	lsls	r3, r1, #9
 80033c0:	4621      	mov	r1, r4
 80033c2:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 80033c6:	4621      	mov	r1, r4
 80033c8:	024a      	lsls	r2, r1, #9
 80033ca:	4610      	mov	r0, r2
 80033cc:	4619      	mov	r1, r3
 80033ce:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 80033d2:	2200      	movs	r2, #0
 80033d4:	65bb      	str	r3, [r7, #88]	@ 0x58
 80033d6:	65fa      	str	r2, [r7, #92]	@ 0x5c
 80033d8:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 80033dc:	f7fc ff78 	bl	80002d0 <__aeabi_uldivmod>
 80033e0:	4602      	mov	r2, r0
 80033e2:	460b      	mov	r3, r1
 80033e4:	4613      	mov	r3, r2
 80033e6:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80033ea:	e065      	b.n	80034b8 <HAL_RCC_GetSysClockFreq+0x420>
 80033ec:	40023800 	.word	0x40023800
 80033f0:	00f42400 	.word	0x00f42400
 80033f4:	007a1200 	.word	0x007a1200
 80033f8:	4b3d      	ldr	r3, [pc, #244]	@ (80034f0 <HAL_RCC_GetSysClockFreq+0x458>)
 80033fa:	685b      	ldr	r3, [r3, #4]
 80033fc:	099b      	lsrs	r3, r3, #6
 80033fe:	2200      	movs	r2, #0
 8003400:	4618      	mov	r0, r3
 8003402:	4611      	mov	r1, r2
 8003404:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8003408:	653b      	str	r3, [r7, #80]	@ 0x50
 800340a:	2300      	movs	r3, #0
 800340c:	657b      	str	r3, [r7, #84]	@ 0x54
 800340e:	e9d7 8914 	ldrd	r8, r9, [r7, #80]	@ 0x50
 8003412:	4642      	mov	r2, r8
 8003414:	464b      	mov	r3, r9
 8003416:	f04f 0000 	mov.w	r0, #0
 800341a:	f04f 0100 	mov.w	r1, #0
 800341e:	0159      	lsls	r1, r3, #5
 8003420:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8003424:	0150      	lsls	r0, r2, #5
 8003426:	4602      	mov	r2, r0
 8003428:	460b      	mov	r3, r1
 800342a:	4641      	mov	r1, r8
 800342c:	1a51      	subs	r1, r2, r1
 800342e:	60b9      	str	r1, [r7, #8]
 8003430:	4649      	mov	r1, r9
 8003432:	eb63 0301 	sbc.w	r3, r3, r1
 8003436:	60fb      	str	r3, [r7, #12]
 8003438:	f04f 0200 	mov.w	r2, #0
 800343c:	f04f 0300 	mov.w	r3, #0
 8003440:	e9d7 ab02 	ldrd	sl, fp, [r7, #8]
 8003444:	4659      	mov	r1, fp
 8003446:	018b      	lsls	r3, r1, #6
 8003448:	4651      	mov	r1, sl
 800344a:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 800344e:	4651      	mov	r1, sl
 8003450:	018a      	lsls	r2, r1, #6
 8003452:	4651      	mov	r1, sl
 8003454:	1a54      	subs	r4, r2, r1
 8003456:	4659      	mov	r1, fp
 8003458:	eb63 0501 	sbc.w	r5, r3, r1
 800345c:	f04f 0200 	mov.w	r2, #0
 8003460:	f04f 0300 	mov.w	r3, #0
 8003464:	00eb      	lsls	r3, r5, #3
 8003466:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800346a:	00e2      	lsls	r2, r4, #3
 800346c:	4614      	mov	r4, r2
 800346e:	461d      	mov	r5, r3
 8003470:	4643      	mov	r3, r8
 8003472:	18e3      	adds	r3, r4, r3
 8003474:	603b      	str	r3, [r7, #0]
 8003476:	464b      	mov	r3, r9
 8003478:	eb45 0303 	adc.w	r3, r5, r3
 800347c:	607b      	str	r3, [r7, #4]
 800347e:	f04f 0200 	mov.w	r2, #0
 8003482:	f04f 0300 	mov.w	r3, #0
 8003486:	e9d7 4500 	ldrd	r4, r5, [r7]
 800348a:	4629      	mov	r1, r5
 800348c:	028b      	lsls	r3, r1, #10
 800348e:	4621      	mov	r1, r4
 8003490:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8003494:	4621      	mov	r1, r4
 8003496:	028a      	lsls	r2, r1, #10
 8003498:	4610      	mov	r0, r2
 800349a:	4619      	mov	r1, r3
 800349c:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 80034a0:	2200      	movs	r2, #0
 80034a2:	64bb      	str	r3, [r7, #72]	@ 0x48
 80034a4:	64fa      	str	r2, [r7, #76]	@ 0x4c
 80034a6:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 80034aa:	f7fc ff11 	bl	80002d0 <__aeabi_uldivmod>
 80034ae:	4602      	mov	r2, r0
 80034b0:	460b      	mov	r3, r1
 80034b2:	4613      	mov	r3, r2
 80034b4:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80034b8:	4b0d      	ldr	r3, [pc, #52]	@ (80034f0 <HAL_RCC_GetSysClockFreq+0x458>)
 80034ba:	685b      	ldr	r3, [r3, #4]
 80034bc:	0f1b      	lsrs	r3, r3, #28
 80034be:	f003 0307 	and.w	r3, r3, #7
 80034c2:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 80034c6:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 80034ca:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 80034ce:	fbb2 f3f3 	udiv	r3, r2, r3
 80034d2:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80034d6:	e003      	b.n	80034e0 <HAL_RCC_GetSysClockFreq+0x448>
 80034d8:	4b06      	ldr	r3, [pc, #24]	@ (80034f4 <HAL_RCC_GetSysClockFreq+0x45c>)
 80034da:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80034de:	bf00      	nop
 80034e0:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 80034e4:	4618      	mov	r0, r3
 80034e6:	37b8      	adds	r7, #184	@ 0xb8
 80034e8:	46bd      	mov	sp, r7
 80034ea:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80034ee:	bf00      	nop
 80034f0:	40023800 	.word	0x40023800
 80034f4:	00f42400 	.word	0x00f42400

080034f8 <HAL_RCC_OscConfig>:
 80034f8:	b580      	push	{r7, lr}
 80034fa:	b086      	sub	sp, #24
 80034fc:	af00      	add	r7, sp, #0
 80034fe:	6078      	str	r0, [r7, #4]
 8003500:	687b      	ldr	r3, [r7, #4]
 8003502:	2b00      	cmp	r3, #0
 8003504:	d101      	bne.n	800350a <HAL_RCC_OscConfig+0x12>
 8003506:	2301      	movs	r3, #1
 8003508:	e28d      	b.n	8003a26 <HAL_RCC_OscConfig+0x52e>
 800350a:	687b      	ldr	r3, [r7, #4]
 800350c:	681b      	ldr	r3, [r3, #0]
 800350e:	f003 0301 	and.w	r3, r3, #1
 8003512:	2b00      	cmp	r3, #0
 8003514:	f000 8083 	beq.w	800361e <HAL_RCC_OscConfig+0x126>
 8003518:	4b94      	ldr	r3, [pc, #592]	@ (800376c <HAL_RCC_OscConfig+0x274>)
 800351a:	689b      	ldr	r3, [r3, #8]
 800351c:	f003 030c 	and.w	r3, r3, #12
 8003520:	2b04      	cmp	r3, #4
 8003522:	d019      	beq.n	8003558 <HAL_RCC_OscConfig+0x60>
 8003524:	4b91      	ldr	r3, [pc, #580]	@ (800376c <HAL_RCC_OscConfig+0x274>)
 8003526:	689b      	ldr	r3, [r3, #8]
 8003528:	f003 030c 	and.w	r3, r3, #12
 800352c:	2b08      	cmp	r3, #8
 800352e:	d106      	bne.n	800353e <HAL_RCC_OscConfig+0x46>
 8003530:	4b8e      	ldr	r3, [pc, #568]	@ (800376c <HAL_RCC_OscConfig+0x274>)
 8003532:	685b      	ldr	r3, [r3, #4]
 8003534:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003538:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800353c:	d00c      	beq.n	8003558 <HAL_RCC_OscConfig+0x60>
 800353e:	4b8b      	ldr	r3, [pc, #556]	@ (800376c <HAL_RCC_OscConfig+0x274>)
 8003540:	689b      	ldr	r3, [r3, #8]
 8003542:	f003 030c 	and.w	r3, r3, #12
 8003546:	2b0c      	cmp	r3, #12
 8003548:	d112      	bne.n	8003570 <HAL_RCC_OscConfig+0x78>
 800354a:	4b88      	ldr	r3, [pc, #544]	@ (800376c <HAL_RCC_OscConfig+0x274>)
 800354c:	685b      	ldr	r3, [r3, #4]
 800354e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003552:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8003556:	d10b      	bne.n	8003570 <HAL_RCC_OscConfig+0x78>
 8003558:	4b84      	ldr	r3, [pc, #528]	@ (800376c <HAL_RCC_OscConfig+0x274>)
 800355a:	681b      	ldr	r3, [r3, #0]
 800355c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003560:	2b00      	cmp	r3, #0
 8003562:	d05b      	beq.n	800361c <HAL_RCC_OscConfig+0x124>
 8003564:	687b      	ldr	r3, [r7, #4]
 8003566:	685b      	ldr	r3, [r3, #4]
 8003568:	2b00      	cmp	r3, #0
 800356a:	d157      	bne.n	800361c <HAL_RCC_OscConfig+0x124>
 800356c:	2301      	movs	r3, #1
 800356e:	e25a      	b.n	8003a26 <HAL_RCC_OscConfig+0x52e>
 8003570:	687b      	ldr	r3, [r7, #4]
 8003572:	685b      	ldr	r3, [r3, #4]
 8003574:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8003578:	d106      	bne.n	8003588 <HAL_RCC_OscConfig+0x90>
 800357a:	4b7c      	ldr	r3, [pc, #496]	@ (800376c <HAL_RCC_OscConfig+0x274>)
 800357c:	681b      	ldr	r3, [r3, #0]
 800357e:	4a7b      	ldr	r2, [pc, #492]	@ (800376c <HAL_RCC_OscConfig+0x274>)
 8003580:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003584:	6013      	str	r3, [r2, #0]
 8003586:	e01d      	b.n	80035c4 <HAL_RCC_OscConfig+0xcc>
 8003588:	687b      	ldr	r3, [r7, #4]
 800358a:	685b      	ldr	r3, [r3, #4]
 800358c:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8003590:	d10c      	bne.n	80035ac <HAL_RCC_OscConfig+0xb4>
 8003592:	4b76      	ldr	r3, [pc, #472]	@ (800376c <HAL_RCC_OscConfig+0x274>)
 8003594:	681b      	ldr	r3, [r3, #0]
 8003596:	4a75      	ldr	r2, [pc, #468]	@ (800376c <HAL_RCC_OscConfig+0x274>)
 8003598:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800359c:	6013      	str	r3, [r2, #0]
 800359e:	4b73      	ldr	r3, [pc, #460]	@ (800376c <HAL_RCC_OscConfig+0x274>)
 80035a0:	681b      	ldr	r3, [r3, #0]
 80035a2:	4a72      	ldr	r2, [pc, #456]	@ (800376c <HAL_RCC_OscConfig+0x274>)
 80035a4:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80035a8:	6013      	str	r3, [r2, #0]
 80035aa:	e00b      	b.n	80035c4 <HAL_RCC_OscConfig+0xcc>
 80035ac:	4b6f      	ldr	r3, [pc, #444]	@ (800376c <HAL_RCC_OscConfig+0x274>)
 80035ae:	681b      	ldr	r3, [r3, #0]
 80035b0:	4a6e      	ldr	r2, [pc, #440]	@ (800376c <HAL_RCC_OscConfig+0x274>)
 80035b2:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80035b6:	6013      	str	r3, [r2, #0]
 80035b8:	4b6c      	ldr	r3, [pc, #432]	@ (800376c <HAL_RCC_OscConfig+0x274>)
 80035ba:	681b      	ldr	r3, [r3, #0]
 80035bc:	4a6b      	ldr	r2, [pc, #428]	@ (800376c <HAL_RCC_OscConfig+0x274>)
 80035be:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80035c2:	6013      	str	r3, [r2, #0]
 80035c4:	687b      	ldr	r3, [r7, #4]
 80035c6:	685b      	ldr	r3, [r3, #4]
 80035c8:	2b00      	cmp	r3, #0
 80035ca:	d013      	beq.n	80035f4 <HAL_RCC_OscConfig+0xfc>
 80035cc:	f7fd ff46 	bl	800145c <HAL_GetTick>
 80035d0:	6138      	str	r0, [r7, #16]
 80035d2:	e008      	b.n	80035e6 <HAL_RCC_OscConfig+0xee>
 80035d4:	f7fd ff42 	bl	800145c <HAL_GetTick>
 80035d8:	4602      	mov	r2, r0
 80035da:	693b      	ldr	r3, [r7, #16]
 80035dc:	1ad3      	subs	r3, r2, r3
 80035de:	2b64      	cmp	r3, #100	@ 0x64
 80035e0:	d901      	bls.n	80035e6 <HAL_RCC_OscConfig+0xee>
 80035e2:	2303      	movs	r3, #3
 80035e4:	e21f      	b.n	8003a26 <HAL_RCC_OscConfig+0x52e>
 80035e6:	4b61      	ldr	r3, [pc, #388]	@ (800376c <HAL_RCC_OscConfig+0x274>)
 80035e8:	681b      	ldr	r3, [r3, #0]
 80035ea:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80035ee:	2b00      	cmp	r3, #0
 80035f0:	d0f0      	beq.n	80035d4 <HAL_RCC_OscConfig+0xdc>
 80035f2:	e014      	b.n	800361e <HAL_RCC_OscConfig+0x126>
 80035f4:	f7fd ff32 	bl	800145c <HAL_GetTick>
 80035f8:	6138      	str	r0, [r7, #16]
 80035fa:	e008      	b.n	800360e <HAL_RCC_OscConfig+0x116>
 80035fc:	f7fd ff2e 	bl	800145c <HAL_GetTick>
 8003600:	4602      	mov	r2, r0
 8003602:	693b      	ldr	r3, [r7, #16]
 8003604:	1ad3      	subs	r3, r2, r3
 8003606:	2b64      	cmp	r3, #100	@ 0x64
 8003608:	d901      	bls.n	800360e <HAL_RCC_OscConfig+0x116>
 800360a:	2303      	movs	r3, #3
 800360c:	e20b      	b.n	8003a26 <HAL_RCC_OscConfig+0x52e>
 800360e:	4b57      	ldr	r3, [pc, #348]	@ (800376c <HAL_RCC_OscConfig+0x274>)
 8003610:	681b      	ldr	r3, [r3, #0]
 8003612:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003616:	2b00      	cmp	r3, #0
 8003618:	d1f0      	bne.n	80035fc <HAL_RCC_OscConfig+0x104>
 800361a:	e000      	b.n	800361e <HAL_RCC_OscConfig+0x126>
 800361c:	bf00      	nop
 800361e:	687b      	ldr	r3, [r7, #4]
 8003620:	681b      	ldr	r3, [r3, #0]
 8003622:	f003 0302 	and.w	r3, r3, #2
 8003626:	2b00      	cmp	r3, #0
 8003628:	d06f      	beq.n	800370a <HAL_RCC_OscConfig+0x212>
 800362a:	4b50      	ldr	r3, [pc, #320]	@ (800376c <HAL_RCC_OscConfig+0x274>)
 800362c:	689b      	ldr	r3, [r3, #8]
 800362e:	f003 030c 	and.w	r3, r3, #12
 8003632:	2b00      	cmp	r3, #0
 8003634:	d017      	beq.n	8003666 <HAL_RCC_OscConfig+0x16e>
 8003636:	4b4d      	ldr	r3, [pc, #308]	@ (800376c <HAL_RCC_OscConfig+0x274>)
 8003638:	689b      	ldr	r3, [r3, #8]
 800363a:	f003 030c 	and.w	r3, r3, #12
 800363e:	2b08      	cmp	r3, #8
 8003640:	d105      	bne.n	800364e <HAL_RCC_OscConfig+0x156>
 8003642:	4b4a      	ldr	r3, [pc, #296]	@ (800376c <HAL_RCC_OscConfig+0x274>)
 8003644:	685b      	ldr	r3, [r3, #4]
 8003646:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800364a:	2b00      	cmp	r3, #0
 800364c:	d00b      	beq.n	8003666 <HAL_RCC_OscConfig+0x16e>
 800364e:	4b47      	ldr	r3, [pc, #284]	@ (800376c <HAL_RCC_OscConfig+0x274>)
 8003650:	689b      	ldr	r3, [r3, #8]
 8003652:	f003 030c 	and.w	r3, r3, #12
 8003656:	2b0c      	cmp	r3, #12
 8003658:	d11c      	bne.n	8003694 <HAL_RCC_OscConfig+0x19c>
 800365a:	4b44      	ldr	r3, [pc, #272]	@ (800376c <HAL_RCC_OscConfig+0x274>)
 800365c:	685b      	ldr	r3, [r3, #4]
 800365e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003662:	2b00      	cmp	r3, #0
 8003664:	d116      	bne.n	8003694 <HAL_RCC_OscConfig+0x19c>
 8003666:	4b41      	ldr	r3, [pc, #260]	@ (800376c <HAL_RCC_OscConfig+0x274>)
 8003668:	681b      	ldr	r3, [r3, #0]
 800366a:	f003 0302 	and.w	r3, r3, #2
 800366e:	2b00      	cmp	r3, #0
 8003670:	d005      	beq.n	800367e <HAL_RCC_OscConfig+0x186>
 8003672:	687b      	ldr	r3, [r7, #4]
 8003674:	68db      	ldr	r3, [r3, #12]
 8003676:	2b01      	cmp	r3, #1
 8003678:	d001      	beq.n	800367e <HAL_RCC_OscConfig+0x186>
 800367a:	2301      	movs	r3, #1
 800367c:	e1d3      	b.n	8003a26 <HAL_RCC_OscConfig+0x52e>
 800367e:	4b3b      	ldr	r3, [pc, #236]	@ (800376c <HAL_RCC_OscConfig+0x274>)
 8003680:	681b      	ldr	r3, [r3, #0]
 8003682:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8003686:	687b      	ldr	r3, [r7, #4]
 8003688:	691b      	ldr	r3, [r3, #16]
 800368a:	00db      	lsls	r3, r3, #3
 800368c:	4937      	ldr	r1, [pc, #220]	@ (800376c <HAL_RCC_OscConfig+0x274>)
 800368e:	4313      	orrs	r3, r2
 8003690:	600b      	str	r3, [r1, #0]
 8003692:	e03a      	b.n	800370a <HAL_RCC_OscConfig+0x212>
 8003694:	687b      	ldr	r3, [r7, #4]
 8003696:	68db      	ldr	r3, [r3, #12]
 8003698:	2b00      	cmp	r3, #0
 800369a:	d020      	beq.n	80036de <HAL_RCC_OscConfig+0x1e6>
 800369c:	4b34      	ldr	r3, [pc, #208]	@ (8003770 <HAL_RCC_OscConfig+0x278>)
 800369e:	2201      	movs	r2, #1
 80036a0:	601a      	str	r2, [r3, #0]
 80036a2:	f7fd fedb 	bl	800145c <HAL_GetTick>
 80036a6:	6138      	str	r0, [r7, #16]
 80036a8:	e008      	b.n	80036bc <HAL_RCC_OscConfig+0x1c4>
 80036aa:	f7fd fed7 	bl	800145c <HAL_GetTick>
 80036ae:	4602      	mov	r2, r0
 80036b0:	693b      	ldr	r3, [r7, #16]
 80036b2:	1ad3      	subs	r3, r2, r3
 80036b4:	2b02      	cmp	r3, #2
 80036b6:	d901      	bls.n	80036bc <HAL_RCC_OscConfig+0x1c4>
 80036b8:	2303      	movs	r3, #3
 80036ba:	e1b4      	b.n	8003a26 <HAL_RCC_OscConfig+0x52e>
 80036bc:	4b2b      	ldr	r3, [pc, #172]	@ (800376c <HAL_RCC_OscConfig+0x274>)
 80036be:	681b      	ldr	r3, [r3, #0]
 80036c0:	f003 0302 	and.w	r3, r3, #2
 80036c4:	2b00      	cmp	r3, #0
 80036c6:	d0f0      	beq.n	80036aa <HAL_RCC_OscConfig+0x1b2>
 80036c8:	4b28      	ldr	r3, [pc, #160]	@ (800376c <HAL_RCC_OscConfig+0x274>)
 80036ca:	681b      	ldr	r3, [r3, #0]
 80036cc:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80036d0:	687b      	ldr	r3, [r7, #4]
 80036d2:	691b      	ldr	r3, [r3, #16]
 80036d4:	00db      	lsls	r3, r3, #3
 80036d6:	4925      	ldr	r1, [pc, #148]	@ (800376c <HAL_RCC_OscConfig+0x274>)
 80036d8:	4313      	orrs	r3, r2
 80036da:	600b      	str	r3, [r1, #0]
 80036dc:	e015      	b.n	800370a <HAL_RCC_OscConfig+0x212>
 80036de:	4b24      	ldr	r3, [pc, #144]	@ (8003770 <HAL_RCC_OscConfig+0x278>)
 80036e0:	2200      	movs	r2, #0
 80036e2:	601a      	str	r2, [r3, #0]
 80036e4:	f7fd feba 	bl	800145c <HAL_GetTick>
 80036e8:	6138      	str	r0, [r7, #16]
 80036ea:	e008      	b.n	80036fe <HAL_RCC_OscConfig+0x206>
 80036ec:	f7fd feb6 	bl	800145c <HAL_GetTick>
 80036f0:	4602      	mov	r2, r0
 80036f2:	693b      	ldr	r3, [r7, #16]
 80036f4:	1ad3      	subs	r3, r2, r3
 80036f6:	2b02      	cmp	r3, #2
 80036f8:	d901      	bls.n	80036fe <HAL_RCC_OscConfig+0x206>
 80036fa:	2303      	movs	r3, #3
 80036fc:	e193      	b.n	8003a26 <HAL_RCC_OscConfig+0x52e>
 80036fe:	4b1b      	ldr	r3, [pc, #108]	@ (800376c <HAL_RCC_OscConfig+0x274>)
 8003700:	681b      	ldr	r3, [r3, #0]
 8003702:	f003 0302 	and.w	r3, r3, #2
 8003706:	2b00      	cmp	r3, #0
 8003708:	d1f0      	bne.n	80036ec <HAL_RCC_OscConfig+0x1f4>
 800370a:	687b      	ldr	r3, [r7, #4]
 800370c:	681b      	ldr	r3, [r3, #0]
 800370e:	f003 0308 	and.w	r3, r3, #8
 8003712:	2b00      	cmp	r3, #0
 8003714:	d036      	beq.n	8003784 <HAL_RCC_OscConfig+0x28c>
 8003716:	687b      	ldr	r3, [r7, #4]
 8003718:	695b      	ldr	r3, [r3, #20]
 800371a:	2b00      	cmp	r3, #0
 800371c:	d016      	beq.n	800374c <HAL_RCC_OscConfig+0x254>
 800371e:	4b15      	ldr	r3, [pc, #84]	@ (8003774 <HAL_RCC_OscConfig+0x27c>)
 8003720:	2201      	movs	r2, #1
 8003722:	601a      	str	r2, [r3, #0]
 8003724:	f7fd fe9a 	bl	800145c <HAL_GetTick>
 8003728:	6138      	str	r0, [r7, #16]
 800372a:	e008      	b.n	800373e <HAL_RCC_OscConfig+0x246>
 800372c:	f7fd fe96 	bl	800145c <HAL_GetTick>
 8003730:	4602      	mov	r2, r0
 8003732:	693b      	ldr	r3, [r7, #16]
 8003734:	1ad3      	subs	r3, r2, r3
 8003736:	2b02      	cmp	r3, #2
 8003738:	d901      	bls.n	800373e <HAL_RCC_OscConfig+0x246>
 800373a:	2303      	movs	r3, #3
 800373c:	e173      	b.n	8003a26 <HAL_RCC_OscConfig+0x52e>
 800373e:	4b0b      	ldr	r3, [pc, #44]	@ (800376c <HAL_RCC_OscConfig+0x274>)
 8003740:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8003742:	f003 0302 	and.w	r3, r3, #2
 8003746:	2b00      	cmp	r3, #0
 8003748:	d0f0      	beq.n	800372c <HAL_RCC_OscConfig+0x234>
 800374a:	e01b      	b.n	8003784 <HAL_RCC_OscConfig+0x28c>
 800374c:	4b09      	ldr	r3, [pc, #36]	@ (8003774 <HAL_RCC_OscConfig+0x27c>)
 800374e:	2200      	movs	r2, #0
 8003750:	601a      	str	r2, [r3, #0]
 8003752:	f7fd fe83 	bl	800145c <HAL_GetTick>
 8003756:	6138      	str	r0, [r7, #16]
 8003758:	e00e      	b.n	8003778 <HAL_RCC_OscConfig+0x280>
 800375a:	f7fd fe7f 	bl	800145c <HAL_GetTick>
 800375e:	4602      	mov	r2, r0
 8003760:	693b      	ldr	r3, [r7, #16]
 8003762:	1ad3      	subs	r3, r2, r3
 8003764:	2b02      	cmp	r3, #2
 8003766:	d907      	bls.n	8003778 <HAL_RCC_OscConfig+0x280>
 8003768:	2303      	movs	r3, #3
 800376a:	e15c      	b.n	8003a26 <HAL_RCC_OscConfig+0x52e>
 800376c:	40023800 	.word	0x40023800
 8003770:	42470000 	.word	0x42470000
 8003774:	42470e80 	.word	0x42470e80
 8003778:	4b8a      	ldr	r3, [pc, #552]	@ (80039a4 <HAL_RCC_OscConfig+0x4ac>)
 800377a:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800377c:	f003 0302 	and.w	r3, r3, #2
 8003780:	2b00      	cmp	r3, #0
 8003782:	d1ea      	bne.n	800375a <HAL_RCC_OscConfig+0x262>
 8003784:	687b      	ldr	r3, [r7, #4]
 8003786:	681b      	ldr	r3, [r3, #0]
 8003788:	f003 0304 	and.w	r3, r3, #4
 800378c:	2b00      	cmp	r3, #0
 800378e:	f000 8097 	beq.w	80038c0 <HAL_RCC_OscConfig+0x3c8>
 8003792:	2300      	movs	r3, #0
 8003794:	75fb      	strb	r3, [r7, #23]
 8003796:	4b83      	ldr	r3, [pc, #524]	@ (80039a4 <HAL_RCC_OscConfig+0x4ac>)
 8003798:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800379a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800379e:	2b00      	cmp	r3, #0
 80037a0:	d10f      	bne.n	80037c2 <HAL_RCC_OscConfig+0x2ca>
 80037a2:	2300      	movs	r3, #0
 80037a4:	60bb      	str	r3, [r7, #8]
 80037a6:	4b7f      	ldr	r3, [pc, #508]	@ (80039a4 <HAL_RCC_OscConfig+0x4ac>)
 80037a8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80037aa:	4a7e      	ldr	r2, [pc, #504]	@ (80039a4 <HAL_RCC_OscConfig+0x4ac>)
 80037ac:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80037b0:	6413      	str	r3, [r2, #64]	@ 0x40
 80037b2:	4b7c      	ldr	r3, [pc, #496]	@ (80039a4 <HAL_RCC_OscConfig+0x4ac>)
 80037b4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80037b6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80037ba:	60bb      	str	r3, [r7, #8]
 80037bc:	68bb      	ldr	r3, [r7, #8]
 80037be:	2301      	movs	r3, #1
 80037c0:	75fb      	strb	r3, [r7, #23]
 80037c2:	4b79      	ldr	r3, [pc, #484]	@ (80039a8 <HAL_RCC_OscConfig+0x4b0>)
 80037c4:	681b      	ldr	r3, [r3, #0]
 80037c6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80037ca:	2b00      	cmp	r3, #0
 80037cc:	d118      	bne.n	8003800 <HAL_RCC_OscConfig+0x308>
 80037ce:	4b76      	ldr	r3, [pc, #472]	@ (80039a8 <HAL_RCC_OscConfig+0x4b0>)
 80037d0:	681b      	ldr	r3, [r3, #0]
 80037d2:	4a75      	ldr	r2, [pc, #468]	@ (80039a8 <HAL_RCC_OscConfig+0x4b0>)
 80037d4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80037d8:	6013      	str	r3, [r2, #0]
 80037da:	f7fd fe3f 	bl	800145c <HAL_GetTick>
 80037de:	6138      	str	r0, [r7, #16]
 80037e0:	e008      	b.n	80037f4 <HAL_RCC_OscConfig+0x2fc>
 80037e2:	f7fd fe3b 	bl	800145c <HAL_GetTick>
 80037e6:	4602      	mov	r2, r0
 80037e8:	693b      	ldr	r3, [r7, #16]
 80037ea:	1ad3      	subs	r3, r2, r3
 80037ec:	2b02      	cmp	r3, #2
 80037ee:	d901      	bls.n	80037f4 <HAL_RCC_OscConfig+0x2fc>
 80037f0:	2303      	movs	r3, #3
 80037f2:	e118      	b.n	8003a26 <HAL_RCC_OscConfig+0x52e>
 80037f4:	4b6c      	ldr	r3, [pc, #432]	@ (80039a8 <HAL_RCC_OscConfig+0x4b0>)
 80037f6:	681b      	ldr	r3, [r3, #0]
 80037f8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80037fc:	2b00      	cmp	r3, #0
 80037fe:	d0f0      	beq.n	80037e2 <HAL_RCC_OscConfig+0x2ea>
 8003800:	687b      	ldr	r3, [r7, #4]
 8003802:	689b      	ldr	r3, [r3, #8]
 8003804:	2b01      	cmp	r3, #1
 8003806:	d106      	bne.n	8003816 <HAL_RCC_OscConfig+0x31e>
 8003808:	4b66      	ldr	r3, [pc, #408]	@ (80039a4 <HAL_RCC_OscConfig+0x4ac>)
 800380a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800380c:	4a65      	ldr	r2, [pc, #404]	@ (80039a4 <HAL_RCC_OscConfig+0x4ac>)
 800380e:	f043 0301 	orr.w	r3, r3, #1
 8003812:	6713      	str	r3, [r2, #112]	@ 0x70
 8003814:	e01c      	b.n	8003850 <HAL_RCC_OscConfig+0x358>
 8003816:	687b      	ldr	r3, [r7, #4]
 8003818:	689b      	ldr	r3, [r3, #8]
 800381a:	2b05      	cmp	r3, #5
 800381c:	d10c      	bne.n	8003838 <HAL_RCC_OscConfig+0x340>
 800381e:	4b61      	ldr	r3, [pc, #388]	@ (80039a4 <HAL_RCC_OscConfig+0x4ac>)
 8003820:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003822:	4a60      	ldr	r2, [pc, #384]	@ (80039a4 <HAL_RCC_OscConfig+0x4ac>)
 8003824:	f043 0304 	orr.w	r3, r3, #4
 8003828:	6713      	str	r3, [r2, #112]	@ 0x70
 800382a:	4b5e      	ldr	r3, [pc, #376]	@ (80039a4 <HAL_RCC_OscConfig+0x4ac>)
 800382c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800382e:	4a5d      	ldr	r2, [pc, #372]	@ (80039a4 <HAL_RCC_OscConfig+0x4ac>)
 8003830:	f043 0301 	orr.w	r3, r3, #1
 8003834:	6713      	str	r3, [r2, #112]	@ 0x70
 8003836:	e00b      	b.n	8003850 <HAL_RCC_OscConfig+0x358>
 8003838:	4b5a      	ldr	r3, [pc, #360]	@ (80039a4 <HAL_RCC_OscConfig+0x4ac>)
 800383a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800383c:	4a59      	ldr	r2, [pc, #356]	@ (80039a4 <HAL_RCC_OscConfig+0x4ac>)
 800383e:	f023 0301 	bic.w	r3, r3, #1
 8003842:	6713      	str	r3, [r2, #112]	@ 0x70
 8003844:	4b57      	ldr	r3, [pc, #348]	@ (80039a4 <HAL_RCC_OscConfig+0x4ac>)
 8003846:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003848:	4a56      	ldr	r2, [pc, #344]	@ (80039a4 <HAL_RCC_OscConfig+0x4ac>)
 800384a:	f023 0304 	bic.w	r3, r3, #4
 800384e:	6713      	str	r3, [r2, #112]	@ 0x70
 8003850:	687b      	ldr	r3, [r7, #4]
 8003852:	689b      	ldr	r3, [r3, #8]
 8003854:	2b00      	cmp	r3, #0
 8003856:	d015      	beq.n	8003884 <HAL_RCC_OscConfig+0x38c>
 8003858:	f7fd fe00 	bl	800145c <HAL_GetTick>
 800385c:	6138      	str	r0, [r7, #16]
 800385e:	e00a      	b.n	8003876 <HAL_RCC_OscConfig+0x37e>
 8003860:	f7fd fdfc 	bl	800145c <HAL_GetTick>
 8003864:	4602      	mov	r2, r0
 8003866:	693b      	ldr	r3, [r7, #16]
 8003868:	1ad3      	subs	r3, r2, r3
 800386a:	f241 3288 	movw	r2, #5000	@ 0x1388
 800386e:	4293      	cmp	r3, r2
 8003870:	d901      	bls.n	8003876 <HAL_RCC_OscConfig+0x37e>
 8003872:	2303      	movs	r3, #3
 8003874:	e0d7      	b.n	8003a26 <HAL_RCC_OscConfig+0x52e>
 8003876:	4b4b      	ldr	r3, [pc, #300]	@ (80039a4 <HAL_RCC_OscConfig+0x4ac>)
 8003878:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800387a:	f003 0302 	and.w	r3, r3, #2
 800387e:	2b00      	cmp	r3, #0
 8003880:	d0ee      	beq.n	8003860 <HAL_RCC_OscConfig+0x368>
 8003882:	e014      	b.n	80038ae <HAL_RCC_OscConfig+0x3b6>
 8003884:	f7fd fdea 	bl	800145c <HAL_GetTick>
 8003888:	6138      	str	r0, [r7, #16]
 800388a:	e00a      	b.n	80038a2 <HAL_RCC_OscConfig+0x3aa>
 800388c:	f7fd fde6 	bl	800145c <HAL_GetTick>
 8003890:	4602      	mov	r2, r0
 8003892:	693b      	ldr	r3, [r7, #16]
 8003894:	1ad3      	subs	r3, r2, r3
 8003896:	f241 3288 	movw	r2, #5000	@ 0x1388
 800389a:	4293      	cmp	r3, r2
 800389c:	d901      	bls.n	80038a2 <HAL_RCC_OscConfig+0x3aa>
 800389e:	2303      	movs	r3, #3
 80038a0:	e0c1      	b.n	8003a26 <HAL_RCC_OscConfig+0x52e>
 80038a2:	4b40      	ldr	r3, [pc, #256]	@ (80039a4 <HAL_RCC_OscConfig+0x4ac>)
 80038a4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80038a6:	f003 0302 	and.w	r3, r3, #2
 80038aa:	2b00      	cmp	r3, #0
 80038ac:	d1ee      	bne.n	800388c <HAL_RCC_OscConfig+0x394>
 80038ae:	7dfb      	ldrb	r3, [r7, #23]
 80038b0:	2b01      	cmp	r3, #1
 80038b2:	d105      	bne.n	80038c0 <HAL_RCC_OscConfig+0x3c8>
 80038b4:	4b3b      	ldr	r3, [pc, #236]	@ (80039a4 <HAL_RCC_OscConfig+0x4ac>)
 80038b6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80038b8:	4a3a      	ldr	r2, [pc, #232]	@ (80039a4 <HAL_RCC_OscConfig+0x4ac>)
 80038ba:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80038be:	6413      	str	r3, [r2, #64]	@ 0x40
 80038c0:	687b      	ldr	r3, [r7, #4]
 80038c2:	699b      	ldr	r3, [r3, #24]
 80038c4:	2b00      	cmp	r3, #0
 80038c6:	f000 80ad 	beq.w	8003a24 <HAL_RCC_OscConfig+0x52c>
 80038ca:	4b36      	ldr	r3, [pc, #216]	@ (80039a4 <HAL_RCC_OscConfig+0x4ac>)
 80038cc:	689b      	ldr	r3, [r3, #8]
 80038ce:	f003 030c 	and.w	r3, r3, #12
 80038d2:	2b08      	cmp	r3, #8
 80038d4:	d060      	beq.n	8003998 <HAL_RCC_OscConfig+0x4a0>
 80038d6:	687b      	ldr	r3, [r7, #4]
 80038d8:	699b      	ldr	r3, [r3, #24]
 80038da:	2b02      	cmp	r3, #2
 80038dc:	d145      	bne.n	800396a <HAL_RCC_OscConfig+0x472>
 80038de:	4b33      	ldr	r3, [pc, #204]	@ (80039ac <HAL_RCC_OscConfig+0x4b4>)
 80038e0:	2200      	movs	r2, #0
 80038e2:	601a      	str	r2, [r3, #0]
 80038e4:	f7fd fdba 	bl	800145c <HAL_GetTick>
 80038e8:	6138      	str	r0, [r7, #16]
 80038ea:	e008      	b.n	80038fe <HAL_RCC_OscConfig+0x406>
 80038ec:	f7fd fdb6 	bl	800145c <HAL_GetTick>
 80038f0:	4602      	mov	r2, r0
 80038f2:	693b      	ldr	r3, [r7, #16]
 80038f4:	1ad3      	subs	r3, r2, r3
 80038f6:	2b02      	cmp	r3, #2
 80038f8:	d901      	bls.n	80038fe <HAL_RCC_OscConfig+0x406>
 80038fa:	2303      	movs	r3, #3
 80038fc:	e093      	b.n	8003a26 <HAL_RCC_OscConfig+0x52e>
 80038fe:	4b29      	ldr	r3, [pc, #164]	@ (80039a4 <HAL_RCC_OscConfig+0x4ac>)
 8003900:	681b      	ldr	r3, [r3, #0]
 8003902:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003906:	2b00      	cmp	r3, #0
 8003908:	d1f0      	bne.n	80038ec <HAL_RCC_OscConfig+0x3f4>
 800390a:	687b      	ldr	r3, [r7, #4]
 800390c:	69da      	ldr	r2, [r3, #28]
 800390e:	687b      	ldr	r3, [r7, #4]
 8003910:	6a1b      	ldr	r3, [r3, #32]
 8003912:	431a      	orrs	r2, r3
 8003914:	687b      	ldr	r3, [r7, #4]
 8003916:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003918:	019b      	lsls	r3, r3, #6
 800391a:	431a      	orrs	r2, r3
 800391c:	687b      	ldr	r3, [r7, #4]
 800391e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003920:	085b      	lsrs	r3, r3, #1
 8003922:	3b01      	subs	r3, #1
 8003924:	041b      	lsls	r3, r3, #16
 8003926:	431a      	orrs	r2, r3
 8003928:	687b      	ldr	r3, [r7, #4]
 800392a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800392c:	061b      	lsls	r3, r3, #24
 800392e:	431a      	orrs	r2, r3
 8003930:	687b      	ldr	r3, [r7, #4]
 8003932:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003934:	071b      	lsls	r3, r3, #28
 8003936:	491b      	ldr	r1, [pc, #108]	@ (80039a4 <HAL_RCC_OscConfig+0x4ac>)
 8003938:	4313      	orrs	r3, r2
 800393a:	604b      	str	r3, [r1, #4]
 800393c:	4b1b      	ldr	r3, [pc, #108]	@ (80039ac <HAL_RCC_OscConfig+0x4b4>)
 800393e:	2201      	movs	r2, #1
 8003940:	601a      	str	r2, [r3, #0]
 8003942:	f7fd fd8b 	bl	800145c <HAL_GetTick>
 8003946:	6138      	str	r0, [r7, #16]
 8003948:	e008      	b.n	800395c <HAL_RCC_OscConfig+0x464>
 800394a:	f7fd fd87 	bl	800145c <HAL_GetTick>
 800394e:	4602      	mov	r2, r0
 8003950:	693b      	ldr	r3, [r7, #16]
 8003952:	1ad3      	subs	r3, r2, r3
 8003954:	2b02      	cmp	r3, #2
 8003956:	d901      	bls.n	800395c <HAL_RCC_OscConfig+0x464>
 8003958:	2303      	movs	r3, #3
 800395a:	e064      	b.n	8003a26 <HAL_RCC_OscConfig+0x52e>
 800395c:	4b11      	ldr	r3, [pc, #68]	@ (80039a4 <HAL_RCC_OscConfig+0x4ac>)
 800395e:	681b      	ldr	r3, [r3, #0]
 8003960:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003964:	2b00      	cmp	r3, #0
 8003966:	d0f0      	beq.n	800394a <HAL_RCC_OscConfig+0x452>
 8003968:	e05c      	b.n	8003a24 <HAL_RCC_OscConfig+0x52c>
 800396a:	4b10      	ldr	r3, [pc, #64]	@ (80039ac <HAL_RCC_OscConfig+0x4b4>)
 800396c:	2200      	movs	r2, #0
 800396e:	601a      	str	r2, [r3, #0]
 8003970:	f7fd fd74 	bl	800145c <HAL_GetTick>
 8003974:	6138      	str	r0, [r7, #16]
 8003976:	e008      	b.n	800398a <HAL_RCC_OscConfig+0x492>
 8003978:	f7fd fd70 	bl	800145c <HAL_GetTick>
 800397c:	4602      	mov	r2, r0
 800397e:	693b      	ldr	r3, [r7, #16]
 8003980:	1ad3      	subs	r3, r2, r3
 8003982:	2b02      	cmp	r3, #2
 8003984:	d901      	bls.n	800398a <HAL_RCC_OscConfig+0x492>
 8003986:	2303      	movs	r3, #3
 8003988:	e04d      	b.n	8003a26 <HAL_RCC_OscConfig+0x52e>
 800398a:	4b06      	ldr	r3, [pc, #24]	@ (80039a4 <HAL_RCC_OscConfig+0x4ac>)
 800398c:	681b      	ldr	r3, [r3, #0]
 800398e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003992:	2b00      	cmp	r3, #0
 8003994:	d1f0      	bne.n	8003978 <HAL_RCC_OscConfig+0x480>
 8003996:	e045      	b.n	8003a24 <HAL_RCC_OscConfig+0x52c>
 8003998:	687b      	ldr	r3, [r7, #4]
 800399a:	699b      	ldr	r3, [r3, #24]
 800399c:	2b01      	cmp	r3, #1
 800399e:	d107      	bne.n	80039b0 <HAL_RCC_OscConfig+0x4b8>
 80039a0:	2301      	movs	r3, #1
 80039a2:	e040      	b.n	8003a26 <HAL_RCC_OscConfig+0x52e>
 80039a4:	40023800 	.word	0x40023800
 80039a8:	40007000 	.word	0x40007000
 80039ac:	42470060 	.word	0x42470060
 80039b0:	4b1f      	ldr	r3, [pc, #124]	@ (8003a30 <HAL_RCC_OscConfig+0x538>)
 80039b2:	685b      	ldr	r3, [r3, #4]
 80039b4:	60fb      	str	r3, [r7, #12]
 80039b6:	687b      	ldr	r3, [r7, #4]
 80039b8:	699b      	ldr	r3, [r3, #24]
 80039ba:	2b01      	cmp	r3, #1
 80039bc:	d030      	beq.n	8003a20 <HAL_RCC_OscConfig+0x528>
 80039be:	68fb      	ldr	r3, [r7, #12]
 80039c0:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 80039c4:	687b      	ldr	r3, [r7, #4]
 80039c6:	69db      	ldr	r3, [r3, #28]
 80039c8:	429a      	cmp	r2, r3
 80039ca:	d129      	bne.n	8003a20 <HAL_RCC_OscConfig+0x528>
 80039cc:	68fb      	ldr	r3, [r7, #12]
 80039ce:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 80039d2:	687b      	ldr	r3, [r7, #4]
 80039d4:	6a1b      	ldr	r3, [r3, #32]
 80039d6:	429a      	cmp	r2, r3
 80039d8:	d122      	bne.n	8003a20 <HAL_RCC_OscConfig+0x528>
 80039da:	68fa      	ldr	r2, [r7, #12]
 80039dc:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 80039e0:	4013      	ands	r3, r2
 80039e2:	687a      	ldr	r2, [r7, #4]
 80039e4:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 80039e6:	0192      	lsls	r2, r2, #6
 80039e8:	4293      	cmp	r3, r2
 80039ea:	d119      	bne.n	8003a20 <HAL_RCC_OscConfig+0x528>
 80039ec:	68fb      	ldr	r3, [r7, #12]
 80039ee:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 80039f2:	687b      	ldr	r3, [r7, #4]
 80039f4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80039f6:	085b      	lsrs	r3, r3, #1
 80039f8:	3b01      	subs	r3, #1
 80039fa:	041b      	lsls	r3, r3, #16
 80039fc:	429a      	cmp	r2, r3
 80039fe:	d10f      	bne.n	8003a20 <HAL_RCC_OscConfig+0x528>
 8003a00:	68fb      	ldr	r3, [r7, #12]
 8003a02:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 8003a06:	687b      	ldr	r3, [r7, #4]
 8003a08:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003a0a:	061b      	lsls	r3, r3, #24
 8003a0c:	429a      	cmp	r2, r3
 8003a0e:	d107      	bne.n	8003a20 <HAL_RCC_OscConfig+0x528>
 8003a10:	68fb      	ldr	r3, [r7, #12]
 8003a12:	f003 42e0 	and.w	r2, r3, #1879048192	@ 0x70000000
 8003a16:	687b      	ldr	r3, [r7, #4]
 8003a18:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003a1a:	071b      	lsls	r3, r3, #28
 8003a1c:	429a      	cmp	r2, r3
 8003a1e:	d001      	beq.n	8003a24 <HAL_RCC_OscConfig+0x52c>
 8003a20:	2301      	movs	r3, #1
 8003a22:	e000      	b.n	8003a26 <HAL_RCC_OscConfig+0x52e>
 8003a24:	2300      	movs	r3, #0
 8003a26:	4618      	mov	r0, r3
 8003a28:	3718      	adds	r7, #24
 8003a2a:	46bd      	mov	sp, r7
 8003a2c:	bd80      	pop	{r7, pc}
 8003a2e:	bf00      	nop
 8003a30:	40023800 	.word	0x40023800

08003a34 <HAL_UART_Init>:
 8003a34:	b580      	push	{r7, lr}
 8003a36:	b082      	sub	sp, #8
 8003a38:	af00      	add	r7, sp, #0
 8003a3a:	6078      	str	r0, [r7, #4]
 8003a3c:	687b      	ldr	r3, [r7, #4]
 8003a3e:	2b00      	cmp	r3, #0
 8003a40:	d101      	bne.n	8003a46 <HAL_UART_Init+0x12>
 8003a42:	2301      	movs	r3, #1
 8003a44:	e042      	b.n	8003acc <HAL_UART_Init+0x98>
 8003a46:	687b      	ldr	r3, [r7, #4]
 8003a48:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003a4c:	b2db      	uxtb	r3, r3
 8003a4e:	2b00      	cmp	r3, #0
 8003a50:	d106      	bne.n	8003a60 <HAL_UART_Init+0x2c>
 8003a52:	687b      	ldr	r3, [r7, #4]
 8003a54:	2200      	movs	r2, #0
 8003a56:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003a5a:	6878      	ldr	r0, [r7, #4]
 8003a5c:	f7fd fbf0 	bl	8001240 <HAL_UART_MspInit>
 8003a60:	687b      	ldr	r3, [r7, #4]
 8003a62:	2224      	movs	r2, #36	@ 0x24
 8003a64:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003a68:	687b      	ldr	r3, [r7, #4]
 8003a6a:	681b      	ldr	r3, [r3, #0]
 8003a6c:	68da      	ldr	r2, [r3, #12]
 8003a6e:	687b      	ldr	r3, [r7, #4]
 8003a70:	681b      	ldr	r3, [r3, #0]
 8003a72:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8003a76:	60da      	str	r2, [r3, #12]
 8003a78:	6878      	ldr	r0, [r7, #4]
 8003a7a:	f000 fa09 	bl	8003e90 <UART_SetConfig>
 8003a7e:	687b      	ldr	r3, [r7, #4]
 8003a80:	681b      	ldr	r3, [r3, #0]
 8003a82:	691a      	ldr	r2, [r3, #16]
 8003a84:	687b      	ldr	r3, [r7, #4]
 8003a86:	681b      	ldr	r3, [r3, #0]
 8003a88:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8003a8c:	611a      	str	r2, [r3, #16]
 8003a8e:	687b      	ldr	r3, [r7, #4]
 8003a90:	681b      	ldr	r3, [r3, #0]
 8003a92:	695a      	ldr	r2, [r3, #20]
 8003a94:	687b      	ldr	r3, [r7, #4]
 8003a96:	681b      	ldr	r3, [r3, #0]
 8003a98:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8003a9c:	615a      	str	r2, [r3, #20]
 8003a9e:	687b      	ldr	r3, [r7, #4]
 8003aa0:	681b      	ldr	r3, [r3, #0]
 8003aa2:	68da      	ldr	r2, [r3, #12]
 8003aa4:	687b      	ldr	r3, [r7, #4]
 8003aa6:	681b      	ldr	r3, [r3, #0]
 8003aa8:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8003aac:	60da      	str	r2, [r3, #12]
 8003aae:	687b      	ldr	r3, [r7, #4]
 8003ab0:	2200      	movs	r2, #0
 8003ab2:	645a      	str	r2, [r3, #68]	@ 0x44
 8003ab4:	687b      	ldr	r3, [r7, #4]
 8003ab6:	2220      	movs	r2, #32
 8003ab8:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003abc:	687b      	ldr	r3, [r7, #4]
 8003abe:	2220      	movs	r2, #32
 8003ac0:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003ac4:	687b      	ldr	r3, [r7, #4]
 8003ac6:	2200      	movs	r2, #0
 8003ac8:	635a      	str	r2, [r3, #52]	@ 0x34
 8003aca:	2300      	movs	r3, #0
 8003acc:	4618      	mov	r0, r3
 8003ace:	3708      	adds	r7, #8
 8003ad0:	46bd      	mov	sp, r7
 8003ad2:	bd80      	pop	{r7, pc}

08003ad4 <HAL_UART_Transmit>:
 8003ad4:	b580      	push	{r7, lr}
 8003ad6:	b08a      	sub	sp, #40	@ 0x28
 8003ad8:	af02      	add	r7, sp, #8
 8003ada:	60f8      	str	r0, [r7, #12]
 8003adc:	60b9      	str	r1, [r7, #8]
 8003ade:	603b      	str	r3, [r7, #0]
 8003ae0:	4613      	mov	r3, r2
 8003ae2:	80fb      	strh	r3, [r7, #6]
 8003ae4:	2300      	movs	r3, #0
 8003ae6:	617b      	str	r3, [r7, #20]
 8003ae8:	68fb      	ldr	r3, [r7, #12]
 8003aea:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003aee:	b2db      	uxtb	r3, r3
 8003af0:	2b20      	cmp	r3, #32
 8003af2:	d175      	bne.n	8003be0 <HAL_UART_Transmit+0x10c>
 8003af4:	68bb      	ldr	r3, [r7, #8]
 8003af6:	2b00      	cmp	r3, #0
 8003af8:	d002      	beq.n	8003b00 <HAL_UART_Transmit+0x2c>
 8003afa:	88fb      	ldrh	r3, [r7, #6]
 8003afc:	2b00      	cmp	r3, #0
 8003afe:	d101      	bne.n	8003b04 <HAL_UART_Transmit+0x30>
 8003b00:	2301      	movs	r3, #1
 8003b02:	e06e      	b.n	8003be2 <HAL_UART_Transmit+0x10e>
 8003b04:	68fb      	ldr	r3, [r7, #12]
 8003b06:	2200      	movs	r2, #0
 8003b08:	645a      	str	r2, [r3, #68]	@ 0x44
 8003b0a:	68fb      	ldr	r3, [r7, #12]
 8003b0c:	2221      	movs	r2, #33	@ 0x21
 8003b0e:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003b12:	f7fd fca3 	bl	800145c <HAL_GetTick>
 8003b16:	6178      	str	r0, [r7, #20]
 8003b18:	68fb      	ldr	r3, [r7, #12]
 8003b1a:	88fa      	ldrh	r2, [r7, #6]
 8003b1c:	849a      	strh	r2, [r3, #36]	@ 0x24
 8003b1e:	68fb      	ldr	r3, [r7, #12]
 8003b20:	88fa      	ldrh	r2, [r7, #6]
 8003b22:	84da      	strh	r2, [r3, #38]	@ 0x26
 8003b24:	68fb      	ldr	r3, [r7, #12]
 8003b26:	689b      	ldr	r3, [r3, #8]
 8003b28:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003b2c:	d108      	bne.n	8003b40 <HAL_UART_Transmit+0x6c>
 8003b2e:	68fb      	ldr	r3, [r7, #12]
 8003b30:	691b      	ldr	r3, [r3, #16]
 8003b32:	2b00      	cmp	r3, #0
 8003b34:	d104      	bne.n	8003b40 <HAL_UART_Transmit+0x6c>
 8003b36:	2300      	movs	r3, #0
 8003b38:	61fb      	str	r3, [r7, #28]
 8003b3a:	68bb      	ldr	r3, [r7, #8]
 8003b3c:	61bb      	str	r3, [r7, #24]
 8003b3e:	e003      	b.n	8003b48 <HAL_UART_Transmit+0x74>
 8003b40:	68bb      	ldr	r3, [r7, #8]
 8003b42:	61fb      	str	r3, [r7, #28]
 8003b44:	2300      	movs	r3, #0
 8003b46:	61bb      	str	r3, [r7, #24]
 8003b48:	e02e      	b.n	8003ba8 <HAL_UART_Transmit+0xd4>
 8003b4a:	683b      	ldr	r3, [r7, #0]
 8003b4c:	9300      	str	r3, [sp, #0]
 8003b4e:	697b      	ldr	r3, [r7, #20]
 8003b50:	2200      	movs	r2, #0
 8003b52:	2180      	movs	r1, #128	@ 0x80
 8003b54:	68f8      	ldr	r0, [r7, #12]
 8003b56:	f000 f8df 	bl	8003d18 <UART_WaitOnFlagUntilTimeout>
 8003b5a:	4603      	mov	r3, r0
 8003b5c:	2b00      	cmp	r3, #0
 8003b5e:	d005      	beq.n	8003b6c <HAL_UART_Transmit+0x98>
 8003b60:	68fb      	ldr	r3, [r7, #12]
 8003b62:	2220      	movs	r2, #32
 8003b64:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003b68:	2303      	movs	r3, #3
 8003b6a:	e03a      	b.n	8003be2 <HAL_UART_Transmit+0x10e>
 8003b6c:	69fb      	ldr	r3, [r7, #28]
 8003b6e:	2b00      	cmp	r3, #0
 8003b70:	d10b      	bne.n	8003b8a <HAL_UART_Transmit+0xb6>
 8003b72:	69bb      	ldr	r3, [r7, #24]
 8003b74:	881b      	ldrh	r3, [r3, #0]
 8003b76:	461a      	mov	r2, r3
 8003b78:	68fb      	ldr	r3, [r7, #12]
 8003b7a:	681b      	ldr	r3, [r3, #0]
 8003b7c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8003b80:	605a      	str	r2, [r3, #4]
 8003b82:	69bb      	ldr	r3, [r7, #24]
 8003b84:	3302      	adds	r3, #2
 8003b86:	61bb      	str	r3, [r7, #24]
 8003b88:	e007      	b.n	8003b9a <HAL_UART_Transmit+0xc6>
 8003b8a:	69fb      	ldr	r3, [r7, #28]
 8003b8c:	781a      	ldrb	r2, [r3, #0]
 8003b8e:	68fb      	ldr	r3, [r7, #12]
 8003b90:	681b      	ldr	r3, [r3, #0]
 8003b92:	605a      	str	r2, [r3, #4]
 8003b94:	69fb      	ldr	r3, [r7, #28]
 8003b96:	3301      	adds	r3, #1
 8003b98:	61fb      	str	r3, [r7, #28]
 8003b9a:	68fb      	ldr	r3, [r7, #12]
 8003b9c:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8003b9e:	b29b      	uxth	r3, r3
 8003ba0:	3b01      	subs	r3, #1
 8003ba2:	b29a      	uxth	r2, r3
 8003ba4:	68fb      	ldr	r3, [r7, #12]
 8003ba6:	84da      	strh	r2, [r3, #38]	@ 0x26
 8003ba8:	68fb      	ldr	r3, [r7, #12]
 8003baa:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8003bac:	b29b      	uxth	r3, r3
 8003bae:	2b00      	cmp	r3, #0
 8003bb0:	d1cb      	bne.n	8003b4a <HAL_UART_Transmit+0x76>
 8003bb2:	683b      	ldr	r3, [r7, #0]
 8003bb4:	9300      	str	r3, [sp, #0]
 8003bb6:	697b      	ldr	r3, [r7, #20]
 8003bb8:	2200      	movs	r2, #0
 8003bba:	2140      	movs	r1, #64	@ 0x40
 8003bbc:	68f8      	ldr	r0, [r7, #12]
 8003bbe:	f000 f8ab 	bl	8003d18 <UART_WaitOnFlagUntilTimeout>
 8003bc2:	4603      	mov	r3, r0
 8003bc4:	2b00      	cmp	r3, #0
 8003bc6:	d005      	beq.n	8003bd4 <HAL_UART_Transmit+0x100>
 8003bc8:	68fb      	ldr	r3, [r7, #12]
 8003bca:	2220      	movs	r2, #32
 8003bcc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003bd0:	2303      	movs	r3, #3
 8003bd2:	e006      	b.n	8003be2 <HAL_UART_Transmit+0x10e>
 8003bd4:	68fb      	ldr	r3, [r7, #12]
 8003bd6:	2220      	movs	r2, #32
 8003bd8:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003bdc:	2300      	movs	r3, #0
 8003bde:	e000      	b.n	8003be2 <HAL_UART_Transmit+0x10e>
 8003be0:	2302      	movs	r3, #2
 8003be2:	4618      	mov	r0, r3
 8003be4:	3720      	adds	r7, #32
 8003be6:	46bd      	mov	sp, r7
 8003be8:	bd80      	pop	{r7, pc}

08003bea <HAL_UART_Receive>:
 8003bea:	b580      	push	{r7, lr}
 8003bec:	b08a      	sub	sp, #40	@ 0x28
 8003bee:	af02      	add	r7, sp, #8
 8003bf0:	60f8      	str	r0, [r7, #12]
 8003bf2:	60b9      	str	r1, [r7, #8]
 8003bf4:	603b      	str	r3, [r7, #0]
 8003bf6:	4613      	mov	r3, r2
 8003bf8:	80fb      	strh	r3, [r7, #6]
 8003bfa:	2300      	movs	r3, #0
 8003bfc:	617b      	str	r3, [r7, #20]
 8003bfe:	68fb      	ldr	r3, [r7, #12]
 8003c00:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8003c04:	b2db      	uxtb	r3, r3
 8003c06:	2b20      	cmp	r3, #32
 8003c08:	f040 8081 	bne.w	8003d0e <HAL_UART_Receive+0x124>
 8003c0c:	68bb      	ldr	r3, [r7, #8]
 8003c0e:	2b00      	cmp	r3, #0
 8003c10:	d002      	beq.n	8003c18 <HAL_UART_Receive+0x2e>
 8003c12:	88fb      	ldrh	r3, [r7, #6]
 8003c14:	2b00      	cmp	r3, #0
 8003c16:	d101      	bne.n	8003c1c <HAL_UART_Receive+0x32>
 8003c18:	2301      	movs	r3, #1
 8003c1a:	e079      	b.n	8003d10 <HAL_UART_Receive+0x126>
 8003c1c:	68fb      	ldr	r3, [r7, #12]
 8003c1e:	2200      	movs	r2, #0
 8003c20:	645a      	str	r2, [r3, #68]	@ 0x44
 8003c22:	68fb      	ldr	r3, [r7, #12]
 8003c24:	2222      	movs	r2, #34	@ 0x22
 8003c26:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003c2a:	68fb      	ldr	r3, [r7, #12]
 8003c2c:	2200      	movs	r2, #0
 8003c2e:	631a      	str	r2, [r3, #48]	@ 0x30
 8003c30:	f7fd fc14 	bl	800145c <HAL_GetTick>
 8003c34:	6178      	str	r0, [r7, #20]
 8003c36:	68fb      	ldr	r3, [r7, #12]
 8003c38:	88fa      	ldrh	r2, [r7, #6]
 8003c3a:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8003c3c:	68fb      	ldr	r3, [r7, #12]
 8003c3e:	88fa      	ldrh	r2, [r7, #6]
 8003c40:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8003c42:	68fb      	ldr	r3, [r7, #12]
 8003c44:	689b      	ldr	r3, [r3, #8]
 8003c46:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003c4a:	d108      	bne.n	8003c5e <HAL_UART_Receive+0x74>
 8003c4c:	68fb      	ldr	r3, [r7, #12]
 8003c4e:	691b      	ldr	r3, [r3, #16]
 8003c50:	2b00      	cmp	r3, #0
 8003c52:	d104      	bne.n	8003c5e <HAL_UART_Receive+0x74>
 8003c54:	2300      	movs	r3, #0
 8003c56:	61fb      	str	r3, [r7, #28]
 8003c58:	68bb      	ldr	r3, [r7, #8]
 8003c5a:	61bb      	str	r3, [r7, #24]
 8003c5c:	e003      	b.n	8003c66 <HAL_UART_Receive+0x7c>
 8003c5e:	68bb      	ldr	r3, [r7, #8]
 8003c60:	61fb      	str	r3, [r7, #28]
 8003c62:	2300      	movs	r3, #0
 8003c64:	61bb      	str	r3, [r7, #24]
 8003c66:	e047      	b.n	8003cf8 <HAL_UART_Receive+0x10e>
 8003c68:	683b      	ldr	r3, [r7, #0]
 8003c6a:	9300      	str	r3, [sp, #0]
 8003c6c:	697b      	ldr	r3, [r7, #20]
 8003c6e:	2200      	movs	r2, #0
 8003c70:	2120      	movs	r1, #32
 8003c72:	68f8      	ldr	r0, [r7, #12]
 8003c74:	f000 f850 	bl	8003d18 <UART_WaitOnFlagUntilTimeout>
 8003c78:	4603      	mov	r3, r0
 8003c7a:	2b00      	cmp	r3, #0
 8003c7c:	d005      	beq.n	8003c8a <HAL_UART_Receive+0xa0>
 8003c7e:	68fb      	ldr	r3, [r7, #12]
 8003c80:	2220      	movs	r2, #32
 8003c82:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003c86:	2303      	movs	r3, #3
 8003c88:	e042      	b.n	8003d10 <HAL_UART_Receive+0x126>
 8003c8a:	69fb      	ldr	r3, [r7, #28]
 8003c8c:	2b00      	cmp	r3, #0
 8003c8e:	d10c      	bne.n	8003caa <HAL_UART_Receive+0xc0>
 8003c90:	68fb      	ldr	r3, [r7, #12]
 8003c92:	681b      	ldr	r3, [r3, #0]
 8003c94:	685b      	ldr	r3, [r3, #4]
 8003c96:	b29b      	uxth	r3, r3
 8003c98:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003c9c:	b29a      	uxth	r2, r3
 8003c9e:	69bb      	ldr	r3, [r7, #24]
 8003ca0:	801a      	strh	r2, [r3, #0]
 8003ca2:	69bb      	ldr	r3, [r7, #24]
 8003ca4:	3302      	adds	r3, #2
 8003ca6:	61bb      	str	r3, [r7, #24]
 8003ca8:	e01f      	b.n	8003cea <HAL_UART_Receive+0x100>
 8003caa:	68fb      	ldr	r3, [r7, #12]
 8003cac:	689b      	ldr	r3, [r3, #8]
 8003cae:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003cb2:	d007      	beq.n	8003cc4 <HAL_UART_Receive+0xda>
 8003cb4:	68fb      	ldr	r3, [r7, #12]
 8003cb6:	689b      	ldr	r3, [r3, #8]
 8003cb8:	2b00      	cmp	r3, #0
 8003cba:	d10a      	bne.n	8003cd2 <HAL_UART_Receive+0xe8>
 8003cbc:	68fb      	ldr	r3, [r7, #12]
 8003cbe:	691b      	ldr	r3, [r3, #16]
 8003cc0:	2b00      	cmp	r3, #0
 8003cc2:	d106      	bne.n	8003cd2 <HAL_UART_Receive+0xe8>
 8003cc4:	68fb      	ldr	r3, [r7, #12]
 8003cc6:	681b      	ldr	r3, [r3, #0]
 8003cc8:	685b      	ldr	r3, [r3, #4]
 8003cca:	b2da      	uxtb	r2, r3
 8003ccc:	69fb      	ldr	r3, [r7, #28]
 8003cce:	701a      	strb	r2, [r3, #0]
 8003cd0:	e008      	b.n	8003ce4 <HAL_UART_Receive+0xfa>
 8003cd2:	68fb      	ldr	r3, [r7, #12]
 8003cd4:	681b      	ldr	r3, [r3, #0]
 8003cd6:	685b      	ldr	r3, [r3, #4]
 8003cd8:	b2db      	uxtb	r3, r3
 8003cda:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8003cde:	b2da      	uxtb	r2, r3
 8003ce0:	69fb      	ldr	r3, [r7, #28]
 8003ce2:	701a      	strb	r2, [r3, #0]
 8003ce4:	69fb      	ldr	r3, [r7, #28]
 8003ce6:	3301      	adds	r3, #1
 8003ce8:	61fb      	str	r3, [r7, #28]
 8003cea:	68fb      	ldr	r3, [r7, #12]
 8003cec:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8003cee:	b29b      	uxth	r3, r3
 8003cf0:	3b01      	subs	r3, #1
 8003cf2:	b29a      	uxth	r2, r3
 8003cf4:	68fb      	ldr	r3, [r7, #12]
 8003cf6:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8003cf8:	68fb      	ldr	r3, [r7, #12]
 8003cfa:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8003cfc:	b29b      	uxth	r3, r3
 8003cfe:	2b00      	cmp	r3, #0
 8003d00:	d1b2      	bne.n	8003c68 <HAL_UART_Receive+0x7e>
 8003d02:	68fb      	ldr	r3, [r7, #12]
 8003d04:	2220      	movs	r2, #32
 8003d06:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003d0a:	2300      	movs	r3, #0
 8003d0c:	e000      	b.n	8003d10 <HAL_UART_Receive+0x126>
 8003d0e:	2302      	movs	r3, #2
 8003d10:	4618      	mov	r0, r3
 8003d12:	3720      	adds	r7, #32
 8003d14:	46bd      	mov	sp, r7
 8003d16:	bd80      	pop	{r7, pc}

08003d18 <UART_WaitOnFlagUntilTimeout>:
 8003d18:	b580      	push	{r7, lr}
 8003d1a:	b086      	sub	sp, #24
 8003d1c:	af00      	add	r7, sp, #0
 8003d1e:	60f8      	str	r0, [r7, #12]
 8003d20:	60b9      	str	r1, [r7, #8]
 8003d22:	603b      	str	r3, [r7, #0]
 8003d24:	4613      	mov	r3, r2
 8003d26:	71fb      	strb	r3, [r7, #7]
 8003d28:	e03b      	b.n	8003da2 <UART_WaitOnFlagUntilTimeout+0x8a>
 8003d2a:	6a3b      	ldr	r3, [r7, #32]
 8003d2c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003d30:	d037      	beq.n	8003da2 <UART_WaitOnFlagUntilTimeout+0x8a>
 8003d32:	f7fd fb93 	bl	800145c <HAL_GetTick>
 8003d36:	4602      	mov	r2, r0
 8003d38:	683b      	ldr	r3, [r7, #0]
 8003d3a:	1ad3      	subs	r3, r2, r3
 8003d3c:	6a3a      	ldr	r2, [r7, #32]
 8003d3e:	429a      	cmp	r2, r3
 8003d40:	d302      	bcc.n	8003d48 <UART_WaitOnFlagUntilTimeout+0x30>
 8003d42:	6a3b      	ldr	r3, [r7, #32]
 8003d44:	2b00      	cmp	r3, #0
 8003d46:	d101      	bne.n	8003d4c <UART_WaitOnFlagUntilTimeout+0x34>
 8003d48:	2303      	movs	r3, #3
 8003d4a:	e03a      	b.n	8003dc2 <UART_WaitOnFlagUntilTimeout+0xaa>
 8003d4c:	68fb      	ldr	r3, [r7, #12]
 8003d4e:	681b      	ldr	r3, [r3, #0]
 8003d50:	68db      	ldr	r3, [r3, #12]
 8003d52:	f003 0304 	and.w	r3, r3, #4
 8003d56:	2b00      	cmp	r3, #0
 8003d58:	d023      	beq.n	8003da2 <UART_WaitOnFlagUntilTimeout+0x8a>
 8003d5a:	68bb      	ldr	r3, [r7, #8]
 8003d5c:	2b80      	cmp	r3, #128	@ 0x80
 8003d5e:	d020      	beq.n	8003da2 <UART_WaitOnFlagUntilTimeout+0x8a>
 8003d60:	68bb      	ldr	r3, [r7, #8]
 8003d62:	2b40      	cmp	r3, #64	@ 0x40
 8003d64:	d01d      	beq.n	8003da2 <UART_WaitOnFlagUntilTimeout+0x8a>
 8003d66:	68fb      	ldr	r3, [r7, #12]
 8003d68:	681b      	ldr	r3, [r3, #0]
 8003d6a:	681b      	ldr	r3, [r3, #0]
 8003d6c:	f003 0308 	and.w	r3, r3, #8
 8003d70:	2b08      	cmp	r3, #8
 8003d72:	d116      	bne.n	8003da2 <UART_WaitOnFlagUntilTimeout+0x8a>
 8003d74:	2300      	movs	r3, #0
 8003d76:	617b      	str	r3, [r7, #20]
 8003d78:	68fb      	ldr	r3, [r7, #12]
 8003d7a:	681b      	ldr	r3, [r3, #0]
 8003d7c:	681b      	ldr	r3, [r3, #0]
 8003d7e:	617b      	str	r3, [r7, #20]
 8003d80:	68fb      	ldr	r3, [r7, #12]
 8003d82:	681b      	ldr	r3, [r3, #0]
 8003d84:	685b      	ldr	r3, [r3, #4]
 8003d86:	617b      	str	r3, [r7, #20]
 8003d88:	697b      	ldr	r3, [r7, #20]
 8003d8a:	68f8      	ldr	r0, [r7, #12]
 8003d8c:	f000 f81d 	bl	8003dca <UART_EndRxTransfer>
 8003d90:	68fb      	ldr	r3, [r7, #12]
 8003d92:	2208      	movs	r2, #8
 8003d94:	645a      	str	r2, [r3, #68]	@ 0x44
 8003d96:	68fb      	ldr	r3, [r7, #12]
 8003d98:	2200      	movs	r2, #0
 8003d9a:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003d9e:	2301      	movs	r3, #1
 8003da0:	e00f      	b.n	8003dc2 <UART_WaitOnFlagUntilTimeout+0xaa>
 8003da2:	68fb      	ldr	r3, [r7, #12]
 8003da4:	681b      	ldr	r3, [r3, #0]
 8003da6:	681a      	ldr	r2, [r3, #0]
 8003da8:	68bb      	ldr	r3, [r7, #8]
 8003daa:	4013      	ands	r3, r2
 8003dac:	68ba      	ldr	r2, [r7, #8]
 8003dae:	429a      	cmp	r2, r3
 8003db0:	bf0c      	ite	eq
 8003db2:	2301      	moveq	r3, #1
 8003db4:	2300      	movne	r3, #0
 8003db6:	b2db      	uxtb	r3, r3
 8003db8:	461a      	mov	r2, r3
 8003dba:	79fb      	ldrb	r3, [r7, #7]
 8003dbc:	429a      	cmp	r2, r3
 8003dbe:	d0b4      	beq.n	8003d2a <UART_WaitOnFlagUntilTimeout+0x12>
 8003dc0:	2300      	movs	r3, #0
 8003dc2:	4618      	mov	r0, r3
 8003dc4:	3718      	adds	r7, #24
 8003dc6:	46bd      	mov	sp, r7
 8003dc8:	bd80      	pop	{r7, pc}

08003dca <UART_EndRxTransfer>:
 8003dca:	b480      	push	{r7}
 8003dcc:	b095      	sub	sp, #84	@ 0x54
 8003dce:	af00      	add	r7, sp, #0
 8003dd0:	6078      	str	r0, [r7, #4]
 8003dd2:	687b      	ldr	r3, [r7, #4]
 8003dd4:	681b      	ldr	r3, [r3, #0]
 8003dd6:	330c      	adds	r3, #12
 8003dd8:	637b      	str	r3, [r7, #52]	@ 0x34
 8003dda:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8003ddc:	e853 3f00 	ldrex	r3, [r3]
 8003de0:	633b      	str	r3, [r7, #48]	@ 0x30
 8003de2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8003de4:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8003de8:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003dea:	687b      	ldr	r3, [r7, #4]
 8003dec:	681b      	ldr	r3, [r3, #0]
 8003dee:	330c      	adds	r3, #12
 8003df0:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8003df2:	643a      	str	r2, [r7, #64]	@ 0x40
 8003df4:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8003df6:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8003df8:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8003dfa:	e841 2300 	strex	r3, r2, [r1]
 8003dfe:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003e00:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003e02:	2b00      	cmp	r3, #0
 8003e04:	d1e5      	bne.n	8003dd2 <UART_EndRxTransfer+0x8>
 8003e06:	687b      	ldr	r3, [r7, #4]
 8003e08:	681b      	ldr	r3, [r3, #0]
 8003e0a:	3314      	adds	r3, #20
 8003e0c:	623b      	str	r3, [r7, #32]
 8003e0e:	6a3b      	ldr	r3, [r7, #32]
 8003e10:	e853 3f00 	ldrex	r3, [r3]
 8003e14:	61fb      	str	r3, [r7, #28]
 8003e16:	69fb      	ldr	r3, [r7, #28]
 8003e18:	f023 0301 	bic.w	r3, r3, #1
 8003e1c:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003e1e:	687b      	ldr	r3, [r7, #4]
 8003e20:	681b      	ldr	r3, [r3, #0]
 8003e22:	3314      	adds	r3, #20
 8003e24:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8003e26:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8003e28:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003e2a:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8003e2c:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8003e2e:	e841 2300 	strex	r3, r2, [r1]
 8003e32:	627b      	str	r3, [r7, #36]	@ 0x24
 8003e34:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003e36:	2b00      	cmp	r3, #0
 8003e38:	d1e5      	bne.n	8003e06 <UART_EndRxTransfer+0x3c>
 8003e3a:	687b      	ldr	r3, [r7, #4]
 8003e3c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003e3e:	2b01      	cmp	r3, #1
 8003e40:	d119      	bne.n	8003e76 <UART_EndRxTransfer+0xac>
 8003e42:	687b      	ldr	r3, [r7, #4]
 8003e44:	681b      	ldr	r3, [r3, #0]
 8003e46:	330c      	adds	r3, #12
 8003e48:	60fb      	str	r3, [r7, #12]
 8003e4a:	68fb      	ldr	r3, [r7, #12]
 8003e4c:	e853 3f00 	ldrex	r3, [r3]
 8003e50:	60bb      	str	r3, [r7, #8]
 8003e52:	68bb      	ldr	r3, [r7, #8]
 8003e54:	f023 0310 	bic.w	r3, r3, #16
 8003e58:	647b      	str	r3, [r7, #68]	@ 0x44
 8003e5a:	687b      	ldr	r3, [r7, #4]
 8003e5c:	681b      	ldr	r3, [r3, #0]
 8003e5e:	330c      	adds	r3, #12
 8003e60:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8003e62:	61ba      	str	r2, [r7, #24]
 8003e64:	617b      	str	r3, [r7, #20]
 8003e66:	6979      	ldr	r1, [r7, #20]
 8003e68:	69ba      	ldr	r2, [r7, #24]
 8003e6a:	e841 2300 	strex	r3, r2, [r1]
 8003e6e:	613b      	str	r3, [r7, #16]
 8003e70:	693b      	ldr	r3, [r7, #16]
 8003e72:	2b00      	cmp	r3, #0
 8003e74:	d1e5      	bne.n	8003e42 <UART_EndRxTransfer+0x78>
 8003e76:	687b      	ldr	r3, [r7, #4]
 8003e78:	2220      	movs	r2, #32
 8003e7a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003e7e:	687b      	ldr	r3, [r7, #4]
 8003e80:	2200      	movs	r2, #0
 8003e82:	631a      	str	r2, [r3, #48]	@ 0x30
 8003e84:	bf00      	nop
 8003e86:	3754      	adds	r7, #84	@ 0x54
 8003e88:	46bd      	mov	sp, r7
 8003e8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e8e:	4770      	bx	lr

08003e90 <UART_SetConfig>:
 8003e90:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8003e94:	b0c0      	sub	sp, #256	@ 0x100
 8003e96:	af00      	add	r7, sp, #0
 8003e98:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 8003e9c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003ea0:	681b      	ldr	r3, [r3, #0]
 8003ea2:	691b      	ldr	r3, [r3, #16]
 8003ea4:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 8003ea8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003eac:	68d9      	ldr	r1, [r3, #12]
 8003eae:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003eb2:	681a      	ldr	r2, [r3, #0]
 8003eb4:	ea40 0301 	orr.w	r3, r0, r1
 8003eb8:	6113      	str	r3, [r2, #16]
 8003eba:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003ebe:	689a      	ldr	r2, [r3, #8]
 8003ec0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003ec4:	691b      	ldr	r3, [r3, #16]
 8003ec6:	431a      	orrs	r2, r3
 8003ec8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003ecc:	695b      	ldr	r3, [r3, #20]
 8003ece:	431a      	orrs	r2, r3
 8003ed0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003ed4:	69db      	ldr	r3, [r3, #28]
 8003ed6:	4313      	orrs	r3, r2
 8003ed8:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8003edc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003ee0:	681b      	ldr	r3, [r3, #0]
 8003ee2:	68db      	ldr	r3, [r3, #12]
 8003ee4:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 8003ee8:	f021 010c 	bic.w	r1, r1, #12
 8003eec:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003ef0:	681a      	ldr	r2, [r3, #0]
 8003ef2:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 8003ef6:	430b      	orrs	r3, r1
 8003ef8:	60d3      	str	r3, [r2, #12]
 8003efa:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003efe:	681b      	ldr	r3, [r3, #0]
 8003f00:	695b      	ldr	r3, [r3, #20]
 8003f02:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 8003f06:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003f0a:	6999      	ldr	r1, [r3, #24]
 8003f0c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003f10:	681a      	ldr	r2, [r3, #0]
 8003f12:	ea40 0301 	orr.w	r3, r0, r1
 8003f16:	6153      	str	r3, [r2, #20]
 8003f18:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003f1c:	681a      	ldr	r2, [r3, #0]
 8003f1e:	4b8f      	ldr	r3, [pc, #572]	@ (800415c <UART_SetConfig+0x2cc>)
 8003f20:	429a      	cmp	r2, r3
 8003f22:	d005      	beq.n	8003f30 <UART_SetConfig+0xa0>
 8003f24:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003f28:	681a      	ldr	r2, [r3, #0]
 8003f2a:	4b8d      	ldr	r3, [pc, #564]	@ (8004160 <UART_SetConfig+0x2d0>)
 8003f2c:	429a      	cmp	r2, r3
 8003f2e:	d104      	bne.n	8003f3a <UART_SetConfig+0xaa>
 8003f30:	f7ff f89e 	bl	8003070 <HAL_RCC_GetPCLK2Freq>
 8003f34:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8003f38:	e003      	b.n	8003f42 <UART_SetConfig+0xb2>
 8003f3a:	f7ff f885 	bl	8003048 <HAL_RCC_GetPCLK1Freq>
 8003f3e:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8003f42:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003f46:	69db      	ldr	r3, [r3, #28]
 8003f48:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8003f4c:	f040 810c 	bne.w	8004168 <UART_SetConfig+0x2d8>
 8003f50:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8003f54:	2200      	movs	r2, #0
 8003f56:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 8003f5a:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 8003f5e:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 8003f62:	4622      	mov	r2, r4
 8003f64:	462b      	mov	r3, r5
 8003f66:	1891      	adds	r1, r2, r2
 8003f68:	65b9      	str	r1, [r7, #88]	@ 0x58
 8003f6a:	415b      	adcs	r3, r3
 8003f6c:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8003f6e:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8003f72:	4621      	mov	r1, r4
 8003f74:	eb12 0801 	adds.w	r8, r2, r1
 8003f78:	4629      	mov	r1, r5
 8003f7a:	eb43 0901 	adc.w	r9, r3, r1
 8003f7e:	f04f 0200 	mov.w	r2, #0
 8003f82:	f04f 0300 	mov.w	r3, #0
 8003f86:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8003f8a:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8003f8e:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8003f92:	4690      	mov	r8, r2
 8003f94:	4699      	mov	r9, r3
 8003f96:	4623      	mov	r3, r4
 8003f98:	eb18 0303 	adds.w	r3, r8, r3
 8003f9c:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8003fa0:	462b      	mov	r3, r5
 8003fa2:	eb49 0303 	adc.w	r3, r9, r3
 8003fa6:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8003faa:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003fae:	685b      	ldr	r3, [r3, #4]
 8003fb0:	2200      	movs	r2, #0
 8003fb2:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8003fb6:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 8003fba:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 8003fbe:	460b      	mov	r3, r1
 8003fc0:	18db      	adds	r3, r3, r3
 8003fc2:	653b      	str	r3, [r7, #80]	@ 0x50
 8003fc4:	4613      	mov	r3, r2
 8003fc6:	eb42 0303 	adc.w	r3, r2, r3
 8003fca:	657b      	str	r3, [r7, #84]	@ 0x54
 8003fcc:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 8003fd0:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8003fd4:	f7fc f97c 	bl	80002d0 <__aeabi_uldivmod>
 8003fd8:	4602      	mov	r2, r0
 8003fda:	460b      	mov	r3, r1
 8003fdc:	4b61      	ldr	r3, [pc, #388]	@ (8004164 <UART_SetConfig+0x2d4>)
 8003fde:	fba3 2302 	umull	r2, r3, r3, r2
 8003fe2:	095b      	lsrs	r3, r3, #5
 8003fe4:	011c      	lsls	r4, r3, #4
 8003fe6:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8003fea:	2200      	movs	r2, #0
 8003fec:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8003ff0:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 8003ff4:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 8003ff8:	4642      	mov	r2, r8
 8003ffa:	464b      	mov	r3, r9
 8003ffc:	1891      	adds	r1, r2, r2
 8003ffe:	64b9      	str	r1, [r7, #72]	@ 0x48
 8004000:	415b      	adcs	r3, r3
 8004002:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8004004:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8004008:	4641      	mov	r1, r8
 800400a:	eb12 0a01 	adds.w	sl, r2, r1
 800400e:	4649      	mov	r1, r9
 8004010:	eb43 0b01 	adc.w	fp, r3, r1
 8004014:	f04f 0200 	mov.w	r2, #0
 8004018:	f04f 0300 	mov.w	r3, #0
 800401c:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8004020:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8004024:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8004028:	4692      	mov	sl, r2
 800402a:	469b      	mov	fp, r3
 800402c:	4643      	mov	r3, r8
 800402e:	eb1a 0303 	adds.w	r3, sl, r3
 8004032:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8004036:	464b      	mov	r3, r9
 8004038:	eb4b 0303 	adc.w	r3, fp, r3
 800403c:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 8004040:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004044:	685b      	ldr	r3, [r3, #4]
 8004046:	2200      	movs	r2, #0
 8004048:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 800404c:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 8004050:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 8004054:	460b      	mov	r3, r1
 8004056:	18db      	adds	r3, r3, r3
 8004058:	643b      	str	r3, [r7, #64]	@ 0x40
 800405a:	4613      	mov	r3, r2
 800405c:	eb42 0303 	adc.w	r3, r2, r3
 8004060:	647b      	str	r3, [r7, #68]	@ 0x44
 8004062:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8004066:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 800406a:	f7fc f931 	bl	80002d0 <__aeabi_uldivmod>
 800406e:	4602      	mov	r2, r0
 8004070:	460b      	mov	r3, r1
 8004072:	4611      	mov	r1, r2
 8004074:	4b3b      	ldr	r3, [pc, #236]	@ (8004164 <UART_SetConfig+0x2d4>)
 8004076:	fba3 2301 	umull	r2, r3, r3, r1
 800407a:	095b      	lsrs	r3, r3, #5
 800407c:	2264      	movs	r2, #100	@ 0x64
 800407e:	fb02 f303 	mul.w	r3, r2, r3
 8004082:	1acb      	subs	r3, r1, r3
 8004084:	00db      	lsls	r3, r3, #3
 8004086:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 800408a:	4b36      	ldr	r3, [pc, #216]	@ (8004164 <UART_SetConfig+0x2d4>)
 800408c:	fba3 2302 	umull	r2, r3, r3, r2
 8004090:	095b      	lsrs	r3, r3, #5
 8004092:	005b      	lsls	r3, r3, #1
 8004094:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 8004098:	441c      	add	r4, r3
 800409a:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 800409e:	2200      	movs	r2, #0
 80040a0:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 80040a4:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 80040a8:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 80040ac:	4642      	mov	r2, r8
 80040ae:	464b      	mov	r3, r9
 80040b0:	1891      	adds	r1, r2, r2
 80040b2:	63b9      	str	r1, [r7, #56]	@ 0x38
 80040b4:	415b      	adcs	r3, r3
 80040b6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80040b8:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 80040bc:	4641      	mov	r1, r8
 80040be:	1851      	adds	r1, r2, r1
 80040c0:	6339      	str	r1, [r7, #48]	@ 0x30
 80040c2:	4649      	mov	r1, r9
 80040c4:	414b      	adcs	r3, r1
 80040c6:	637b      	str	r3, [r7, #52]	@ 0x34
 80040c8:	f04f 0200 	mov.w	r2, #0
 80040cc:	f04f 0300 	mov.w	r3, #0
 80040d0:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 80040d4:	4659      	mov	r1, fp
 80040d6:	00cb      	lsls	r3, r1, #3
 80040d8:	4651      	mov	r1, sl
 80040da:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80040de:	4651      	mov	r1, sl
 80040e0:	00ca      	lsls	r2, r1, #3
 80040e2:	4610      	mov	r0, r2
 80040e4:	4619      	mov	r1, r3
 80040e6:	4603      	mov	r3, r0
 80040e8:	4642      	mov	r2, r8
 80040ea:	189b      	adds	r3, r3, r2
 80040ec:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80040f0:	464b      	mov	r3, r9
 80040f2:	460a      	mov	r2, r1
 80040f4:	eb42 0303 	adc.w	r3, r2, r3
 80040f8:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80040fc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004100:	685b      	ldr	r3, [r3, #4]
 8004102:	2200      	movs	r2, #0
 8004104:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8004108:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 800410c:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 8004110:	460b      	mov	r3, r1
 8004112:	18db      	adds	r3, r3, r3
 8004114:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004116:	4613      	mov	r3, r2
 8004118:	eb42 0303 	adc.w	r3, r2, r3
 800411c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800411e:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8004122:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 8004126:	f7fc f8d3 	bl	80002d0 <__aeabi_uldivmod>
 800412a:	4602      	mov	r2, r0
 800412c:	460b      	mov	r3, r1
 800412e:	4b0d      	ldr	r3, [pc, #52]	@ (8004164 <UART_SetConfig+0x2d4>)
 8004130:	fba3 1302 	umull	r1, r3, r3, r2
 8004134:	095b      	lsrs	r3, r3, #5
 8004136:	2164      	movs	r1, #100	@ 0x64
 8004138:	fb01 f303 	mul.w	r3, r1, r3
 800413c:	1ad3      	subs	r3, r2, r3
 800413e:	00db      	lsls	r3, r3, #3
 8004140:	3332      	adds	r3, #50	@ 0x32
 8004142:	4a08      	ldr	r2, [pc, #32]	@ (8004164 <UART_SetConfig+0x2d4>)
 8004144:	fba2 2303 	umull	r2, r3, r2, r3
 8004148:	095b      	lsrs	r3, r3, #5
 800414a:	f003 0207 	and.w	r2, r3, #7
 800414e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004152:	681b      	ldr	r3, [r3, #0]
 8004154:	4422      	add	r2, r4
 8004156:	609a      	str	r2, [r3, #8]
 8004158:	e106      	b.n	8004368 <UART_SetConfig+0x4d8>
 800415a:	bf00      	nop
 800415c:	40011000 	.word	0x40011000
 8004160:	40011400 	.word	0x40011400
 8004164:	51eb851f 	.word	0x51eb851f
 8004168:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 800416c:	2200      	movs	r2, #0
 800416e:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8004172:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 8004176:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 800417a:	4642      	mov	r2, r8
 800417c:	464b      	mov	r3, r9
 800417e:	1891      	adds	r1, r2, r2
 8004180:	6239      	str	r1, [r7, #32]
 8004182:	415b      	adcs	r3, r3
 8004184:	627b      	str	r3, [r7, #36]	@ 0x24
 8004186:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800418a:	4641      	mov	r1, r8
 800418c:	1854      	adds	r4, r2, r1
 800418e:	4649      	mov	r1, r9
 8004190:	eb43 0501 	adc.w	r5, r3, r1
 8004194:	f04f 0200 	mov.w	r2, #0
 8004198:	f04f 0300 	mov.w	r3, #0
 800419c:	00eb      	lsls	r3, r5, #3
 800419e:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 80041a2:	00e2      	lsls	r2, r4, #3
 80041a4:	4614      	mov	r4, r2
 80041a6:	461d      	mov	r5, r3
 80041a8:	4643      	mov	r3, r8
 80041aa:	18e3      	adds	r3, r4, r3
 80041ac:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 80041b0:	464b      	mov	r3, r9
 80041b2:	eb45 0303 	adc.w	r3, r5, r3
 80041b6:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 80041ba:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80041be:	685b      	ldr	r3, [r3, #4]
 80041c0:	2200      	movs	r2, #0
 80041c2:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80041c6:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 80041ca:	f04f 0200 	mov.w	r2, #0
 80041ce:	f04f 0300 	mov.w	r3, #0
 80041d2:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 80041d6:	4629      	mov	r1, r5
 80041d8:	008b      	lsls	r3, r1, #2
 80041da:	4621      	mov	r1, r4
 80041dc:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80041e0:	4621      	mov	r1, r4
 80041e2:	008a      	lsls	r2, r1, #2
 80041e4:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 80041e8:	f7fc f872 	bl	80002d0 <__aeabi_uldivmod>
 80041ec:	4602      	mov	r2, r0
 80041ee:	460b      	mov	r3, r1
 80041f0:	4b60      	ldr	r3, [pc, #384]	@ (8004374 <UART_SetConfig+0x4e4>)
 80041f2:	fba3 2302 	umull	r2, r3, r3, r2
 80041f6:	095b      	lsrs	r3, r3, #5
 80041f8:	011c      	lsls	r4, r3, #4
 80041fa:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80041fe:	2200      	movs	r2, #0
 8004200:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8004204:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8004208:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 800420c:	4642      	mov	r2, r8
 800420e:	464b      	mov	r3, r9
 8004210:	1891      	adds	r1, r2, r2
 8004212:	61b9      	str	r1, [r7, #24]
 8004214:	415b      	adcs	r3, r3
 8004216:	61fb      	str	r3, [r7, #28]
 8004218:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800421c:	4641      	mov	r1, r8
 800421e:	1851      	adds	r1, r2, r1
 8004220:	6139      	str	r1, [r7, #16]
 8004222:	4649      	mov	r1, r9
 8004224:	414b      	adcs	r3, r1
 8004226:	617b      	str	r3, [r7, #20]
 8004228:	f04f 0200 	mov.w	r2, #0
 800422c:	f04f 0300 	mov.w	r3, #0
 8004230:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8004234:	4659      	mov	r1, fp
 8004236:	00cb      	lsls	r3, r1, #3
 8004238:	4651      	mov	r1, sl
 800423a:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800423e:	4651      	mov	r1, sl
 8004240:	00ca      	lsls	r2, r1, #3
 8004242:	4610      	mov	r0, r2
 8004244:	4619      	mov	r1, r3
 8004246:	4603      	mov	r3, r0
 8004248:	4642      	mov	r2, r8
 800424a:	189b      	adds	r3, r3, r2
 800424c:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8004250:	464b      	mov	r3, r9
 8004252:	460a      	mov	r2, r1
 8004254:	eb42 0303 	adc.w	r3, r2, r3
 8004258:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 800425c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004260:	685b      	ldr	r3, [r3, #4]
 8004262:	2200      	movs	r2, #0
 8004264:	67bb      	str	r3, [r7, #120]	@ 0x78
 8004266:	67fa      	str	r2, [r7, #124]	@ 0x7c
 8004268:	f04f 0200 	mov.w	r2, #0
 800426c:	f04f 0300 	mov.w	r3, #0
 8004270:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 8004274:	4649      	mov	r1, r9
 8004276:	008b      	lsls	r3, r1, #2
 8004278:	4641      	mov	r1, r8
 800427a:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800427e:	4641      	mov	r1, r8
 8004280:	008a      	lsls	r2, r1, #2
 8004282:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 8004286:	f7fc f823 	bl	80002d0 <__aeabi_uldivmod>
 800428a:	4602      	mov	r2, r0
 800428c:	460b      	mov	r3, r1
 800428e:	4611      	mov	r1, r2
 8004290:	4b38      	ldr	r3, [pc, #224]	@ (8004374 <UART_SetConfig+0x4e4>)
 8004292:	fba3 2301 	umull	r2, r3, r3, r1
 8004296:	095b      	lsrs	r3, r3, #5
 8004298:	2264      	movs	r2, #100	@ 0x64
 800429a:	fb02 f303 	mul.w	r3, r2, r3
 800429e:	1acb      	subs	r3, r1, r3
 80042a0:	011b      	lsls	r3, r3, #4
 80042a2:	3332      	adds	r3, #50	@ 0x32
 80042a4:	4a33      	ldr	r2, [pc, #204]	@ (8004374 <UART_SetConfig+0x4e4>)
 80042a6:	fba2 2303 	umull	r2, r3, r2, r3
 80042aa:	095b      	lsrs	r3, r3, #5
 80042ac:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 80042b0:	441c      	add	r4, r3
 80042b2:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80042b6:	2200      	movs	r2, #0
 80042b8:	673b      	str	r3, [r7, #112]	@ 0x70
 80042ba:	677a      	str	r2, [r7, #116]	@ 0x74
 80042bc:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 80042c0:	4642      	mov	r2, r8
 80042c2:	464b      	mov	r3, r9
 80042c4:	1891      	adds	r1, r2, r2
 80042c6:	60b9      	str	r1, [r7, #8]
 80042c8:	415b      	adcs	r3, r3
 80042ca:	60fb      	str	r3, [r7, #12]
 80042cc:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 80042d0:	4641      	mov	r1, r8
 80042d2:	1851      	adds	r1, r2, r1
 80042d4:	6039      	str	r1, [r7, #0]
 80042d6:	4649      	mov	r1, r9
 80042d8:	414b      	adcs	r3, r1
 80042da:	607b      	str	r3, [r7, #4]
 80042dc:	f04f 0200 	mov.w	r2, #0
 80042e0:	f04f 0300 	mov.w	r3, #0
 80042e4:	e9d7 ab00 	ldrd	sl, fp, [r7]
 80042e8:	4659      	mov	r1, fp
 80042ea:	00cb      	lsls	r3, r1, #3
 80042ec:	4651      	mov	r1, sl
 80042ee:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80042f2:	4651      	mov	r1, sl
 80042f4:	00ca      	lsls	r2, r1, #3
 80042f6:	4610      	mov	r0, r2
 80042f8:	4619      	mov	r1, r3
 80042fa:	4603      	mov	r3, r0
 80042fc:	4642      	mov	r2, r8
 80042fe:	189b      	adds	r3, r3, r2
 8004300:	66bb      	str	r3, [r7, #104]	@ 0x68
 8004302:	464b      	mov	r3, r9
 8004304:	460a      	mov	r2, r1
 8004306:	eb42 0303 	adc.w	r3, r2, r3
 800430a:	66fb      	str	r3, [r7, #108]	@ 0x6c
 800430c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004310:	685b      	ldr	r3, [r3, #4]
 8004312:	2200      	movs	r2, #0
 8004314:	663b      	str	r3, [r7, #96]	@ 0x60
 8004316:	667a      	str	r2, [r7, #100]	@ 0x64
 8004318:	f04f 0200 	mov.w	r2, #0
 800431c:	f04f 0300 	mov.w	r3, #0
 8004320:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 8004324:	4649      	mov	r1, r9
 8004326:	008b      	lsls	r3, r1, #2
 8004328:	4641      	mov	r1, r8
 800432a:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800432e:	4641      	mov	r1, r8
 8004330:	008a      	lsls	r2, r1, #2
 8004332:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 8004336:	f7fb ffcb 	bl	80002d0 <__aeabi_uldivmod>
 800433a:	4602      	mov	r2, r0
 800433c:	460b      	mov	r3, r1
 800433e:	4b0d      	ldr	r3, [pc, #52]	@ (8004374 <UART_SetConfig+0x4e4>)
 8004340:	fba3 1302 	umull	r1, r3, r3, r2
 8004344:	095b      	lsrs	r3, r3, #5
 8004346:	2164      	movs	r1, #100	@ 0x64
 8004348:	fb01 f303 	mul.w	r3, r1, r3
 800434c:	1ad3      	subs	r3, r2, r3
 800434e:	011b      	lsls	r3, r3, #4
 8004350:	3332      	adds	r3, #50	@ 0x32
 8004352:	4a08      	ldr	r2, [pc, #32]	@ (8004374 <UART_SetConfig+0x4e4>)
 8004354:	fba2 2303 	umull	r2, r3, r2, r3
 8004358:	095b      	lsrs	r3, r3, #5
 800435a:	f003 020f 	and.w	r2, r3, #15
 800435e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004362:	681b      	ldr	r3, [r3, #0]
 8004364:	4422      	add	r2, r4
 8004366:	609a      	str	r2, [r3, #8]
 8004368:	bf00      	nop
 800436a:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 800436e:	46bd      	mov	sp, r7
 8004370:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8004374:	51eb851f 	.word	0x51eb851f

08004378 <std>:
 8004378:	2300      	movs	r3, #0
 800437a:	b510      	push	{r4, lr}
 800437c:	4604      	mov	r4, r0
 800437e:	e9c0 3300 	strd	r3, r3, [r0]
 8004382:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8004386:	6083      	str	r3, [r0, #8]
 8004388:	8181      	strh	r1, [r0, #12]
 800438a:	6643      	str	r3, [r0, #100]	@ 0x64
 800438c:	81c2      	strh	r2, [r0, #14]
 800438e:	6183      	str	r3, [r0, #24]
 8004390:	4619      	mov	r1, r3
 8004392:	2208      	movs	r2, #8
 8004394:	305c      	adds	r0, #92	@ 0x5c
 8004396:	f000 fa2d 	bl	80047f4 <memset>
 800439a:	4b0d      	ldr	r3, [pc, #52]	@ (80043d0 <std+0x58>)
 800439c:	6263      	str	r3, [r4, #36]	@ 0x24
 800439e:	4b0d      	ldr	r3, [pc, #52]	@ (80043d4 <std+0x5c>)
 80043a0:	62a3      	str	r3, [r4, #40]	@ 0x28
 80043a2:	4b0d      	ldr	r3, [pc, #52]	@ (80043d8 <std+0x60>)
 80043a4:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80043a6:	4b0d      	ldr	r3, [pc, #52]	@ (80043dc <std+0x64>)
 80043a8:	6323      	str	r3, [r4, #48]	@ 0x30
 80043aa:	4b0d      	ldr	r3, [pc, #52]	@ (80043e0 <std+0x68>)
 80043ac:	6224      	str	r4, [r4, #32]
 80043ae:	429c      	cmp	r4, r3
 80043b0:	d006      	beq.n	80043c0 <std+0x48>
 80043b2:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80043b6:	4294      	cmp	r4, r2
 80043b8:	d002      	beq.n	80043c0 <std+0x48>
 80043ba:	33d0      	adds	r3, #208	@ 0xd0
 80043bc:	429c      	cmp	r4, r3
 80043be:	d105      	bne.n	80043cc <std+0x54>
 80043c0:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80043c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80043c8:	f000 ba8c 	b.w	80048e4 <__retarget_lock_init_recursive>
 80043cc:	bd10      	pop	{r4, pc}
 80043ce:	bf00      	nop
 80043d0:	08004645 	.word	0x08004645
 80043d4:	08004667 	.word	0x08004667
 80043d8:	0800469f 	.word	0x0800469f
 80043dc:	080046c3 	.word	0x080046c3
 80043e0:	200002b4 	.word	0x200002b4

080043e4 <stdio_exit_handler>:
 80043e4:	4a02      	ldr	r2, [pc, #8]	@ (80043f0 <stdio_exit_handler+0xc>)
 80043e6:	4903      	ldr	r1, [pc, #12]	@ (80043f4 <stdio_exit_handler+0x10>)
 80043e8:	4803      	ldr	r0, [pc, #12]	@ (80043f8 <stdio_exit_handler+0x14>)
 80043ea:	f000 b869 	b.w	80044c0 <_fwalk_sglue>
 80043ee:	bf00      	nop
 80043f0:	2000001c 	.word	0x2000001c
 80043f4:	08005435 	.word	0x08005435
 80043f8:	2000002c 	.word	0x2000002c

080043fc <cleanup_stdio>:
 80043fc:	6841      	ldr	r1, [r0, #4]
 80043fe:	4b0c      	ldr	r3, [pc, #48]	@ (8004430 <cleanup_stdio+0x34>)
 8004400:	4299      	cmp	r1, r3
 8004402:	b510      	push	{r4, lr}
 8004404:	4604      	mov	r4, r0
 8004406:	d001      	beq.n	800440c <cleanup_stdio+0x10>
 8004408:	f001 f814 	bl	8005434 <_fflush_r>
 800440c:	68a1      	ldr	r1, [r4, #8]
 800440e:	4b09      	ldr	r3, [pc, #36]	@ (8004434 <cleanup_stdio+0x38>)
 8004410:	4299      	cmp	r1, r3
 8004412:	d002      	beq.n	800441a <cleanup_stdio+0x1e>
 8004414:	4620      	mov	r0, r4
 8004416:	f001 f80d 	bl	8005434 <_fflush_r>
 800441a:	68e1      	ldr	r1, [r4, #12]
 800441c:	4b06      	ldr	r3, [pc, #24]	@ (8004438 <cleanup_stdio+0x3c>)
 800441e:	4299      	cmp	r1, r3
 8004420:	d004      	beq.n	800442c <cleanup_stdio+0x30>
 8004422:	4620      	mov	r0, r4
 8004424:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004428:	f001 b804 	b.w	8005434 <_fflush_r>
 800442c:	bd10      	pop	{r4, pc}
 800442e:	bf00      	nop
 8004430:	200002b4 	.word	0x200002b4
 8004434:	2000031c 	.word	0x2000031c
 8004438:	20000384 	.word	0x20000384

0800443c <global_stdio_init.part.0>:
 800443c:	b510      	push	{r4, lr}
 800443e:	4b0b      	ldr	r3, [pc, #44]	@ (800446c <global_stdio_init.part.0+0x30>)
 8004440:	4c0b      	ldr	r4, [pc, #44]	@ (8004470 <global_stdio_init.part.0+0x34>)
 8004442:	4a0c      	ldr	r2, [pc, #48]	@ (8004474 <global_stdio_init.part.0+0x38>)
 8004444:	601a      	str	r2, [r3, #0]
 8004446:	4620      	mov	r0, r4
 8004448:	2200      	movs	r2, #0
 800444a:	2104      	movs	r1, #4
 800444c:	f7ff ff94 	bl	8004378 <std>
 8004450:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8004454:	2201      	movs	r2, #1
 8004456:	2109      	movs	r1, #9
 8004458:	f7ff ff8e 	bl	8004378 <std>
 800445c:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8004460:	2202      	movs	r2, #2
 8004462:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004466:	2112      	movs	r1, #18
 8004468:	f7ff bf86 	b.w	8004378 <std>
 800446c:	200003ec 	.word	0x200003ec
 8004470:	200002b4 	.word	0x200002b4
 8004474:	080043e5 	.word	0x080043e5

08004478 <__sfp_lock_acquire>:
 8004478:	4801      	ldr	r0, [pc, #4]	@ (8004480 <__sfp_lock_acquire+0x8>)
 800447a:	f000 ba34 	b.w	80048e6 <__retarget_lock_acquire_recursive>
 800447e:	bf00      	nop
 8004480:	200003f5 	.word	0x200003f5

08004484 <__sfp_lock_release>:
 8004484:	4801      	ldr	r0, [pc, #4]	@ (800448c <__sfp_lock_release+0x8>)
 8004486:	f000 ba2f 	b.w	80048e8 <__retarget_lock_release_recursive>
 800448a:	bf00      	nop
 800448c:	200003f5 	.word	0x200003f5

08004490 <__sinit>:
 8004490:	b510      	push	{r4, lr}
 8004492:	4604      	mov	r4, r0
 8004494:	f7ff fff0 	bl	8004478 <__sfp_lock_acquire>
 8004498:	6a23      	ldr	r3, [r4, #32]
 800449a:	b11b      	cbz	r3, 80044a4 <__sinit+0x14>
 800449c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80044a0:	f7ff bff0 	b.w	8004484 <__sfp_lock_release>
 80044a4:	4b04      	ldr	r3, [pc, #16]	@ (80044b8 <__sinit+0x28>)
 80044a6:	6223      	str	r3, [r4, #32]
 80044a8:	4b04      	ldr	r3, [pc, #16]	@ (80044bc <__sinit+0x2c>)
 80044aa:	681b      	ldr	r3, [r3, #0]
 80044ac:	2b00      	cmp	r3, #0
 80044ae:	d1f5      	bne.n	800449c <__sinit+0xc>
 80044b0:	f7ff ffc4 	bl	800443c <global_stdio_init.part.0>
 80044b4:	e7f2      	b.n	800449c <__sinit+0xc>
 80044b6:	bf00      	nop
 80044b8:	080043fd 	.word	0x080043fd
 80044bc:	200003ec 	.word	0x200003ec

080044c0 <_fwalk_sglue>:
 80044c0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80044c4:	4607      	mov	r7, r0
 80044c6:	4688      	mov	r8, r1
 80044c8:	4614      	mov	r4, r2
 80044ca:	2600      	movs	r6, #0
 80044cc:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80044d0:	f1b9 0901 	subs.w	r9, r9, #1
 80044d4:	d505      	bpl.n	80044e2 <_fwalk_sglue+0x22>
 80044d6:	6824      	ldr	r4, [r4, #0]
 80044d8:	2c00      	cmp	r4, #0
 80044da:	d1f7      	bne.n	80044cc <_fwalk_sglue+0xc>
 80044dc:	4630      	mov	r0, r6
 80044de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80044e2:	89ab      	ldrh	r3, [r5, #12]
 80044e4:	2b01      	cmp	r3, #1
 80044e6:	d907      	bls.n	80044f8 <_fwalk_sglue+0x38>
 80044e8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80044ec:	3301      	adds	r3, #1
 80044ee:	d003      	beq.n	80044f8 <_fwalk_sglue+0x38>
 80044f0:	4629      	mov	r1, r5
 80044f2:	4638      	mov	r0, r7
 80044f4:	47c0      	blx	r8
 80044f6:	4306      	orrs	r6, r0
 80044f8:	3568      	adds	r5, #104	@ 0x68
 80044fa:	e7e9      	b.n	80044d0 <_fwalk_sglue+0x10>

080044fc <iprintf>:
 80044fc:	b40f      	push	{r0, r1, r2, r3}
 80044fe:	b507      	push	{r0, r1, r2, lr}
 8004500:	4906      	ldr	r1, [pc, #24]	@ (800451c <iprintf+0x20>)
 8004502:	ab04      	add	r3, sp, #16
 8004504:	6808      	ldr	r0, [r1, #0]
 8004506:	f853 2b04 	ldr.w	r2, [r3], #4
 800450a:	6881      	ldr	r1, [r0, #8]
 800450c:	9301      	str	r3, [sp, #4]
 800450e:	f000 fc67 	bl	8004de0 <_vfiprintf_r>
 8004512:	b003      	add	sp, #12
 8004514:	f85d eb04 	ldr.w	lr, [sp], #4
 8004518:	b004      	add	sp, #16
 800451a:	4770      	bx	lr
 800451c:	20000028 	.word	0x20000028

08004520 <_puts_r>:
 8004520:	6a03      	ldr	r3, [r0, #32]
 8004522:	b570      	push	{r4, r5, r6, lr}
 8004524:	6884      	ldr	r4, [r0, #8]
 8004526:	4605      	mov	r5, r0
 8004528:	460e      	mov	r6, r1
 800452a:	b90b      	cbnz	r3, 8004530 <_puts_r+0x10>
 800452c:	f7ff ffb0 	bl	8004490 <__sinit>
 8004530:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8004532:	07db      	lsls	r3, r3, #31
 8004534:	d405      	bmi.n	8004542 <_puts_r+0x22>
 8004536:	89a3      	ldrh	r3, [r4, #12]
 8004538:	0598      	lsls	r0, r3, #22
 800453a:	d402      	bmi.n	8004542 <_puts_r+0x22>
 800453c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800453e:	f000 f9d2 	bl	80048e6 <__retarget_lock_acquire_recursive>
 8004542:	89a3      	ldrh	r3, [r4, #12]
 8004544:	0719      	lsls	r1, r3, #28
 8004546:	d502      	bpl.n	800454e <_puts_r+0x2e>
 8004548:	6923      	ldr	r3, [r4, #16]
 800454a:	2b00      	cmp	r3, #0
 800454c:	d135      	bne.n	80045ba <_puts_r+0x9a>
 800454e:	4621      	mov	r1, r4
 8004550:	4628      	mov	r0, r5
 8004552:	f000 f8f9 	bl	8004748 <__swsetup_r>
 8004556:	b380      	cbz	r0, 80045ba <_puts_r+0x9a>
 8004558:	f04f 35ff 	mov.w	r5, #4294967295
 800455c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800455e:	07da      	lsls	r2, r3, #31
 8004560:	d405      	bmi.n	800456e <_puts_r+0x4e>
 8004562:	89a3      	ldrh	r3, [r4, #12]
 8004564:	059b      	lsls	r3, r3, #22
 8004566:	d402      	bmi.n	800456e <_puts_r+0x4e>
 8004568:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800456a:	f000 f9bd 	bl	80048e8 <__retarget_lock_release_recursive>
 800456e:	4628      	mov	r0, r5
 8004570:	bd70      	pop	{r4, r5, r6, pc}
 8004572:	2b00      	cmp	r3, #0
 8004574:	da04      	bge.n	8004580 <_puts_r+0x60>
 8004576:	69a2      	ldr	r2, [r4, #24]
 8004578:	429a      	cmp	r2, r3
 800457a:	dc17      	bgt.n	80045ac <_puts_r+0x8c>
 800457c:	290a      	cmp	r1, #10
 800457e:	d015      	beq.n	80045ac <_puts_r+0x8c>
 8004580:	6823      	ldr	r3, [r4, #0]
 8004582:	1c5a      	adds	r2, r3, #1
 8004584:	6022      	str	r2, [r4, #0]
 8004586:	7019      	strb	r1, [r3, #0]
 8004588:	68a3      	ldr	r3, [r4, #8]
 800458a:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800458e:	3b01      	subs	r3, #1
 8004590:	60a3      	str	r3, [r4, #8]
 8004592:	2900      	cmp	r1, #0
 8004594:	d1ed      	bne.n	8004572 <_puts_r+0x52>
 8004596:	2b00      	cmp	r3, #0
 8004598:	da11      	bge.n	80045be <_puts_r+0x9e>
 800459a:	4622      	mov	r2, r4
 800459c:	210a      	movs	r1, #10
 800459e:	4628      	mov	r0, r5
 80045a0:	f000 f893 	bl	80046ca <__swbuf_r>
 80045a4:	3001      	adds	r0, #1
 80045a6:	d0d7      	beq.n	8004558 <_puts_r+0x38>
 80045a8:	250a      	movs	r5, #10
 80045aa:	e7d7      	b.n	800455c <_puts_r+0x3c>
 80045ac:	4622      	mov	r2, r4
 80045ae:	4628      	mov	r0, r5
 80045b0:	f000 f88b 	bl	80046ca <__swbuf_r>
 80045b4:	3001      	adds	r0, #1
 80045b6:	d1e7      	bne.n	8004588 <_puts_r+0x68>
 80045b8:	e7ce      	b.n	8004558 <_puts_r+0x38>
 80045ba:	3e01      	subs	r6, #1
 80045bc:	e7e4      	b.n	8004588 <_puts_r+0x68>
 80045be:	6823      	ldr	r3, [r4, #0]
 80045c0:	1c5a      	adds	r2, r3, #1
 80045c2:	6022      	str	r2, [r4, #0]
 80045c4:	220a      	movs	r2, #10
 80045c6:	701a      	strb	r2, [r3, #0]
 80045c8:	e7ee      	b.n	80045a8 <_puts_r+0x88>
	...

080045cc <puts>:
 80045cc:	4b02      	ldr	r3, [pc, #8]	@ (80045d8 <puts+0xc>)
 80045ce:	4601      	mov	r1, r0
 80045d0:	6818      	ldr	r0, [r3, #0]
 80045d2:	f7ff bfa5 	b.w	8004520 <_puts_r>
 80045d6:	bf00      	nop
 80045d8:	20000028 	.word	0x20000028

080045dc <sniprintf>:
 80045dc:	b40c      	push	{r2, r3}
 80045de:	b530      	push	{r4, r5, lr}
 80045e0:	4b17      	ldr	r3, [pc, #92]	@ (8004640 <sniprintf+0x64>)
 80045e2:	1e0c      	subs	r4, r1, #0
 80045e4:	681d      	ldr	r5, [r3, #0]
 80045e6:	b09d      	sub	sp, #116	@ 0x74
 80045e8:	da08      	bge.n	80045fc <sniprintf+0x20>
 80045ea:	238b      	movs	r3, #139	@ 0x8b
 80045ec:	602b      	str	r3, [r5, #0]
 80045ee:	f04f 30ff 	mov.w	r0, #4294967295
 80045f2:	b01d      	add	sp, #116	@ 0x74
 80045f4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80045f8:	b002      	add	sp, #8
 80045fa:	4770      	bx	lr
 80045fc:	f44f 7302 	mov.w	r3, #520	@ 0x208
 8004600:	f8ad 3014 	strh.w	r3, [sp, #20]
 8004604:	bf14      	ite	ne
 8004606:	f104 33ff 	addne.w	r3, r4, #4294967295
 800460a:	4623      	moveq	r3, r4
 800460c:	9304      	str	r3, [sp, #16]
 800460e:	9307      	str	r3, [sp, #28]
 8004610:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8004614:	9002      	str	r0, [sp, #8]
 8004616:	9006      	str	r0, [sp, #24]
 8004618:	f8ad 3016 	strh.w	r3, [sp, #22]
 800461c:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800461e:	ab21      	add	r3, sp, #132	@ 0x84
 8004620:	a902      	add	r1, sp, #8
 8004622:	4628      	mov	r0, r5
 8004624:	9301      	str	r3, [sp, #4]
 8004626:	f000 fab5 	bl	8004b94 <_svfiprintf_r>
 800462a:	1c43      	adds	r3, r0, #1
 800462c:	bfbc      	itt	lt
 800462e:	238b      	movlt	r3, #139	@ 0x8b
 8004630:	602b      	strlt	r3, [r5, #0]
 8004632:	2c00      	cmp	r4, #0
 8004634:	d0dd      	beq.n	80045f2 <sniprintf+0x16>
 8004636:	9b02      	ldr	r3, [sp, #8]
 8004638:	2200      	movs	r2, #0
 800463a:	701a      	strb	r2, [r3, #0]
 800463c:	e7d9      	b.n	80045f2 <sniprintf+0x16>
 800463e:	bf00      	nop
 8004640:	20000028 	.word	0x20000028

08004644 <__sread>:
 8004644:	b510      	push	{r4, lr}
 8004646:	460c      	mov	r4, r1
 8004648:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800464c:	f000 f8fc 	bl	8004848 <_read_r>
 8004650:	2800      	cmp	r0, #0
 8004652:	bfab      	itete	ge
 8004654:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8004656:	89a3      	ldrhlt	r3, [r4, #12]
 8004658:	181b      	addge	r3, r3, r0
 800465a:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800465e:	bfac      	ite	ge
 8004660:	6563      	strge	r3, [r4, #84]	@ 0x54
 8004662:	81a3      	strhlt	r3, [r4, #12]
 8004664:	bd10      	pop	{r4, pc}

08004666 <__swrite>:
 8004666:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800466a:	461f      	mov	r7, r3
 800466c:	898b      	ldrh	r3, [r1, #12]
 800466e:	05db      	lsls	r3, r3, #23
 8004670:	4605      	mov	r5, r0
 8004672:	460c      	mov	r4, r1
 8004674:	4616      	mov	r6, r2
 8004676:	d505      	bpl.n	8004684 <__swrite+0x1e>
 8004678:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800467c:	2302      	movs	r3, #2
 800467e:	2200      	movs	r2, #0
 8004680:	f000 f8d0 	bl	8004824 <_lseek_r>
 8004684:	89a3      	ldrh	r3, [r4, #12]
 8004686:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800468a:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800468e:	81a3      	strh	r3, [r4, #12]
 8004690:	4632      	mov	r2, r6
 8004692:	463b      	mov	r3, r7
 8004694:	4628      	mov	r0, r5
 8004696:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800469a:	f000 b8e7 	b.w	800486c <_write_r>

0800469e <__sseek>:
 800469e:	b510      	push	{r4, lr}
 80046a0:	460c      	mov	r4, r1
 80046a2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80046a6:	f000 f8bd 	bl	8004824 <_lseek_r>
 80046aa:	1c43      	adds	r3, r0, #1
 80046ac:	89a3      	ldrh	r3, [r4, #12]
 80046ae:	bf15      	itete	ne
 80046b0:	6560      	strne	r0, [r4, #84]	@ 0x54
 80046b2:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80046b6:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80046ba:	81a3      	strheq	r3, [r4, #12]
 80046bc:	bf18      	it	ne
 80046be:	81a3      	strhne	r3, [r4, #12]
 80046c0:	bd10      	pop	{r4, pc}

080046c2 <__sclose>:
 80046c2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80046c6:	f000 b89d 	b.w	8004804 <_close_r>

080046ca <__swbuf_r>:
 80046ca:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80046cc:	460e      	mov	r6, r1
 80046ce:	4614      	mov	r4, r2
 80046d0:	4605      	mov	r5, r0
 80046d2:	b118      	cbz	r0, 80046dc <__swbuf_r+0x12>
 80046d4:	6a03      	ldr	r3, [r0, #32]
 80046d6:	b90b      	cbnz	r3, 80046dc <__swbuf_r+0x12>
 80046d8:	f7ff feda 	bl	8004490 <__sinit>
 80046dc:	69a3      	ldr	r3, [r4, #24]
 80046de:	60a3      	str	r3, [r4, #8]
 80046e0:	89a3      	ldrh	r3, [r4, #12]
 80046e2:	071a      	lsls	r2, r3, #28
 80046e4:	d501      	bpl.n	80046ea <__swbuf_r+0x20>
 80046e6:	6923      	ldr	r3, [r4, #16]
 80046e8:	b943      	cbnz	r3, 80046fc <__swbuf_r+0x32>
 80046ea:	4621      	mov	r1, r4
 80046ec:	4628      	mov	r0, r5
 80046ee:	f000 f82b 	bl	8004748 <__swsetup_r>
 80046f2:	b118      	cbz	r0, 80046fc <__swbuf_r+0x32>
 80046f4:	f04f 37ff 	mov.w	r7, #4294967295
 80046f8:	4638      	mov	r0, r7
 80046fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80046fc:	6823      	ldr	r3, [r4, #0]
 80046fe:	6922      	ldr	r2, [r4, #16]
 8004700:	1a98      	subs	r0, r3, r2
 8004702:	6963      	ldr	r3, [r4, #20]
 8004704:	b2f6      	uxtb	r6, r6
 8004706:	4283      	cmp	r3, r0
 8004708:	4637      	mov	r7, r6
 800470a:	dc05      	bgt.n	8004718 <__swbuf_r+0x4e>
 800470c:	4621      	mov	r1, r4
 800470e:	4628      	mov	r0, r5
 8004710:	f000 fe90 	bl	8005434 <_fflush_r>
 8004714:	2800      	cmp	r0, #0
 8004716:	d1ed      	bne.n	80046f4 <__swbuf_r+0x2a>
 8004718:	68a3      	ldr	r3, [r4, #8]
 800471a:	3b01      	subs	r3, #1
 800471c:	60a3      	str	r3, [r4, #8]
 800471e:	6823      	ldr	r3, [r4, #0]
 8004720:	1c5a      	adds	r2, r3, #1
 8004722:	6022      	str	r2, [r4, #0]
 8004724:	701e      	strb	r6, [r3, #0]
 8004726:	6962      	ldr	r2, [r4, #20]
 8004728:	1c43      	adds	r3, r0, #1
 800472a:	429a      	cmp	r2, r3
 800472c:	d004      	beq.n	8004738 <__swbuf_r+0x6e>
 800472e:	89a3      	ldrh	r3, [r4, #12]
 8004730:	07db      	lsls	r3, r3, #31
 8004732:	d5e1      	bpl.n	80046f8 <__swbuf_r+0x2e>
 8004734:	2e0a      	cmp	r6, #10
 8004736:	d1df      	bne.n	80046f8 <__swbuf_r+0x2e>
 8004738:	4621      	mov	r1, r4
 800473a:	4628      	mov	r0, r5
 800473c:	f000 fe7a 	bl	8005434 <_fflush_r>
 8004740:	2800      	cmp	r0, #0
 8004742:	d0d9      	beq.n	80046f8 <__swbuf_r+0x2e>
 8004744:	e7d6      	b.n	80046f4 <__swbuf_r+0x2a>
	...

08004748 <__swsetup_r>:
 8004748:	b538      	push	{r3, r4, r5, lr}
 800474a:	4b29      	ldr	r3, [pc, #164]	@ (80047f0 <__swsetup_r+0xa8>)
 800474c:	4605      	mov	r5, r0
 800474e:	6818      	ldr	r0, [r3, #0]
 8004750:	460c      	mov	r4, r1
 8004752:	b118      	cbz	r0, 800475c <__swsetup_r+0x14>
 8004754:	6a03      	ldr	r3, [r0, #32]
 8004756:	b90b      	cbnz	r3, 800475c <__swsetup_r+0x14>
 8004758:	f7ff fe9a 	bl	8004490 <__sinit>
 800475c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004760:	0719      	lsls	r1, r3, #28
 8004762:	d422      	bmi.n	80047aa <__swsetup_r+0x62>
 8004764:	06da      	lsls	r2, r3, #27
 8004766:	d407      	bmi.n	8004778 <__swsetup_r+0x30>
 8004768:	2209      	movs	r2, #9
 800476a:	602a      	str	r2, [r5, #0]
 800476c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8004770:	81a3      	strh	r3, [r4, #12]
 8004772:	f04f 30ff 	mov.w	r0, #4294967295
 8004776:	e033      	b.n	80047e0 <__swsetup_r+0x98>
 8004778:	0758      	lsls	r0, r3, #29
 800477a:	d512      	bpl.n	80047a2 <__swsetup_r+0x5a>
 800477c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800477e:	b141      	cbz	r1, 8004792 <__swsetup_r+0x4a>
 8004780:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8004784:	4299      	cmp	r1, r3
 8004786:	d002      	beq.n	800478e <__swsetup_r+0x46>
 8004788:	4628      	mov	r0, r5
 800478a:	f000 f8af 	bl	80048ec <_free_r>
 800478e:	2300      	movs	r3, #0
 8004790:	6363      	str	r3, [r4, #52]	@ 0x34
 8004792:	89a3      	ldrh	r3, [r4, #12]
 8004794:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8004798:	81a3      	strh	r3, [r4, #12]
 800479a:	2300      	movs	r3, #0
 800479c:	6063      	str	r3, [r4, #4]
 800479e:	6923      	ldr	r3, [r4, #16]
 80047a0:	6023      	str	r3, [r4, #0]
 80047a2:	89a3      	ldrh	r3, [r4, #12]
 80047a4:	f043 0308 	orr.w	r3, r3, #8
 80047a8:	81a3      	strh	r3, [r4, #12]
 80047aa:	6923      	ldr	r3, [r4, #16]
 80047ac:	b94b      	cbnz	r3, 80047c2 <__swsetup_r+0x7a>
 80047ae:	89a3      	ldrh	r3, [r4, #12]
 80047b0:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80047b4:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80047b8:	d003      	beq.n	80047c2 <__swsetup_r+0x7a>
 80047ba:	4621      	mov	r1, r4
 80047bc:	4628      	mov	r0, r5
 80047be:	f000 fe87 	bl	80054d0 <__smakebuf_r>
 80047c2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80047c6:	f013 0201 	ands.w	r2, r3, #1
 80047ca:	d00a      	beq.n	80047e2 <__swsetup_r+0x9a>
 80047cc:	2200      	movs	r2, #0
 80047ce:	60a2      	str	r2, [r4, #8]
 80047d0:	6962      	ldr	r2, [r4, #20]
 80047d2:	4252      	negs	r2, r2
 80047d4:	61a2      	str	r2, [r4, #24]
 80047d6:	6922      	ldr	r2, [r4, #16]
 80047d8:	b942      	cbnz	r2, 80047ec <__swsetup_r+0xa4>
 80047da:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80047de:	d1c5      	bne.n	800476c <__swsetup_r+0x24>
 80047e0:	bd38      	pop	{r3, r4, r5, pc}
 80047e2:	0799      	lsls	r1, r3, #30
 80047e4:	bf58      	it	pl
 80047e6:	6962      	ldrpl	r2, [r4, #20]
 80047e8:	60a2      	str	r2, [r4, #8]
 80047ea:	e7f4      	b.n	80047d6 <__swsetup_r+0x8e>
 80047ec:	2000      	movs	r0, #0
 80047ee:	e7f7      	b.n	80047e0 <__swsetup_r+0x98>
 80047f0:	20000028 	.word	0x20000028

080047f4 <memset>:
 80047f4:	4402      	add	r2, r0
 80047f6:	4603      	mov	r3, r0
 80047f8:	4293      	cmp	r3, r2
 80047fa:	d100      	bne.n	80047fe <memset+0xa>
 80047fc:	4770      	bx	lr
 80047fe:	f803 1b01 	strb.w	r1, [r3], #1
 8004802:	e7f9      	b.n	80047f8 <memset+0x4>

08004804 <_close_r>:
 8004804:	b538      	push	{r3, r4, r5, lr}
 8004806:	4d06      	ldr	r5, [pc, #24]	@ (8004820 <_close_r+0x1c>)
 8004808:	2300      	movs	r3, #0
 800480a:	4604      	mov	r4, r0
 800480c:	4608      	mov	r0, r1
 800480e:	602b      	str	r3, [r5, #0]
 8004810:	f7fc fc46 	bl	80010a0 <_close>
 8004814:	1c43      	adds	r3, r0, #1
 8004816:	d102      	bne.n	800481e <_close_r+0x1a>
 8004818:	682b      	ldr	r3, [r5, #0]
 800481a:	b103      	cbz	r3, 800481e <_close_r+0x1a>
 800481c:	6023      	str	r3, [r4, #0]
 800481e:	bd38      	pop	{r3, r4, r5, pc}
 8004820:	200003f0 	.word	0x200003f0

08004824 <_lseek_r>:
 8004824:	b538      	push	{r3, r4, r5, lr}
 8004826:	4d07      	ldr	r5, [pc, #28]	@ (8004844 <_lseek_r+0x20>)
 8004828:	4604      	mov	r4, r0
 800482a:	4608      	mov	r0, r1
 800482c:	4611      	mov	r1, r2
 800482e:	2200      	movs	r2, #0
 8004830:	602a      	str	r2, [r5, #0]
 8004832:	461a      	mov	r2, r3
 8004834:	f7fc fc5b 	bl	80010ee <_lseek>
 8004838:	1c43      	adds	r3, r0, #1
 800483a:	d102      	bne.n	8004842 <_lseek_r+0x1e>
 800483c:	682b      	ldr	r3, [r5, #0]
 800483e:	b103      	cbz	r3, 8004842 <_lseek_r+0x1e>
 8004840:	6023      	str	r3, [r4, #0]
 8004842:	bd38      	pop	{r3, r4, r5, pc}
 8004844:	200003f0 	.word	0x200003f0

08004848 <_read_r>:
 8004848:	b538      	push	{r3, r4, r5, lr}
 800484a:	4d07      	ldr	r5, [pc, #28]	@ (8004868 <_read_r+0x20>)
 800484c:	4604      	mov	r4, r0
 800484e:	4608      	mov	r0, r1
 8004850:	4611      	mov	r1, r2
 8004852:	2200      	movs	r2, #0
 8004854:	602a      	str	r2, [r5, #0]
 8004856:	461a      	mov	r2, r3
 8004858:	f7fc fbe9 	bl	800102e <_read>
 800485c:	1c43      	adds	r3, r0, #1
 800485e:	d102      	bne.n	8004866 <_read_r+0x1e>
 8004860:	682b      	ldr	r3, [r5, #0]
 8004862:	b103      	cbz	r3, 8004866 <_read_r+0x1e>
 8004864:	6023      	str	r3, [r4, #0]
 8004866:	bd38      	pop	{r3, r4, r5, pc}
 8004868:	200003f0 	.word	0x200003f0

0800486c <_write_r>:
 800486c:	b538      	push	{r3, r4, r5, lr}
 800486e:	4d07      	ldr	r5, [pc, #28]	@ (800488c <_write_r+0x20>)
 8004870:	4604      	mov	r4, r0
 8004872:	4608      	mov	r0, r1
 8004874:	4611      	mov	r1, r2
 8004876:	2200      	movs	r2, #0
 8004878:	602a      	str	r2, [r5, #0]
 800487a:	461a      	mov	r2, r3
 800487c:	f7fc fbf4 	bl	8001068 <_write>
 8004880:	1c43      	adds	r3, r0, #1
 8004882:	d102      	bne.n	800488a <_write_r+0x1e>
 8004884:	682b      	ldr	r3, [r5, #0]
 8004886:	b103      	cbz	r3, 800488a <_write_r+0x1e>
 8004888:	6023      	str	r3, [r4, #0]
 800488a:	bd38      	pop	{r3, r4, r5, pc}
 800488c:	200003f0 	.word	0x200003f0

08004890 <__errno>:
 8004890:	4b01      	ldr	r3, [pc, #4]	@ (8004898 <__errno+0x8>)
 8004892:	6818      	ldr	r0, [r3, #0]
 8004894:	4770      	bx	lr
 8004896:	bf00      	nop
 8004898:	20000028 	.word	0x20000028

0800489c <__libc_init_array>:
 800489c:	b570      	push	{r4, r5, r6, lr}
 800489e:	4d0d      	ldr	r5, [pc, #52]	@ (80048d4 <__libc_init_array+0x38>)
 80048a0:	4c0d      	ldr	r4, [pc, #52]	@ (80048d8 <__libc_init_array+0x3c>)
 80048a2:	1b64      	subs	r4, r4, r5
 80048a4:	10a4      	asrs	r4, r4, #2
 80048a6:	2600      	movs	r6, #0
 80048a8:	42a6      	cmp	r6, r4
 80048aa:	d109      	bne.n	80048c0 <__libc_init_array+0x24>
 80048ac:	4d0b      	ldr	r5, [pc, #44]	@ (80048dc <__libc_init_array+0x40>)
 80048ae:	4c0c      	ldr	r4, [pc, #48]	@ (80048e0 <__libc_init_array+0x44>)
 80048b0:	f000 feda 	bl	8005668 <_init>
 80048b4:	1b64      	subs	r4, r4, r5
 80048b6:	10a4      	asrs	r4, r4, #2
 80048b8:	2600      	movs	r6, #0
 80048ba:	42a6      	cmp	r6, r4
 80048bc:	d105      	bne.n	80048ca <__libc_init_array+0x2e>
 80048be:	bd70      	pop	{r4, r5, r6, pc}
 80048c0:	f855 3b04 	ldr.w	r3, [r5], #4
 80048c4:	4798      	blx	r3
 80048c6:	3601      	adds	r6, #1
 80048c8:	e7ee      	b.n	80048a8 <__libc_init_array+0xc>
 80048ca:	f855 3b04 	ldr.w	r3, [r5], #4
 80048ce:	4798      	blx	r3
 80048d0:	3601      	adds	r6, #1
 80048d2:	e7f2      	b.n	80048ba <__libc_init_array+0x1e>
 80048d4:	080058e0 	.word	0x080058e0
 80048d8:	080058e0 	.word	0x080058e0
 80048dc:	080058e0 	.word	0x080058e0
 80048e0:	080058e4 	.word	0x080058e4

080048e4 <__retarget_lock_init_recursive>:
 80048e4:	4770      	bx	lr

080048e6 <__retarget_lock_acquire_recursive>:
 80048e6:	4770      	bx	lr

080048e8 <__retarget_lock_release_recursive>:
 80048e8:	4770      	bx	lr
	...

080048ec <_free_r>:
 80048ec:	b538      	push	{r3, r4, r5, lr}
 80048ee:	4605      	mov	r5, r0
 80048f0:	2900      	cmp	r1, #0
 80048f2:	d041      	beq.n	8004978 <_free_r+0x8c>
 80048f4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80048f8:	1f0c      	subs	r4, r1, #4
 80048fa:	2b00      	cmp	r3, #0
 80048fc:	bfb8      	it	lt
 80048fe:	18e4      	addlt	r4, r4, r3
 8004900:	f000 f8e0 	bl	8004ac4 <__malloc_lock>
 8004904:	4a1d      	ldr	r2, [pc, #116]	@ (800497c <_free_r+0x90>)
 8004906:	6813      	ldr	r3, [r2, #0]
 8004908:	b933      	cbnz	r3, 8004918 <_free_r+0x2c>
 800490a:	6063      	str	r3, [r4, #4]
 800490c:	6014      	str	r4, [r2, #0]
 800490e:	4628      	mov	r0, r5
 8004910:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004914:	f000 b8dc 	b.w	8004ad0 <__malloc_unlock>
 8004918:	42a3      	cmp	r3, r4
 800491a:	d908      	bls.n	800492e <_free_r+0x42>
 800491c:	6820      	ldr	r0, [r4, #0]
 800491e:	1821      	adds	r1, r4, r0
 8004920:	428b      	cmp	r3, r1
 8004922:	bf01      	itttt	eq
 8004924:	6819      	ldreq	r1, [r3, #0]
 8004926:	685b      	ldreq	r3, [r3, #4]
 8004928:	1809      	addeq	r1, r1, r0
 800492a:	6021      	streq	r1, [r4, #0]
 800492c:	e7ed      	b.n	800490a <_free_r+0x1e>
 800492e:	461a      	mov	r2, r3
 8004930:	685b      	ldr	r3, [r3, #4]
 8004932:	b10b      	cbz	r3, 8004938 <_free_r+0x4c>
 8004934:	42a3      	cmp	r3, r4
 8004936:	d9fa      	bls.n	800492e <_free_r+0x42>
 8004938:	6811      	ldr	r1, [r2, #0]
 800493a:	1850      	adds	r0, r2, r1
 800493c:	42a0      	cmp	r0, r4
 800493e:	d10b      	bne.n	8004958 <_free_r+0x6c>
 8004940:	6820      	ldr	r0, [r4, #0]
 8004942:	4401      	add	r1, r0
 8004944:	1850      	adds	r0, r2, r1
 8004946:	4283      	cmp	r3, r0
 8004948:	6011      	str	r1, [r2, #0]
 800494a:	d1e0      	bne.n	800490e <_free_r+0x22>
 800494c:	6818      	ldr	r0, [r3, #0]
 800494e:	685b      	ldr	r3, [r3, #4]
 8004950:	6053      	str	r3, [r2, #4]
 8004952:	4408      	add	r0, r1
 8004954:	6010      	str	r0, [r2, #0]
 8004956:	e7da      	b.n	800490e <_free_r+0x22>
 8004958:	d902      	bls.n	8004960 <_free_r+0x74>
 800495a:	230c      	movs	r3, #12
 800495c:	602b      	str	r3, [r5, #0]
 800495e:	e7d6      	b.n	800490e <_free_r+0x22>
 8004960:	6820      	ldr	r0, [r4, #0]
 8004962:	1821      	adds	r1, r4, r0
 8004964:	428b      	cmp	r3, r1
 8004966:	bf04      	itt	eq
 8004968:	6819      	ldreq	r1, [r3, #0]
 800496a:	685b      	ldreq	r3, [r3, #4]
 800496c:	6063      	str	r3, [r4, #4]
 800496e:	bf04      	itt	eq
 8004970:	1809      	addeq	r1, r1, r0
 8004972:	6021      	streq	r1, [r4, #0]
 8004974:	6054      	str	r4, [r2, #4]
 8004976:	e7ca      	b.n	800490e <_free_r+0x22>
 8004978:	bd38      	pop	{r3, r4, r5, pc}
 800497a:	bf00      	nop
 800497c:	200003fc 	.word	0x200003fc

08004980 <sbrk_aligned>:
 8004980:	b570      	push	{r4, r5, r6, lr}
 8004982:	4e0f      	ldr	r6, [pc, #60]	@ (80049c0 <sbrk_aligned+0x40>)
 8004984:	460c      	mov	r4, r1
 8004986:	6831      	ldr	r1, [r6, #0]
 8004988:	4605      	mov	r5, r0
 800498a:	b911      	cbnz	r1, 8004992 <sbrk_aligned+0x12>
 800498c:	f000 fe18 	bl	80055c0 <_sbrk_r>
 8004990:	6030      	str	r0, [r6, #0]
 8004992:	4621      	mov	r1, r4
 8004994:	4628      	mov	r0, r5
 8004996:	f000 fe13 	bl	80055c0 <_sbrk_r>
 800499a:	1c43      	adds	r3, r0, #1
 800499c:	d103      	bne.n	80049a6 <sbrk_aligned+0x26>
 800499e:	f04f 34ff 	mov.w	r4, #4294967295
 80049a2:	4620      	mov	r0, r4
 80049a4:	bd70      	pop	{r4, r5, r6, pc}
 80049a6:	1cc4      	adds	r4, r0, #3
 80049a8:	f024 0403 	bic.w	r4, r4, #3
 80049ac:	42a0      	cmp	r0, r4
 80049ae:	d0f8      	beq.n	80049a2 <sbrk_aligned+0x22>
 80049b0:	1a21      	subs	r1, r4, r0
 80049b2:	4628      	mov	r0, r5
 80049b4:	f000 fe04 	bl	80055c0 <_sbrk_r>
 80049b8:	3001      	adds	r0, #1
 80049ba:	d1f2      	bne.n	80049a2 <sbrk_aligned+0x22>
 80049bc:	e7ef      	b.n	800499e <sbrk_aligned+0x1e>
 80049be:	bf00      	nop
 80049c0:	200003f8 	.word	0x200003f8

080049c4 <_malloc_r>:
 80049c4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80049c8:	1ccd      	adds	r5, r1, #3
 80049ca:	f025 0503 	bic.w	r5, r5, #3
 80049ce:	3508      	adds	r5, #8
 80049d0:	2d0c      	cmp	r5, #12
 80049d2:	bf38      	it	cc
 80049d4:	250c      	movcc	r5, #12
 80049d6:	2d00      	cmp	r5, #0
 80049d8:	4606      	mov	r6, r0
 80049da:	db01      	blt.n	80049e0 <_malloc_r+0x1c>
 80049dc:	42a9      	cmp	r1, r5
 80049de:	d904      	bls.n	80049ea <_malloc_r+0x26>
 80049e0:	230c      	movs	r3, #12
 80049e2:	6033      	str	r3, [r6, #0]
 80049e4:	2000      	movs	r0, #0
 80049e6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80049ea:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8004ac0 <_malloc_r+0xfc>
 80049ee:	f000 f869 	bl	8004ac4 <__malloc_lock>
 80049f2:	f8d8 3000 	ldr.w	r3, [r8]
 80049f6:	461c      	mov	r4, r3
 80049f8:	bb44      	cbnz	r4, 8004a4c <_malloc_r+0x88>
 80049fa:	4629      	mov	r1, r5
 80049fc:	4630      	mov	r0, r6
 80049fe:	f7ff ffbf 	bl	8004980 <sbrk_aligned>
 8004a02:	1c43      	adds	r3, r0, #1
 8004a04:	4604      	mov	r4, r0
 8004a06:	d158      	bne.n	8004aba <_malloc_r+0xf6>
 8004a08:	f8d8 4000 	ldr.w	r4, [r8]
 8004a0c:	4627      	mov	r7, r4
 8004a0e:	2f00      	cmp	r7, #0
 8004a10:	d143      	bne.n	8004a9a <_malloc_r+0xd6>
 8004a12:	2c00      	cmp	r4, #0
 8004a14:	d04b      	beq.n	8004aae <_malloc_r+0xea>
 8004a16:	6823      	ldr	r3, [r4, #0]
 8004a18:	4639      	mov	r1, r7
 8004a1a:	4630      	mov	r0, r6
 8004a1c:	eb04 0903 	add.w	r9, r4, r3
 8004a20:	f000 fdce 	bl	80055c0 <_sbrk_r>
 8004a24:	4581      	cmp	r9, r0
 8004a26:	d142      	bne.n	8004aae <_malloc_r+0xea>
 8004a28:	6821      	ldr	r1, [r4, #0]
 8004a2a:	1a6d      	subs	r5, r5, r1
 8004a2c:	4629      	mov	r1, r5
 8004a2e:	4630      	mov	r0, r6
 8004a30:	f7ff ffa6 	bl	8004980 <sbrk_aligned>
 8004a34:	3001      	adds	r0, #1
 8004a36:	d03a      	beq.n	8004aae <_malloc_r+0xea>
 8004a38:	6823      	ldr	r3, [r4, #0]
 8004a3a:	442b      	add	r3, r5
 8004a3c:	6023      	str	r3, [r4, #0]
 8004a3e:	f8d8 3000 	ldr.w	r3, [r8]
 8004a42:	685a      	ldr	r2, [r3, #4]
 8004a44:	bb62      	cbnz	r2, 8004aa0 <_malloc_r+0xdc>
 8004a46:	f8c8 7000 	str.w	r7, [r8]
 8004a4a:	e00f      	b.n	8004a6c <_malloc_r+0xa8>
 8004a4c:	6822      	ldr	r2, [r4, #0]
 8004a4e:	1b52      	subs	r2, r2, r5
 8004a50:	d420      	bmi.n	8004a94 <_malloc_r+0xd0>
 8004a52:	2a0b      	cmp	r2, #11
 8004a54:	d917      	bls.n	8004a86 <_malloc_r+0xc2>
 8004a56:	1961      	adds	r1, r4, r5
 8004a58:	42a3      	cmp	r3, r4
 8004a5a:	6025      	str	r5, [r4, #0]
 8004a5c:	bf18      	it	ne
 8004a5e:	6059      	strne	r1, [r3, #4]
 8004a60:	6863      	ldr	r3, [r4, #4]
 8004a62:	bf08      	it	eq
 8004a64:	f8c8 1000 	streq.w	r1, [r8]
 8004a68:	5162      	str	r2, [r4, r5]
 8004a6a:	604b      	str	r3, [r1, #4]
 8004a6c:	4630      	mov	r0, r6
 8004a6e:	f000 f82f 	bl	8004ad0 <__malloc_unlock>
 8004a72:	f104 000b 	add.w	r0, r4, #11
 8004a76:	1d23      	adds	r3, r4, #4
 8004a78:	f020 0007 	bic.w	r0, r0, #7
 8004a7c:	1ac2      	subs	r2, r0, r3
 8004a7e:	bf1c      	itt	ne
 8004a80:	1a1b      	subne	r3, r3, r0
 8004a82:	50a3      	strne	r3, [r4, r2]
 8004a84:	e7af      	b.n	80049e6 <_malloc_r+0x22>
 8004a86:	6862      	ldr	r2, [r4, #4]
 8004a88:	42a3      	cmp	r3, r4
 8004a8a:	bf0c      	ite	eq
 8004a8c:	f8c8 2000 	streq.w	r2, [r8]
 8004a90:	605a      	strne	r2, [r3, #4]
 8004a92:	e7eb      	b.n	8004a6c <_malloc_r+0xa8>
 8004a94:	4623      	mov	r3, r4
 8004a96:	6864      	ldr	r4, [r4, #4]
 8004a98:	e7ae      	b.n	80049f8 <_malloc_r+0x34>
 8004a9a:	463c      	mov	r4, r7
 8004a9c:	687f      	ldr	r7, [r7, #4]
 8004a9e:	e7b6      	b.n	8004a0e <_malloc_r+0x4a>
 8004aa0:	461a      	mov	r2, r3
 8004aa2:	685b      	ldr	r3, [r3, #4]
 8004aa4:	42a3      	cmp	r3, r4
 8004aa6:	d1fb      	bne.n	8004aa0 <_malloc_r+0xdc>
 8004aa8:	2300      	movs	r3, #0
 8004aaa:	6053      	str	r3, [r2, #4]
 8004aac:	e7de      	b.n	8004a6c <_malloc_r+0xa8>
 8004aae:	230c      	movs	r3, #12
 8004ab0:	6033      	str	r3, [r6, #0]
 8004ab2:	4630      	mov	r0, r6
 8004ab4:	f000 f80c 	bl	8004ad0 <__malloc_unlock>
 8004ab8:	e794      	b.n	80049e4 <_malloc_r+0x20>
 8004aba:	6005      	str	r5, [r0, #0]
 8004abc:	e7d6      	b.n	8004a6c <_malloc_r+0xa8>
 8004abe:	bf00      	nop
 8004ac0:	200003fc 	.word	0x200003fc

08004ac4 <__malloc_lock>:
 8004ac4:	4801      	ldr	r0, [pc, #4]	@ (8004acc <__malloc_lock+0x8>)
 8004ac6:	f7ff bf0e 	b.w	80048e6 <__retarget_lock_acquire_recursive>
 8004aca:	bf00      	nop
 8004acc:	200003f4 	.word	0x200003f4

08004ad0 <__malloc_unlock>:
 8004ad0:	4801      	ldr	r0, [pc, #4]	@ (8004ad8 <__malloc_unlock+0x8>)
 8004ad2:	f7ff bf09 	b.w	80048e8 <__retarget_lock_release_recursive>
 8004ad6:	bf00      	nop
 8004ad8:	200003f4 	.word	0x200003f4

08004adc <__ssputs_r>:
 8004adc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004ae0:	688e      	ldr	r6, [r1, #8]
 8004ae2:	461f      	mov	r7, r3
 8004ae4:	42be      	cmp	r6, r7
 8004ae6:	680b      	ldr	r3, [r1, #0]
 8004ae8:	4682      	mov	sl, r0
 8004aea:	460c      	mov	r4, r1
 8004aec:	4690      	mov	r8, r2
 8004aee:	d82d      	bhi.n	8004b4c <__ssputs_r+0x70>
 8004af0:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8004af4:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8004af8:	d026      	beq.n	8004b48 <__ssputs_r+0x6c>
 8004afa:	6965      	ldr	r5, [r4, #20]
 8004afc:	6909      	ldr	r1, [r1, #16]
 8004afe:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8004b02:	eba3 0901 	sub.w	r9, r3, r1
 8004b06:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8004b0a:	1c7b      	adds	r3, r7, #1
 8004b0c:	444b      	add	r3, r9
 8004b0e:	106d      	asrs	r5, r5, #1
 8004b10:	429d      	cmp	r5, r3
 8004b12:	bf38      	it	cc
 8004b14:	461d      	movcc	r5, r3
 8004b16:	0553      	lsls	r3, r2, #21
 8004b18:	d527      	bpl.n	8004b6a <__ssputs_r+0x8e>
 8004b1a:	4629      	mov	r1, r5
 8004b1c:	f7ff ff52 	bl	80049c4 <_malloc_r>
 8004b20:	4606      	mov	r6, r0
 8004b22:	b360      	cbz	r0, 8004b7e <__ssputs_r+0xa2>
 8004b24:	6921      	ldr	r1, [r4, #16]
 8004b26:	464a      	mov	r2, r9
 8004b28:	f000 fd5a 	bl	80055e0 <memcpy>
 8004b2c:	89a3      	ldrh	r3, [r4, #12]
 8004b2e:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8004b32:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004b36:	81a3      	strh	r3, [r4, #12]
 8004b38:	6126      	str	r6, [r4, #16]
 8004b3a:	6165      	str	r5, [r4, #20]
 8004b3c:	444e      	add	r6, r9
 8004b3e:	eba5 0509 	sub.w	r5, r5, r9
 8004b42:	6026      	str	r6, [r4, #0]
 8004b44:	60a5      	str	r5, [r4, #8]
 8004b46:	463e      	mov	r6, r7
 8004b48:	42be      	cmp	r6, r7
 8004b4a:	d900      	bls.n	8004b4e <__ssputs_r+0x72>
 8004b4c:	463e      	mov	r6, r7
 8004b4e:	6820      	ldr	r0, [r4, #0]
 8004b50:	4632      	mov	r2, r6
 8004b52:	4641      	mov	r1, r8
 8004b54:	f000 fcf8 	bl	8005548 <memmove>
 8004b58:	68a3      	ldr	r3, [r4, #8]
 8004b5a:	1b9b      	subs	r3, r3, r6
 8004b5c:	60a3      	str	r3, [r4, #8]
 8004b5e:	6823      	ldr	r3, [r4, #0]
 8004b60:	4433      	add	r3, r6
 8004b62:	6023      	str	r3, [r4, #0]
 8004b64:	2000      	movs	r0, #0
 8004b66:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004b6a:	462a      	mov	r2, r5
 8004b6c:	f000 fd46 	bl	80055fc <_realloc_r>
 8004b70:	4606      	mov	r6, r0
 8004b72:	2800      	cmp	r0, #0
 8004b74:	d1e0      	bne.n	8004b38 <__ssputs_r+0x5c>
 8004b76:	6921      	ldr	r1, [r4, #16]
 8004b78:	4650      	mov	r0, sl
 8004b7a:	f7ff feb7 	bl	80048ec <_free_r>
 8004b7e:	230c      	movs	r3, #12
 8004b80:	f8ca 3000 	str.w	r3, [sl]
 8004b84:	89a3      	ldrh	r3, [r4, #12]
 8004b86:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8004b8a:	81a3      	strh	r3, [r4, #12]
 8004b8c:	f04f 30ff 	mov.w	r0, #4294967295
 8004b90:	e7e9      	b.n	8004b66 <__ssputs_r+0x8a>
	...

08004b94 <_svfiprintf_r>:
 8004b94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004b98:	4698      	mov	r8, r3
 8004b9a:	898b      	ldrh	r3, [r1, #12]
 8004b9c:	061b      	lsls	r3, r3, #24
 8004b9e:	b09d      	sub	sp, #116	@ 0x74
 8004ba0:	4607      	mov	r7, r0
 8004ba2:	460d      	mov	r5, r1
 8004ba4:	4614      	mov	r4, r2
 8004ba6:	d510      	bpl.n	8004bca <_svfiprintf_r+0x36>
 8004ba8:	690b      	ldr	r3, [r1, #16]
 8004baa:	b973      	cbnz	r3, 8004bca <_svfiprintf_r+0x36>
 8004bac:	2140      	movs	r1, #64	@ 0x40
 8004bae:	f7ff ff09 	bl	80049c4 <_malloc_r>
 8004bb2:	6028      	str	r0, [r5, #0]
 8004bb4:	6128      	str	r0, [r5, #16]
 8004bb6:	b930      	cbnz	r0, 8004bc6 <_svfiprintf_r+0x32>
 8004bb8:	230c      	movs	r3, #12
 8004bba:	603b      	str	r3, [r7, #0]
 8004bbc:	f04f 30ff 	mov.w	r0, #4294967295
 8004bc0:	b01d      	add	sp, #116	@ 0x74
 8004bc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004bc6:	2340      	movs	r3, #64	@ 0x40
 8004bc8:	616b      	str	r3, [r5, #20]
 8004bca:	2300      	movs	r3, #0
 8004bcc:	9309      	str	r3, [sp, #36]	@ 0x24
 8004bce:	2320      	movs	r3, #32
 8004bd0:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8004bd4:	f8cd 800c 	str.w	r8, [sp, #12]
 8004bd8:	2330      	movs	r3, #48	@ 0x30
 8004bda:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8004d78 <_svfiprintf_r+0x1e4>
 8004bde:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8004be2:	f04f 0901 	mov.w	r9, #1
 8004be6:	4623      	mov	r3, r4
 8004be8:	469a      	mov	sl, r3
 8004bea:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004bee:	b10a      	cbz	r2, 8004bf4 <_svfiprintf_r+0x60>
 8004bf0:	2a25      	cmp	r2, #37	@ 0x25
 8004bf2:	d1f9      	bne.n	8004be8 <_svfiprintf_r+0x54>
 8004bf4:	ebba 0b04 	subs.w	fp, sl, r4
 8004bf8:	d00b      	beq.n	8004c12 <_svfiprintf_r+0x7e>
 8004bfa:	465b      	mov	r3, fp
 8004bfc:	4622      	mov	r2, r4
 8004bfe:	4629      	mov	r1, r5
 8004c00:	4638      	mov	r0, r7
 8004c02:	f7ff ff6b 	bl	8004adc <__ssputs_r>
 8004c06:	3001      	adds	r0, #1
 8004c08:	f000 80a7 	beq.w	8004d5a <_svfiprintf_r+0x1c6>
 8004c0c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004c0e:	445a      	add	r2, fp
 8004c10:	9209      	str	r2, [sp, #36]	@ 0x24
 8004c12:	f89a 3000 	ldrb.w	r3, [sl]
 8004c16:	2b00      	cmp	r3, #0
 8004c18:	f000 809f 	beq.w	8004d5a <_svfiprintf_r+0x1c6>
 8004c1c:	2300      	movs	r3, #0
 8004c1e:	f04f 32ff 	mov.w	r2, #4294967295
 8004c22:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004c26:	f10a 0a01 	add.w	sl, sl, #1
 8004c2a:	9304      	str	r3, [sp, #16]
 8004c2c:	9307      	str	r3, [sp, #28]
 8004c2e:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8004c32:	931a      	str	r3, [sp, #104]	@ 0x68
 8004c34:	4654      	mov	r4, sl
 8004c36:	2205      	movs	r2, #5
 8004c38:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004c3c:	484e      	ldr	r0, [pc, #312]	@ (8004d78 <_svfiprintf_r+0x1e4>)
 8004c3e:	f7fb faf7 	bl	8000230 <memchr>
 8004c42:	9a04      	ldr	r2, [sp, #16]
 8004c44:	b9d8      	cbnz	r0, 8004c7e <_svfiprintf_r+0xea>
 8004c46:	06d0      	lsls	r0, r2, #27
 8004c48:	bf44      	itt	mi
 8004c4a:	2320      	movmi	r3, #32
 8004c4c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8004c50:	0711      	lsls	r1, r2, #28
 8004c52:	bf44      	itt	mi
 8004c54:	232b      	movmi	r3, #43	@ 0x2b
 8004c56:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8004c5a:	f89a 3000 	ldrb.w	r3, [sl]
 8004c5e:	2b2a      	cmp	r3, #42	@ 0x2a
 8004c60:	d015      	beq.n	8004c8e <_svfiprintf_r+0xfa>
 8004c62:	9a07      	ldr	r2, [sp, #28]
 8004c64:	4654      	mov	r4, sl
 8004c66:	2000      	movs	r0, #0
 8004c68:	f04f 0c0a 	mov.w	ip, #10
 8004c6c:	4621      	mov	r1, r4
 8004c6e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8004c72:	3b30      	subs	r3, #48	@ 0x30
 8004c74:	2b09      	cmp	r3, #9
 8004c76:	d94b      	bls.n	8004d10 <_svfiprintf_r+0x17c>
 8004c78:	b1b0      	cbz	r0, 8004ca8 <_svfiprintf_r+0x114>
 8004c7a:	9207      	str	r2, [sp, #28]
 8004c7c:	e014      	b.n	8004ca8 <_svfiprintf_r+0x114>
 8004c7e:	eba0 0308 	sub.w	r3, r0, r8
 8004c82:	fa09 f303 	lsl.w	r3, r9, r3
 8004c86:	4313      	orrs	r3, r2
 8004c88:	9304      	str	r3, [sp, #16]
 8004c8a:	46a2      	mov	sl, r4
 8004c8c:	e7d2      	b.n	8004c34 <_svfiprintf_r+0xa0>
 8004c8e:	9b03      	ldr	r3, [sp, #12]
 8004c90:	1d19      	adds	r1, r3, #4
 8004c92:	681b      	ldr	r3, [r3, #0]
 8004c94:	9103      	str	r1, [sp, #12]
 8004c96:	2b00      	cmp	r3, #0
 8004c98:	bfbb      	ittet	lt
 8004c9a:	425b      	neglt	r3, r3
 8004c9c:	f042 0202 	orrlt.w	r2, r2, #2
 8004ca0:	9307      	strge	r3, [sp, #28]
 8004ca2:	9307      	strlt	r3, [sp, #28]
 8004ca4:	bfb8      	it	lt
 8004ca6:	9204      	strlt	r2, [sp, #16]
 8004ca8:	7823      	ldrb	r3, [r4, #0]
 8004caa:	2b2e      	cmp	r3, #46	@ 0x2e
 8004cac:	d10a      	bne.n	8004cc4 <_svfiprintf_r+0x130>
 8004cae:	7863      	ldrb	r3, [r4, #1]
 8004cb0:	2b2a      	cmp	r3, #42	@ 0x2a
 8004cb2:	d132      	bne.n	8004d1a <_svfiprintf_r+0x186>
 8004cb4:	9b03      	ldr	r3, [sp, #12]
 8004cb6:	1d1a      	adds	r2, r3, #4
 8004cb8:	681b      	ldr	r3, [r3, #0]
 8004cba:	9203      	str	r2, [sp, #12]
 8004cbc:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8004cc0:	3402      	adds	r4, #2
 8004cc2:	9305      	str	r3, [sp, #20]
 8004cc4:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8004d88 <_svfiprintf_r+0x1f4>
 8004cc8:	7821      	ldrb	r1, [r4, #0]
 8004cca:	2203      	movs	r2, #3
 8004ccc:	4650      	mov	r0, sl
 8004cce:	f7fb faaf 	bl	8000230 <memchr>
 8004cd2:	b138      	cbz	r0, 8004ce4 <_svfiprintf_r+0x150>
 8004cd4:	9b04      	ldr	r3, [sp, #16]
 8004cd6:	eba0 000a 	sub.w	r0, r0, sl
 8004cda:	2240      	movs	r2, #64	@ 0x40
 8004cdc:	4082      	lsls	r2, r0
 8004cde:	4313      	orrs	r3, r2
 8004ce0:	3401      	adds	r4, #1
 8004ce2:	9304      	str	r3, [sp, #16]
 8004ce4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004ce8:	4824      	ldr	r0, [pc, #144]	@ (8004d7c <_svfiprintf_r+0x1e8>)
 8004cea:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8004cee:	2206      	movs	r2, #6
 8004cf0:	f7fb fa9e 	bl	8000230 <memchr>
 8004cf4:	2800      	cmp	r0, #0
 8004cf6:	d036      	beq.n	8004d66 <_svfiprintf_r+0x1d2>
 8004cf8:	4b21      	ldr	r3, [pc, #132]	@ (8004d80 <_svfiprintf_r+0x1ec>)
 8004cfa:	bb1b      	cbnz	r3, 8004d44 <_svfiprintf_r+0x1b0>
 8004cfc:	9b03      	ldr	r3, [sp, #12]
 8004cfe:	3307      	adds	r3, #7
 8004d00:	f023 0307 	bic.w	r3, r3, #7
 8004d04:	3308      	adds	r3, #8
 8004d06:	9303      	str	r3, [sp, #12]
 8004d08:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004d0a:	4433      	add	r3, r6
 8004d0c:	9309      	str	r3, [sp, #36]	@ 0x24
 8004d0e:	e76a      	b.n	8004be6 <_svfiprintf_r+0x52>
 8004d10:	fb0c 3202 	mla	r2, ip, r2, r3
 8004d14:	460c      	mov	r4, r1
 8004d16:	2001      	movs	r0, #1
 8004d18:	e7a8      	b.n	8004c6c <_svfiprintf_r+0xd8>
 8004d1a:	2300      	movs	r3, #0
 8004d1c:	3401      	adds	r4, #1
 8004d1e:	9305      	str	r3, [sp, #20]
 8004d20:	4619      	mov	r1, r3
 8004d22:	f04f 0c0a 	mov.w	ip, #10
 8004d26:	4620      	mov	r0, r4
 8004d28:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004d2c:	3a30      	subs	r2, #48	@ 0x30
 8004d2e:	2a09      	cmp	r2, #9
 8004d30:	d903      	bls.n	8004d3a <_svfiprintf_r+0x1a6>
 8004d32:	2b00      	cmp	r3, #0
 8004d34:	d0c6      	beq.n	8004cc4 <_svfiprintf_r+0x130>
 8004d36:	9105      	str	r1, [sp, #20]
 8004d38:	e7c4      	b.n	8004cc4 <_svfiprintf_r+0x130>
 8004d3a:	fb0c 2101 	mla	r1, ip, r1, r2
 8004d3e:	4604      	mov	r4, r0
 8004d40:	2301      	movs	r3, #1
 8004d42:	e7f0      	b.n	8004d26 <_svfiprintf_r+0x192>
 8004d44:	ab03      	add	r3, sp, #12
 8004d46:	9300      	str	r3, [sp, #0]
 8004d48:	462a      	mov	r2, r5
 8004d4a:	4b0e      	ldr	r3, [pc, #56]	@ (8004d84 <_svfiprintf_r+0x1f0>)
 8004d4c:	a904      	add	r1, sp, #16
 8004d4e:	4638      	mov	r0, r7
 8004d50:	f3af 8000 	nop.w
 8004d54:	1c42      	adds	r2, r0, #1
 8004d56:	4606      	mov	r6, r0
 8004d58:	d1d6      	bne.n	8004d08 <_svfiprintf_r+0x174>
 8004d5a:	89ab      	ldrh	r3, [r5, #12]
 8004d5c:	065b      	lsls	r3, r3, #25
 8004d5e:	f53f af2d 	bmi.w	8004bbc <_svfiprintf_r+0x28>
 8004d62:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004d64:	e72c      	b.n	8004bc0 <_svfiprintf_r+0x2c>
 8004d66:	ab03      	add	r3, sp, #12
 8004d68:	9300      	str	r3, [sp, #0]
 8004d6a:	462a      	mov	r2, r5
 8004d6c:	4b05      	ldr	r3, [pc, #20]	@ (8004d84 <_svfiprintf_r+0x1f0>)
 8004d6e:	a904      	add	r1, sp, #16
 8004d70:	4638      	mov	r0, r7
 8004d72:	f000 f9bb 	bl	80050ec <_printf_i>
 8004d76:	e7ed      	b.n	8004d54 <_svfiprintf_r+0x1c0>
 8004d78:	080058a4 	.word	0x080058a4
 8004d7c:	080058ae 	.word	0x080058ae
 8004d80:	00000000 	.word	0x00000000
 8004d84:	08004add 	.word	0x08004add
 8004d88:	080058aa 	.word	0x080058aa

08004d8c <__sfputc_r>:
 8004d8c:	6893      	ldr	r3, [r2, #8]
 8004d8e:	3b01      	subs	r3, #1
 8004d90:	2b00      	cmp	r3, #0
 8004d92:	b410      	push	{r4}
 8004d94:	6093      	str	r3, [r2, #8]
 8004d96:	da08      	bge.n	8004daa <__sfputc_r+0x1e>
 8004d98:	6994      	ldr	r4, [r2, #24]
 8004d9a:	42a3      	cmp	r3, r4
 8004d9c:	db01      	blt.n	8004da2 <__sfputc_r+0x16>
 8004d9e:	290a      	cmp	r1, #10
 8004da0:	d103      	bne.n	8004daa <__sfputc_r+0x1e>
 8004da2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004da6:	f7ff bc90 	b.w	80046ca <__swbuf_r>
 8004daa:	6813      	ldr	r3, [r2, #0]
 8004dac:	1c58      	adds	r0, r3, #1
 8004dae:	6010      	str	r0, [r2, #0]
 8004db0:	7019      	strb	r1, [r3, #0]
 8004db2:	4608      	mov	r0, r1
 8004db4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004db8:	4770      	bx	lr

08004dba <__sfputs_r>:
 8004dba:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004dbc:	4606      	mov	r6, r0
 8004dbe:	460f      	mov	r7, r1
 8004dc0:	4614      	mov	r4, r2
 8004dc2:	18d5      	adds	r5, r2, r3
 8004dc4:	42ac      	cmp	r4, r5
 8004dc6:	d101      	bne.n	8004dcc <__sfputs_r+0x12>
 8004dc8:	2000      	movs	r0, #0
 8004dca:	e007      	b.n	8004ddc <__sfputs_r+0x22>
 8004dcc:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004dd0:	463a      	mov	r2, r7
 8004dd2:	4630      	mov	r0, r6
 8004dd4:	f7ff ffda 	bl	8004d8c <__sfputc_r>
 8004dd8:	1c43      	adds	r3, r0, #1
 8004dda:	d1f3      	bne.n	8004dc4 <__sfputs_r+0xa>
 8004ddc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08004de0 <_vfiprintf_r>:
 8004de0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004de4:	460d      	mov	r5, r1
 8004de6:	b09d      	sub	sp, #116	@ 0x74
 8004de8:	4614      	mov	r4, r2
 8004dea:	4698      	mov	r8, r3
 8004dec:	4606      	mov	r6, r0
 8004dee:	b118      	cbz	r0, 8004df8 <_vfiprintf_r+0x18>
 8004df0:	6a03      	ldr	r3, [r0, #32]
 8004df2:	b90b      	cbnz	r3, 8004df8 <_vfiprintf_r+0x18>
 8004df4:	f7ff fb4c 	bl	8004490 <__sinit>
 8004df8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8004dfa:	07d9      	lsls	r1, r3, #31
 8004dfc:	d405      	bmi.n	8004e0a <_vfiprintf_r+0x2a>
 8004dfe:	89ab      	ldrh	r3, [r5, #12]
 8004e00:	059a      	lsls	r2, r3, #22
 8004e02:	d402      	bmi.n	8004e0a <_vfiprintf_r+0x2a>
 8004e04:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8004e06:	f7ff fd6e 	bl	80048e6 <__retarget_lock_acquire_recursive>
 8004e0a:	89ab      	ldrh	r3, [r5, #12]
 8004e0c:	071b      	lsls	r3, r3, #28
 8004e0e:	d501      	bpl.n	8004e14 <_vfiprintf_r+0x34>
 8004e10:	692b      	ldr	r3, [r5, #16]
 8004e12:	b99b      	cbnz	r3, 8004e3c <_vfiprintf_r+0x5c>
 8004e14:	4629      	mov	r1, r5
 8004e16:	4630      	mov	r0, r6
 8004e18:	f7ff fc96 	bl	8004748 <__swsetup_r>
 8004e1c:	b170      	cbz	r0, 8004e3c <_vfiprintf_r+0x5c>
 8004e1e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8004e20:	07dc      	lsls	r4, r3, #31
 8004e22:	d504      	bpl.n	8004e2e <_vfiprintf_r+0x4e>
 8004e24:	f04f 30ff 	mov.w	r0, #4294967295
 8004e28:	b01d      	add	sp, #116	@ 0x74
 8004e2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004e2e:	89ab      	ldrh	r3, [r5, #12]
 8004e30:	0598      	lsls	r0, r3, #22
 8004e32:	d4f7      	bmi.n	8004e24 <_vfiprintf_r+0x44>
 8004e34:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8004e36:	f7ff fd57 	bl	80048e8 <__retarget_lock_release_recursive>
 8004e3a:	e7f3      	b.n	8004e24 <_vfiprintf_r+0x44>
 8004e3c:	2300      	movs	r3, #0
 8004e3e:	9309      	str	r3, [sp, #36]	@ 0x24
 8004e40:	2320      	movs	r3, #32
 8004e42:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8004e46:	f8cd 800c 	str.w	r8, [sp, #12]
 8004e4a:	2330      	movs	r3, #48	@ 0x30
 8004e4c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8004ffc <_vfiprintf_r+0x21c>
 8004e50:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8004e54:	f04f 0901 	mov.w	r9, #1
 8004e58:	4623      	mov	r3, r4
 8004e5a:	469a      	mov	sl, r3
 8004e5c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004e60:	b10a      	cbz	r2, 8004e66 <_vfiprintf_r+0x86>
 8004e62:	2a25      	cmp	r2, #37	@ 0x25
 8004e64:	d1f9      	bne.n	8004e5a <_vfiprintf_r+0x7a>
 8004e66:	ebba 0b04 	subs.w	fp, sl, r4
 8004e6a:	d00b      	beq.n	8004e84 <_vfiprintf_r+0xa4>
 8004e6c:	465b      	mov	r3, fp
 8004e6e:	4622      	mov	r2, r4
 8004e70:	4629      	mov	r1, r5
 8004e72:	4630      	mov	r0, r6
 8004e74:	f7ff ffa1 	bl	8004dba <__sfputs_r>
 8004e78:	3001      	adds	r0, #1
 8004e7a:	f000 80a7 	beq.w	8004fcc <_vfiprintf_r+0x1ec>
 8004e7e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004e80:	445a      	add	r2, fp
 8004e82:	9209      	str	r2, [sp, #36]	@ 0x24
 8004e84:	f89a 3000 	ldrb.w	r3, [sl]
 8004e88:	2b00      	cmp	r3, #0
 8004e8a:	f000 809f 	beq.w	8004fcc <_vfiprintf_r+0x1ec>
 8004e8e:	2300      	movs	r3, #0
 8004e90:	f04f 32ff 	mov.w	r2, #4294967295
 8004e94:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004e98:	f10a 0a01 	add.w	sl, sl, #1
 8004e9c:	9304      	str	r3, [sp, #16]
 8004e9e:	9307      	str	r3, [sp, #28]
 8004ea0:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8004ea4:	931a      	str	r3, [sp, #104]	@ 0x68
 8004ea6:	4654      	mov	r4, sl
 8004ea8:	2205      	movs	r2, #5
 8004eaa:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004eae:	4853      	ldr	r0, [pc, #332]	@ (8004ffc <_vfiprintf_r+0x21c>)
 8004eb0:	f7fb f9be 	bl	8000230 <memchr>
 8004eb4:	9a04      	ldr	r2, [sp, #16]
 8004eb6:	b9d8      	cbnz	r0, 8004ef0 <_vfiprintf_r+0x110>
 8004eb8:	06d1      	lsls	r1, r2, #27
 8004eba:	bf44      	itt	mi
 8004ebc:	2320      	movmi	r3, #32
 8004ebe:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8004ec2:	0713      	lsls	r3, r2, #28
 8004ec4:	bf44      	itt	mi
 8004ec6:	232b      	movmi	r3, #43	@ 0x2b
 8004ec8:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8004ecc:	f89a 3000 	ldrb.w	r3, [sl]
 8004ed0:	2b2a      	cmp	r3, #42	@ 0x2a
 8004ed2:	d015      	beq.n	8004f00 <_vfiprintf_r+0x120>
 8004ed4:	9a07      	ldr	r2, [sp, #28]
 8004ed6:	4654      	mov	r4, sl
 8004ed8:	2000      	movs	r0, #0
 8004eda:	f04f 0c0a 	mov.w	ip, #10
 8004ede:	4621      	mov	r1, r4
 8004ee0:	f811 3b01 	ldrb.w	r3, [r1], #1
 8004ee4:	3b30      	subs	r3, #48	@ 0x30
 8004ee6:	2b09      	cmp	r3, #9
 8004ee8:	d94b      	bls.n	8004f82 <_vfiprintf_r+0x1a2>
 8004eea:	b1b0      	cbz	r0, 8004f1a <_vfiprintf_r+0x13a>
 8004eec:	9207      	str	r2, [sp, #28]
 8004eee:	e014      	b.n	8004f1a <_vfiprintf_r+0x13a>
 8004ef0:	eba0 0308 	sub.w	r3, r0, r8
 8004ef4:	fa09 f303 	lsl.w	r3, r9, r3
 8004ef8:	4313      	orrs	r3, r2
 8004efa:	9304      	str	r3, [sp, #16]
 8004efc:	46a2      	mov	sl, r4
 8004efe:	e7d2      	b.n	8004ea6 <_vfiprintf_r+0xc6>
 8004f00:	9b03      	ldr	r3, [sp, #12]
 8004f02:	1d19      	adds	r1, r3, #4
 8004f04:	681b      	ldr	r3, [r3, #0]
 8004f06:	9103      	str	r1, [sp, #12]
 8004f08:	2b00      	cmp	r3, #0
 8004f0a:	bfbb      	ittet	lt
 8004f0c:	425b      	neglt	r3, r3
 8004f0e:	f042 0202 	orrlt.w	r2, r2, #2
 8004f12:	9307      	strge	r3, [sp, #28]
 8004f14:	9307      	strlt	r3, [sp, #28]
 8004f16:	bfb8      	it	lt
 8004f18:	9204      	strlt	r2, [sp, #16]
 8004f1a:	7823      	ldrb	r3, [r4, #0]
 8004f1c:	2b2e      	cmp	r3, #46	@ 0x2e
 8004f1e:	d10a      	bne.n	8004f36 <_vfiprintf_r+0x156>
 8004f20:	7863      	ldrb	r3, [r4, #1]
 8004f22:	2b2a      	cmp	r3, #42	@ 0x2a
 8004f24:	d132      	bne.n	8004f8c <_vfiprintf_r+0x1ac>
 8004f26:	9b03      	ldr	r3, [sp, #12]
 8004f28:	1d1a      	adds	r2, r3, #4
 8004f2a:	681b      	ldr	r3, [r3, #0]
 8004f2c:	9203      	str	r2, [sp, #12]
 8004f2e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8004f32:	3402      	adds	r4, #2
 8004f34:	9305      	str	r3, [sp, #20]
 8004f36:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 800500c <_vfiprintf_r+0x22c>
 8004f3a:	7821      	ldrb	r1, [r4, #0]
 8004f3c:	2203      	movs	r2, #3
 8004f3e:	4650      	mov	r0, sl
 8004f40:	f7fb f976 	bl	8000230 <memchr>
 8004f44:	b138      	cbz	r0, 8004f56 <_vfiprintf_r+0x176>
 8004f46:	9b04      	ldr	r3, [sp, #16]
 8004f48:	eba0 000a 	sub.w	r0, r0, sl
 8004f4c:	2240      	movs	r2, #64	@ 0x40
 8004f4e:	4082      	lsls	r2, r0
 8004f50:	4313      	orrs	r3, r2
 8004f52:	3401      	adds	r4, #1
 8004f54:	9304      	str	r3, [sp, #16]
 8004f56:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004f5a:	4829      	ldr	r0, [pc, #164]	@ (8005000 <_vfiprintf_r+0x220>)
 8004f5c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8004f60:	2206      	movs	r2, #6
 8004f62:	f7fb f965 	bl	8000230 <memchr>
 8004f66:	2800      	cmp	r0, #0
 8004f68:	d03f      	beq.n	8004fea <_vfiprintf_r+0x20a>
 8004f6a:	4b26      	ldr	r3, [pc, #152]	@ (8005004 <_vfiprintf_r+0x224>)
 8004f6c:	bb1b      	cbnz	r3, 8004fb6 <_vfiprintf_r+0x1d6>
 8004f6e:	9b03      	ldr	r3, [sp, #12]
 8004f70:	3307      	adds	r3, #7
 8004f72:	f023 0307 	bic.w	r3, r3, #7
 8004f76:	3308      	adds	r3, #8
 8004f78:	9303      	str	r3, [sp, #12]
 8004f7a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004f7c:	443b      	add	r3, r7
 8004f7e:	9309      	str	r3, [sp, #36]	@ 0x24
 8004f80:	e76a      	b.n	8004e58 <_vfiprintf_r+0x78>
 8004f82:	fb0c 3202 	mla	r2, ip, r2, r3
 8004f86:	460c      	mov	r4, r1
 8004f88:	2001      	movs	r0, #1
 8004f8a:	e7a8      	b.n	8004ede <_vfiprintf_r+0xfe>
 8004f8c:	2300      	movs	r3, #0
 8004f8e:	3401      	adds	r4, #1
 8004f90:	9305      	str	r3, [sp, #20]
 8004f92:	4619      	mov	r1, r3
 8004f94:	f04f 0c0a 	mov.w	ip, #10
 8004f98:	4620      	mov	r0, r4
 8004f9a:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004f9e:	3a30      	subs	r2, #48	@ 0x30
 8004fa0:	2a09      	cmp	r2, #9
 8004fa2:	d903      	bls.n	8004fac <_vfiprintf_r+0x1cc>
 8004fa4:	2b00      	cmp	r3, #0
 8004fa6:	d0c6      	beq.n	8004f36 <_vfiprintf_r+0x156>
 8004fa8:	9105      	str	r1, [sp, #20]
 8004faa:	e7c4      	b.n	8004f36 <_vfiprintf_r+0x156>
 8004fac:	fb0c 2101 	mla	r1, ip, r1, r2
 8004fb0:	4604      	mov	r4, r0
 8004fb2:	2301      	movs	r3, #1
 8004fb4:	e7f0      	b.n	8004f98 <_vfiprintf_r+0x1b8>
 8004fb6:	ab03      	add	r3, sp, #12
 8004fb8:	9300      	str	r3, [sp, #0]
 8004fba:	462a      	mov	r2, r5
 8004fbc:	4b12      	ldr	r3, [pc, #72]	@ (8005008 <_vfiprintf_r+0x228>)
 8004fbe:	a904      	add	r1, sp, #16
 8004fc0:	4630      	mov	r0, r6
 8004fc2:	f3af 8000 	nop.w
 8004fc6:	4607      	mov	r7, r0
 8004fc8:	1c78      	adds	r0, r7, #1
 8004fca:	d1d6      	bne.n	8004f7a <_vfiprintf_r+0x19a>
 8004fcc:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8004fce:	07d9      	lsls	r1, r3, #31
 8004fd0:	d405      	bmi.n	8004fde <_vfiprintf_r+0x1fe>
 8004fd2:	89ab      	ldrh	r3, [r5, #12]
 8004fd4:	059a      	lsls	r2, r3, #22
 8004fd6:	d402      	bmi.n	8004fde <_vfiprintf_r+0x1fe>
 8004fd8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8004fda:	f7ff fc85 	bl	80048e8 <__retarget_lock_release_recursive>
 8004fde:	89ab      	ldrh	r3, [r5, #12]
 8004fe0:	065b      	lsls	r3, r3, #25
 8004fe2:	f53f af1f 	bmi.w	8004e24 <_vfiprintf_r+0x44>
 8004fe6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004fe8:	e71e      	b.n	8004e28 <_vfiprintf_r+0x48>
 8004fea:	ab03      	add	r3, sp, #12
 8004fec:	9300      	str	r3, [sp, #0]
 8004fee:	462a      	mov	r2, r5
 8004ff0:	4b05      	ldr	r3, [pc, #20]	@ (8005008 <_vfiprintf_r+0x228>)
 8004ff2:	a904      	add	r1, sp, #16
 8004ff4:	4630      	mov	r0, r6
 8004ff6:	f000 f879 	bl	80050ec <_printf_i>
 8004ffa:	e7e4      	b.n	8004fc6 <_vfiprintf_r+0x1e6>
 8004ffc:	080058a4 	.word	0x080058a4
 8005000:	080058ae 	.word	0x080058ae
 8005004:	00000000 	.word	0x00000000
 8005008:	08004dbb 	.word	0x08004dbb
 800500c:	080058aa 	.word	0x080058aa

08005010 <_printf_common>:
 8005010:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005014:	4616      	mov	r6, r2
 8005016:	4698      	mov	r8, r3
 8005018:	688a      	ldr	r2, [r1, #8]
 800501a:	690b      	ldr	r3, [r1, #16]
 800501c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8005020:	4293      	cmp	r3, r2
 8005022:	bfb8      	it	lt
 8005024:	4613      	movlt	r3, r2
 8005026:	6033      	str	r3, [r6, #0]
 8005028:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 800502c:	4607      	mov	r7, r0
 800502e:	460c      	mov	r4, r1
 8005030:	b10a      	cbz	r2, 8005036 <_printf_common+0x26>
 8005032:	3301      	adds	r3, #1
 8005034:	6033      	str	r3, [r6, #0]
 8005036:	6823      	ldr	r3, [r4, #0]
 8005038:	0699      	lsls	r1, r3, #26
 800503a:	bf42      	ittt	mi
 800503c:	6833      	ldrmi	r3, [r6, #0]
 800503e:	3302      	addmi	r3, #2
 8005040:	6033      	strmi	r3, [r6, #0]
 8005042:	6825      	ldr	r5, [r4, #0]
 8005044:	f015 0506 	ands.w	r5, r5, #6
 8005048:	d106      	bne.n	8005058 <_printf_common+0x48>
 800504a:	f104 0a19 	add.w	sl, r4, #25
 800504e:	68e3      	ldr	r3, [r4, #12]
 8005050:	6832      	ldr	r2, [r6, #0]
 8005052:	1a9b      	subs	r3, r3, r2
 8005054:	42ab      	cmp	r3, r5
 8005056:	dc26      	bgt.n	80050a6 <_printf_common+0x96>
 8005058:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 800505c:	6822      	ldr	r2, [r4, #0]
 800505e:	3b00      	subs	r3, #0
 8005060:	bf18      	it	ne
 8005062:	2301      	movne	r3, #1
 8005064:	0692      	lsls	r2, r2, #26
 8005066:	d42b      	bmi.n	80050c0 <_printf_common+0xb0>
 8005068:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 800506c:	4641      	mov	r1, r8
 800506e:	4638      	mov	r0, r7
 8005070:	47c8      	blx	r9
 8005072:	3001      	adds	r0, #1
 8005074:	d01e      	beq.n	80050b4 <_printf_common+0xa4>
 8005076:	6823      	ldr	r3, [r4, #0]
 8005078:	6922      	ldr	r2, [r4, #16]
 800507a:	f003 0306 	and.w	r3, r3, #6
 800507e:	2b04      	cmp	r3, #4
 8005080:	bf02      	ittt	eq
 8005082:	68e5      	ldreq	r5, [r4, #12]
 8005084:	6833      	ldreq	r3, [r6, #0]
 8005086:	1aed      	subeq	r5, r5, r3
 8005088:	68a3      	ldr	r3, [r4, #8]
 800508a:	bf0c      	ite	eq
 800508c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8005090:	2500      	movne	r5, #0
 8005092:	4293      	cmp	r3, r2
 8005094:	bfc4      	itt	gt
 8005096:	1a9b      	subgt	r3, r3, r2
 8005098:	18ed      	addgt	r5, r5, r3
 800509a:	2600      	movs	r6, #0
 800509c:	341a      	adds	r4, #26
 800509e:	42b5      	cmp	r5, r6
 80050a0:	d11a      	bne.n	80050d8 <_printf_common+0xc8>
 80050a2:	2000      	movs	r0, #0
 80050a4:	e008      	b.n	80050b8 <_printf_common+0xa8>
 80050a6:	2301      	movs	r3, #1
 80050a8:	4652      	mov	r2, sl
 80050aa:	4641      	mov	r1, r8
 80050ac:	4638      	mov	r0, r7
 80050ae:	47c8      	blx	r9
 80050b0:	3001      	adds	r0, #1
 80050b2:	d103      	bne.n	80050bc <_printf_common+0xac>
 80050b4:	f04f 30ff 	mov.w	r0, #4294967295
 80050b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80050bc:	3501      	adds	r5, #1
 80050be:	e7c6      	b.n	800504e <_printf_common+0x3e>
 80050c0:	18e1      	adds	r1, r4, r3
 80050c2:	1c5a      	adds	r2, r3, #1
 80050c4:	2030      	movs	r0, #48	@ 0x30
 80050c6:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80050ca:	4422      	add	r2, r4
 80050cc:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80050d0:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80050d4:	3302      	adds	r3, #2
 80050d6:	e7c7      	b.n	8005068 <_printf_common+0x58>
 80050d8:	2301      	movs	r3, #1
 80050da:	4622      	mov	r2, r4
 80050dc:	4641      	mov	r1, r8
 80050de:	4638      	mov	r0, r7
 80050e0:	47c8      	blx	r9
 80050e2:	3001      	adds	r0, #1
 80050e4:	d0e6      	beq.n	80050b4 <_printf_common+0xa4>
 80050e6:	3601      	adds	r6, #1
 80050e8:	e7d9      	b.n	800509e <_printf_common+0x8e>
	...

080050ec <_printf_i>:
 80050ec:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80050f0:	7e0f      	ldrb	r7, [r1, #24]
 80050f2:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80050f4:	2f78      	cmp	r7, #120	@ 0x78
 80050f6:	4691      	mov	r9, r2
 80050f8:	4680      	mov	r8, r0
 80050fa:	460c      	mov	r4, r1
 80050fc:	469a      	mov	sl, r3
 80050fe:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8005102:	d807      	bhi.n	8005114 <_printf_i+0x28>
 8005104:	2f62      	cmp	r7, #98	@ 0x62
 8005106:	d80a      	bhi.n	800511e <_printf_i+0x32>
 8005108:	2f00      	cmp	r7, #0
 800510a:	f000 80d2 	beq.w	80052b2 <_printf_i+0x1c6>
 800510e:	2f58      	cmp	r7, #88	@ 0x58
 8005110:	f000 80b9 	beq.w	8005286 <_printf_i+0x19a>
 8005114:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8005118:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 800511c:	e03a      	b.n	8005194 <_printf_i+0xa8>
 800511e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8005122:	2b15      	cmp	r3, #21
 8005124:	d8f6      	bhi.n	8005114 <_printf_i+0x28>
 8005126:	a101      	add	r1, pc, #4	@ (adr r1, 800512c <_printf_i+0x40>)
 8005128:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800512c:	08005185 	.word	0x08005185
 8005130:	08005199 	.word	0x08005199
 8005134:	08005115 	.word	0x08005115
 8005138:	08005115 	.word	0x08005115
 800513c:	08005115 	.word	0x08005115
 8005140:	08005115 	.word	0x08005115
 8005144:	08005199 	.word	0x08005199
 8005148:	08005115 	.word	0x08005115
 800514c:	08005115 	.word	0x08005115
 8005150:	08005115 	.word	0x08005115
 8005154:	08005115 	.word	0x08005115
 8005158:	08005299 	.word	0x08005299
 800515c:	080051c3 	.word	0x080051c3
 8005160:	08005253 	.word	0x08005253
 8005164:	08005115 	.word	0x08005115
 8005168:	08005115 	.word	0x08005115
 800516c:	080052bb 	.word	0x080052bb
 8005170:	08005115 	.word	0x08005115
 8005174:	080051c3 	.word	0x080051c3
 8005178:	08005115 	.word	0x08005115
 800517c:	08005115 	.word	0x08005115
 8005180:	0800525b 	.word	0x0800525b
 8005184:	6833      	ldr	r3, [r6, #0]
 8005186:	1d1a      	adds	r2, r3, #4
 8005188:	681b      	ldr	r3, [r3, #0]
 800518a:	6032      	str	r2, [r6, #0]
 800518c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8005190:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8005194:	2301      	movs	r3, #1
 8005196:	e09d      	b.n	80052d4 <_printf_i+0x1e8>
 8005198:	6833      	ldr	r3, [r6, #0]
 800519a:	6820      	ldr	r0, [r4, #0]
 800519c:	1d19      	adds	r1, r3, #4
 800519e:	6031      	str	r1, [r6, #0]
 80051a0:	0606      	lsls	r6, r0, #24
 80051a2:	d501      	bpl.n	80051a8 <_printf_i+0xbc>
 80051a4:	681d      	ldr	r5, [r3, #0]
 80051a6:	e003      	b.n	80051b0 <_printf_i+0xc4>
 80051a8:	0645      	lsls	r5, r0, #25
 80051aa:	d5fb      	bpl.n	80051a4 <_printf_i+0xb8>
 80051ac:	f9b3 5000 	ldrsh.w	r5, [r3]
 80051b0:	2d00      	cmp	r5, #0
 80051b2:	da03      	bge.n	80051bc <_printf_i+0xd0>
 80051b4:	232d      	movs	r3, #45	@ 0x2d
 80051b6:	426d      	negs	r5, r5
 80051b8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80051bc:	4859      	ldr	r0, [pc, #356]	@ (8005324 <_printf_i+0x238>)
 80051be:	230a      	movs	r3, #10
 80051c0:	e011      	b.n	80051e6 <_printf_i+0xfa>
 80051c2:	6821      	ldr	r1, [r4, #0]
 80051c4:	6833      	ldr	r3, [r6, #0]
 80051c6:	0608      	lsls	r0, r1, #24
 80051c8:	f853 5b04 	ldr.w	r5, [r3], #4
 80051cc:	d402      	bmi.n	80051d4 <_printf_i+0xe8>
 80051ce:	0649      	lsls	r1, r1, #25
 80051d0:	bf48      	it	mi
 80051d2:	b2ad      	uxthmi	r5, r5
 80051d4:	2f6f      	cmp	r7, #111	@ 0x6f
 80051d6:	4853      	ldr	r0, [pc, #332]	@ (8005324 <_printf_i+0x238>)
 80051d8:	6033      	str	r3, [r6, #0]
 80051da:	bf14      	ite	ne
 80051dc:	230a      	movne	r3, #10
 80051de:	2308      	moveq	r3, #8
 80051e0:	2100      	movs	r1, #0
 80051e2:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80051e6:	6866      	ldr	r6, [r4, #4]
 80051e8:	60a6      	str	r6, [r4, #8]
 80051ea:	2e00      	cmp	r6, #0
 80051ec:	bfa2      	ittt	ge
 80051ee:	6821      	ldrge	r1, [r4, #0]
 80051f0:	f021 0104 	bicge.w	r1, r1, #4
 80051f4:	6021      	strge	r1, [r4, #0]
 80051f6:	b90d      	cbnz	r5, 80051fc <_printf_i+0x110>
 80051f8:	2e00      	cmp	r6, #0
 80051fa:	d04b      	beq.n	8005294 <_printf_i+0x1a8>
 80051fc:	4616      	mov	r6, r2
 80051fe:	fbb5 f1f3 	udiv	r1, r5, r3
 8005202:	fb03 5711 	mls	r7, r3, r1, r5
 8005206:	5dc7      	ldrb	r7, [r0, r7]
 8005208:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800520c:	462f      	mov	r7, r5
 800520e:	42bb      	cmp	r3, r7
 8005210:	460d      	mov	r5, r1
 8005212:	d9f4      	bls.n	80051fe <_printf_i+0x112>
 8005214:	2b08      	cmp	r3, #8
 8005216:	d10b      	bne.n	8005230 <_printf_i+0x144>
 8005218:	6823      	ldr	r3, [r4, #0]
 800521a:	07df      	lsls	r7, r3, #31
 800521c:	d508      	bpl.n	8005230 <_printf_i+0x144>
 800521e:	6923      	ldr	r3, [r4, #16]
 8005220:	6861      	ldr	r1, [r4, #4]
 8005222:	4299      	cmp	r1, r3
 8005224:	bfde      	ittt	le
 8005226:	2330      	movle	r3, #48	@ 0x30
 8005228:	f806 3c01 	strble.w	r3, [r6, #-1]
 800522c:	f106 36ff 	addle.w	r6, r6, #4294967295
 8005230:	1b92      	subs	r2, r2, r6
 8005232:	6122      	str	r2, [r4, #16]
 8005234:	f8cd a000 	str.w	sl, [sp]
 8005238:	464b      	mov	r3, r9
 800523a:	aa03      	add	r2, sp, #12
 800523c:	4621      	mov	r1, r4
 800523e:	4640      	mov	r0, r8
 8005240:	f7ff fee6 	bl	8005010 <_printf_common>
 8005244:	3001      	adds	r0, #1
 8005246:	d14a      	bne.n	80052de <_printf_i+0x1f2>
 8005248:	f04f 30ff 	mov.w	r0, #4294967295
 800524c:	b004      	add	sp, #16
 800524e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005252:	6823      	ldr	r3, [r4, #0]
 8005254:	f043 0320 	orr.w	r3, r3, #32
 8005258:	6023      	str	r3, [r4, #0]
 800525a:	4833      	ldr	r0, [pc, #204]	@ (8005328 <_printf_i+0x23c>)
 800525c:	2778      	movs	r7, #120	@ 0x78
 800525e:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8005262:	6823      	ldr	r3, [r4, #0]
 8005264:	6831      	ldr	r1, [r6, #0]
 8005266:	061f      	lsls	r7, r3, #24
 8005268:	f851 5b04 	ldr.w	r5, [r1], #4
 800526c:	d402      	bmi.n	8005274 <_printf_i+0x188>
 800526e:	065f      	lsls	r7, r3, #25
 8005270:	bf48      	it	mi
 8005272:	b2ad      	uxthmi	r5, r5
 8005274:	6031      	str	r1, [r6, #0]
 8005276:	07d9      	lsls	r1, r3, #31
 8005278:	bf44      	itt	mi
 800527a:	f043 0320 	orrmi.w	r3, r3, #32
 800527e:	6023      	strmi	r3, [r4, #0]
 8005280:	b11d      	cbz	r5, 800528a <_printf_i+0x19e>
 8005282:	2310      	movs	r3, #16
 8005284:	e7ac      	b.n	80051e0 <_printf_i+0xf4>
 8005286:	4827      	ldr	r0, [pc, #156]	@ (8005324 <_printf_i+0x238>)
 8005288:	e7e9      	b.n	800525e <_printf_i+0x172>
 800528a:	6823      	ldr	r3, [r4, #0]
 800528c:	f023 0320 	bic.w	r3, r3, #32
 8005290:	6023      	str	r3, [r4, #0]
 8005292:	e7f6      	b.n	8005282 <_printf_i+0x196>
 8005294:	4616      	mov	r6, r2
 8005296:	e7bd      	b.n	8005214 <_printf_i+0x128>
 8005298:	6833      	ldr	r3, [r6, #0]
 800529a:	6825      	ldr	r5, [r4, #0]
 800529c:	6961      	ldr	r1, [r4, #20]
 800529e:	1d18      	adds	r0, r3, #4
 80052a0:	6030      	str	r0, [r6, #0]
 80052a2:	062e      	lsls	r6, r5, #24
 80052a4:	681b      	ldr	r3, [r3, #0]
 80052a6:	d501      	bpl.n	80052ac <_printf_i+0x1c0>
 80052a8:	6019      	str	r1, [r3, #0]
 80052aa:	e002      	b.n	80052b2 <_printf_i+0x1c6>
 80052ac:	0668      	lsls	r0, r5, #25
 80052ae:	d5fb      	bpl.n	80052a8 <_printf_i+0x1bc>
 80052b0:	8019      	strh	r1, [r3, #0]
 80052b2:	2300      	movs	r3, #0
 80052b4:	6123      	str	r3, [r4, #16]
 80052b6:	4616      	mov	r6, r2
 80052b8:	e7bc      	b.n	8005234 <_printf_i+0x148>
 80052ba:	6833      	ldr	r3, [r6, #0]
 80052bc:	1d1a      	adds	r2, r3, #4
 80052be:	6032      	str	r2, [r6, #0]
 80052c0:	681e      	ldr	r6, [r3, #0]
 80052c2:	6862      	ldr	r2, [r4, #4]
 80052c4:	2100      	movs	r1, #0
 80052c6:	4630      	mov	r0, r6
 80052c8:	f7fa ffb2 	bl	8000230 <memchr>
 80052cc:	b108      	cbz	r0, 80052d2 <_printf_i+0x1e6>
 80052ce:	1b80      	subs	r0, r0, r6
 80052d0:	6060      	str	r0, [r4, #4]
 80052d2:	6863      	ldr	r3, [r4, #4]
 80052d4:	6123      	str	r3, [r4, #16]
 80052d6:	2300      	movs	r3, #0
 80052d8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80052dc:	e7aa      	b.n	8005234 <_printf_i+0x148>
 80052de:	6923      	ldr	r3, [r4, #16]
 80052e0:	4632      	mov	r2, r6
 80052e2:	4649      	mov	r1, r9
 80052e4:	4640      	mov	r0, r8
 80052e6:	47d0      	blx	sl
 80052e8:	3001      	adds	r0, #1
 80052ea:	d0ad      	beq.n	8005248 <_printf_i+0x15c>
 80052ec:	6823      	ldr	r3, [r4, #0]
 80052ee:	079b      	lsls	r3, r3, #30
 80052f0:	d413      	bmi.n	800531a <_printf_i+0x22e>
 80052f2:	68e0      	ldr	r0, [r4, #12]
 80052f4:	9b03      	ldr	r3, [sp, #12]
 80052f6:	4298      	cmp	r0, r3
 80052f8:	bfb8      	it	lt
 80052fa:	4618      	movlt	r0, r3
 80052fc:	e7a6      	b.n	800524c <_printf_i+0x160>
 80052fe:	2301      	movs	r3, #1
 8005300:	4632      	mov	r2, r6
 8005302:	4649      	mov	r1, r9
 8005304:	4640      	mov	r0, r8
 8005306:	47d0      	blx	sl
 8005308:	3001      	adds	r0, #1
 800530a:	d09d      	beq.n	8005248 <_printf_i+0x15c>
 800530c:	3501      	adds	r5, #1
 800530e:	68e3      	ldr	r3, [r4, #12]
 8005310:	9903      	ldr	r1, [sp, #12]
 8005312:	1a5b      	subs	r3, r3, r1
 8005314:	42ab      	cmp	r3, r5
 8005316:	dcf2      	bgt.n	80052fe <_printf_i+0x212>
 8005318:	e7eb      	b.n	80052f2 <_printf_i+0x206>
 800531a:	2500      	movs	r5, #0
 800531c:	f104 0619 	add.w	r6, r4, #25
 8005320:	e7f5      	b.n	800530e <_printf_i+0x222>
 8005322:	bf00      	nop
 8005324:	080058b5 	.word	0x080058b5
 8005328:	080058c6 	.word	0x080058c6

0800532c <__sflush_r>:
 800532c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8005330:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005334:	0716      	lsls	r6, r2, #28
 8005336:	4605      	mov	r5, r0
 8005338:	460c      	mov	r4, r1
 800533a:	d454      	bmi.n	80053e6 <__sflush_r+0xba>
 800533c:	684b      	ldr	r3, [r1, #4]
 800533e:	2b00      	cmp	r3, #0
 8005340:	dc02      	bgt.n	8005348 <__sflush_r+0x1c>
 8005342:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8005344:	2b00      	cmp	r3, #0
 8005346:	dd48      	ble.n	80053da <__sflush_r+0xae>
 8005348:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800534a:	2e00      	cmp	r6, #0
 800534c:	d045      	beq.n	80053da <__sflush_r+0xae>
 800534e:	2300      	movs	r3, #0
 8005350:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8005354:	682f      	ldr	r7, [r5, #0]
 8005356:	6a21      	ldr	r1, [r4, #32]
 8005358:	602b      	str	r3, [r5, #0]
 800535a:	d030      	beq.n	80053be <__sflush_r+0x92>
 800535c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800535e:	89a3      	ldrh	r3, [r4, #12]
 8005360:	0759      	lsls	r1, r3, #29
 8005362:	d505      	bpl.n	8005370 <__sflush_r+0x44>
 8005364:	6863      	ldr	r3, [r4, #4]
 8005366:	1ad2      	subs	r2, r2, r3
 8005368:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800536a:	b10b      	cbz	r3, 8005370 <__sflush_r+0x44>
 800536c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800536e:	1ad2      	subs	r2, r2, r3
 8005370:	2300      	movs	r3, #0
 8005372:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8005374:	6a21      	ldr	r1, [r4, #32]
 8005376:	4628      	mov	r0, r5
 8005378:	47b0      	blx	r6
 800537a:	1c43      	adds	r3, r0, #1
 800537c:	89a3      	ldrh	r3, [r4, #12]
 800537e:	d106      	bne.n	800538e <__sflush_r+0x62>
 8005380:	6829      	ldr	r1, [r5, #0]
 8005382:	291d      	cmp	r1, #29
 8005384:	d82b      	bhi.n	80053de <__sflush_r+0xb2>
 8005386:	4a2a      	ldr	r2, [pc, #168]	@ (8005430 <__sflush_r+0x104>)
 8005388:	410a      	asrs	r2, r1
 800538a:	07d6      	lsls	r6, r2, #31
 800538c:	d427      	bmi.n	80053de <__sflush_r+0xb2>
 800538e:	2200      	movs	r2, #0
 8005390:	6062      	str	r2, [r4, #4]
 8005392:	04d9      	lsls	r1, r3, #19
 8005394:	6922      	ldr	r2, [r4, #16]
 8005396:	6022      	str	r2, [r4, #0]
 8005398:	d504      	bpl.n	80053a4 <__sflush_r+0x78>
 800539a:	1c42      	adds	r2, r0, #1
 800539c:	d101      	bne.n	80053a2 <__sflush_r+0x76>
 800539e:	682b      	ldr	r3, [r5, #0]
 80053a0:	b903      	cbnz	r3, 80053a4 <__sflush_r+0x78>
 80053a2:	6560      	str	r0, [r4, #84]	@ 0x54
 80053a4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80053a6:	602f      	str	r7, [r5, #0]
 80053a8:	b1b9      	cbz	r1, 80053da <__sflush_r+0xae>
 80053aa:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80053ae:	4299      	cmp	r1, r3
 80053b0:	d002      	beq.n	80053b8 <__sflush_r+0x8c>
 80053b2:	4628      	mov	r0, r5
 80053b4:	f7ff fa9a 	bl	80048ec <_free_r>
 80053b8:	2300      	movs	r3, #0
 80053ba:	6363      	str	r3, [r4, #52]	@ 0x34
 80053bc:	e00d      	b.n	80053da <__sflush_r+0xae>
 80053be:	2301      	movs	r3, #1
 80053c0:	4628      	mov	r0, r5
 80053c2:	47b0      	blx	r6
 80053c4:	4602      	mov	r2, r0
 80053c6:	1c50      	adds	r0, r2, #1
 80053c8:	d1c9      	bne.n	800535e <__sflush_r+0x32>
 80053ca:	682b      	ldr	r3, [r5, #0]
 80053cc:	2b00      	cmp	r3, #0
 80053ce:	d0c6      	beq.n	800535e <__sflush_r+0x32>
 80053d0:	2b1d      	cmp	r3, #29
 80053d2:	d001      	beq.n	80053d8 <__sflush_r+0xac>
 80053d4:	2b16      	cmp	r3, #22
 80053d6:	d11e      	bne.n	8005416 <__sflush_r+0xea>
 80053d8:	602f      	str	r7, [r5, #0]
 80053da:	2000      	movs	r0, #0
 80053dc:	e022      	b.n	8005424 <__sflush_r+0xf8>
 80053de:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80053e2:	b21b      	sxth	r3, r3
 80053e4:	e01b      	b.n	800541e <__sflush_r+0xf2>
 80053e6:	690f      	ldr	r7, [r1, #16]
 80053e8:	2f00      	cmp	r7, #0
 80053ea:	d0f6      	beq.n	80053da <__sflush_r+0xae>
 80053ec:	0793      	lsls	r3, r2, #30
 80053ee:	680e      	ldr	r6, [r1, #0]
 80053f0:	bf08      	it	eq
 80053f2:	694b      	ldreq	r3, [r1, #20]
 80053f4:	600f      	str	r7, [r1, #0]
 80053f6:	bf18      	it	ne
 80053f8:	2300      	movne	r3, #0
 80053fa:	eba6 0807 	sub.w	r8, r6, r7
 80053fe:	608b      	str	r3, [r1, #8]
 8005400:	f1b8 0f00 	cmp.w	r8, #0
 8005404:	dde9      	ble.n	80053da <__sflush_r+0xae>
 8005406:	6a21      	ldr	r1, [r4, #32]
 8005408:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 800540a:	4643      	mov	r3, r8
 800540c:	463a      	mov	r2, r7
 800540e:	4628      	mov	r0, r5
 8005410:	47b0      	blx	r6
 8005412:	2800      	cmp	r0, #0
 8005414:	dc08      	bgt.n	8005428 <__sflush_r+0xfc>
 8005416:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800541a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800541e:	81a3      	strh	r3, [r4, #12]
 8005420:	f04f 30ff 	mov.w	r0, #4294967295
 8005424:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005428:	4407      	add	r7, r0
 800542a:	eba8 0800 	sub.w	r8, r8, r0
 800542e:	e7e7      	b.n	8005400 <__sflush_r+0xd4>
 8005430:	dfbffffe 	.word	0xdfbffffe

08005434 <_fflush_r>:
 8005434:	b538      	push	{r3, r4, r5, lr}
 8005436:	690b      	ldr	r3, [r1, #16]
 8005438:	4605      	mov	r5, r0
 800543a:	460c      	mov	r4, r1
 800543c:	b913      	cbnz	r3, 8005444 <_fflush_r+0x10>
 800543e:	2500      	movs	r5, #0
 8005440:	4628      	mov	r0, r5
 8005442:	bd38      	pop	{r3, r4, r5, pc}
 8005444:	b118      	cbz	r0, 800544e <_fflush_r+0x1a>
 8005446:	6a03      	ldr	r3, [r0, #32]
 8005448:	b90b      	cbnz	r3, 800544e <_fflush_r+0x1a>
 800544a:	f7ff f821 	bl	8004490 <__sinit>
 800544e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005452:	2b00      	cmp	r3, #0
 8005454:	d0f3      	beq.n	800543e <_fflush_r+0xa>
 8005456:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8005458:	07d0      	lsls	r0, r2, #31
 800545a:	d404      	bmi.n	8005466 <_fflush_r+0x32>
 800545c:	0599      	lsls	r1, r3, #22
 800545e:	d402      	bmi.n	8005466 <_fflush_r+0x32>
 8005460:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8005462:	f7ff fa40 	bl	80048e6 <__retarget_lock_acquire_recursive>
 8005466:	4628      	mov	r0, r5
 8005468:	4621      	mov	r1, r4
 800546a:	f7ff ff5f 	bl	800532c <__sflush_r>
 800546e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8005470:	07da      	lsls	r2, r3, #31
 8005472:	4605      	mov	r5, r0
 8005474:	d4e4      	bmi.n	8005440 <_fflush_r+0xc>
 8005476:	89a3      	ldrh	r3, [r4, #12]
 8005478:	059b      	lsls	r3, r3, #22
 800547a:	d4e1      	bmi.n	8005440 <_fflush_r+0xc>
 800547c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800547e:	f7ff fa33 	bl	80048e8 <__retarget_lock_release_recursive>
 8005482:	e7dd      	b.n	8005440 <_fflush_r+0xc>

08005484 <__swhatbuf_r>:
 8005484:	b570      	push	{r4, r5, r6, lr}
 8005486:	460c      	mov	r4, r1
 8005488:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800548c:	2900      	cmp	r1, #0
 800548e:	b096      	sub	sp, #88	@ 0x58
 8005490:	4615      	mov	r5, r2
 8005492:	461e      	mov	r6, r3
 8005494:	da0d      	bge.n	80054b2 <__swhatbuf_r+0x2e>
 8005496:	89a3      	ldrh	r3, [r4, #12]
 8005498:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800549c:	f04f 0100 	mov.w	r1, #0
 80054a0:	bf14      	ite	ne
 80054a2:	2340      	movne	r3, #64	@ 0x40
 80054a4:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80054a8:	2000      	movs	r0, #0
 80054aa:	6031      	str	r1, [r6, #0]
 80054ac:	602b      	str	r3, [r5, #0]
 80054ae:	b016      	add	sp, #88	@ 0x58
 80054b0:	bd70      	pop	{r4, r5, r6, pc}
 80054b2:	466a      	mov	r2, sp
 80054b4:	f000 f862 	bl	800557c <_fstat_r>
 80054b8:	2800      	cmp	r0, #0
 80054ba:	dbec      	blt.n	8005496 <__swhatbuf_r+0x12>
 80054bc:	9901      	ldr	r1, [sp, #4]
 80054be:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80054c2:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80054c6:	4259      	negs	r1, r3
 80054c8:	4159      	adcs	r1, r3
 80054ca:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80054ce:	e7eb      	b.n	80054a8 <__swhatbuf_r+0x24>

080054d0 <__smakebuf_r>:
 80054d0:	898b      	ldrh	r3, [r1, #12]
 80054d2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80054d4:	079d      	lsls	r5, r3, #30
 80054d6:	4606      	mov	r6, r0
 80054d8:	460c      	mov	r4, r1
 80054da:	d507      	bpl.n	80054ec <__smakebuf_r+0x1c>
 80054dc:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80054e0:	6023      	str	r3, [r4, #0]
 80054e2:	6123      	str	r3, [r4, #16]
 80054e4:	2301      	movs	r3, #1
 80054e6:	6163      	str	r3, [r4, #20]
 80054e8:	b003      	add	sp, #12
 80054ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80054ec:	ab01      	add	r3, sp, #4
 80054ee:	466a      	mov	r2, sp
 80054f0:	f7ff ffc8 	bl	8005484 <__swhatbuf_r>
 80054f4:	9f00      	ldr	r7, [sp, #0]
 80054f6:	4605      	mov	r5, r0
 80054f8:	4639      	mov	r1, r7
 80054fa:	4630      	mov	r0, r6
 80054fc:	f7ff fa62 	bl	80049c4 <_malloc_r>
 8005500:	b948      	cbnz	r0, 8005516 <__smakebuf_r+0x46>
 8005502:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005506:	059a      	lsls	r2, r3, #22
 8005508:	d4ee      	bmi.n	80054e8 <__smakebuf_r+0x18>
 800550a:	f023 0303 	bic.w	r3, r3, #3
 800550e:	f043 0302 	orr.w	r3, r3, #2
 8005512:	81a3      	strh	r3, [r4, #12]
 8005514:	e7e2      	b.n	80054dc <__smakebuf_r+0xc>
 8005516:	89a3      	ldrh	r3, [r4, #12]
 8005518:	6020      	str	r0, [r4, #0]
 800551a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800551e:	81a3      	strh	r3, [r4, #12]
 8005520:	9b01      	ldr	r3, [sp, #4]
 8005522:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8005526:	b15b      	cbz	r3, 8005540 <__smakebuf_r+0x70>
 8005528:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800552c:	4630      	mov	r0, r6
 800552e:	f000 f837 	bl	80055a0 <_isatty_r>
 8005532:	b128      	cbz	r0, 8005540 <__smakebuf_r+0x70>
 8005534:	89a3      	ldrh	r3, [r4, #12]
 8005536:	f023 0303 	bic.w	r3, r3, #3
 800553a:	f043 0301 	orr.w	r3, r3, #1
 800553e:	81a3      	strh	r3, [r4, #12]
 8005540:	89a3      	ldrh	r3, [r4, #12]
 8005542:	431d      	orrs	r5, r3
 8005544:	81a5      	strh	r5, [r4, #12]
 8005546:	e7cf      	b.n	80054e8 <__smakebuf_r+0x18>

08005548 <memmove>:
 8005548:	4288      	cmp	r0, r1
 800554a:	b510      	push	{r4, lr}
 800554c:	eb01 0402 	add.w	r4, r1, r2
 8005550:	d902      	bls.n	8005558 <memmove+0x10>
 8005552:	4284      	cmp	r4, r0
 8005554:	4623      	mov	r3, r4
 8005556:	d807      	bhi.n	8005568 <memmove+0x20>
 8005558:	1e43      	subs	r3, r0, #1
 800555a:	42a1      	cmp	r1, r4
 800555c:	d008      	beq.n	8005570 <memmove+0x28>
 800555e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8005562:	f803 2f01 	strb.w	r2, [r3, #1]!
 8005566:	e7f8      	b.n	800555a <memmove+0x12>
 8005568:	4402      	add	r2, r0
 800556a:	4601      	mov	r1, r0
 800556c:	428a      	cmp	r2, r1
 800556e:	d100      	bne.n	8005572 <memmove+0x2a>
 8005570:	bd10      	pop	{r4, pc}
 8005572:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8005576:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800557a:	e7f7      	b.n	800556c <memmove+0x24>

0800557c <_fstat_r>:
 800557c:	b538      	push	{r3, r4, r5, lr}
 800557e:	4d07      	ldr	r5, [pc, #28]	@ (800559c <_fstat_r+0x20>)
 8005580:	2300      	movs	r3, #0
 8005582:	4604      	mov	r4, r0
 8005584:	4608      	mov	r0, r1
 8005586:	4611      	mov	r1, r2
 8005588:	602b      	str	r3, [r5, #0]
 800558a:	f7fb fd95 	bl	80010b8 <_fstat>
 800558e:	1c43      	adds	r3, r0, #1
 8005590:	d102      	bne.n	8005598 <_fstat_r+0x1c>
 8005592:	682b      	ldr	r3, [r5, #0]
 8005594:	b103      	cbz	r3, 8005598 <_fstat_r+0x1c>
 8005596:	6023      	str	r3, [r4, #0]
 8005598:	bd38      	pop	{r3, r4, r5, pc}
 800559a:	bf00      	nop
 800559c:	200003f0 	.word	0x200003f0

080055a0 <_isatty_r>:
 80055a0:	b538      	push	{r3, r4, r5, lr}
 80055a2:	4d06      	ldr	r5, [pc, #24]	@ (80055bc <_isatty_r+0x1c>)
 80055a4:	2300      	movs	r3, #0
 80055a6:	4604      	mov	r4, r0
 80055a8:	4608      	mov	r0, r1
 80055aa:	602b      	str	r3, [r5, #0]
 80055ac:	f7fb fd94 	bl	80010d8 <_isatty>
 80055b0:	1c43      	adds	r3, r0, #1
 80055b2:	d102      	bne.n	80055ba <_isatty_r+0x1a>
 80055b4:	682b      	ldr	r3, [r5, #0]
 80055b6:	b103      	cbz	r3, 80055ba <_isatty_r+0x1a>
 80055b8:	6023      	str	r3, [r4, #0]
 80055ba:	bd38      	pop	{r3, r4, r5, pc}
 80055bc:	200003f0 	.word	0x200003f0

080055c0 <_sbrk_r>:
 80055c0:	b538      	push	{r3, r4, r5, lr}
 80055c2:	4d06      	ldr	r5, [pc, #24]	@ (80055dc <_sbrk_r+0x1c>)
 80055c4:	2300      	movs	r3, #0
 80055c6:	4604      	mov	r4, r0
 80055c8:	4608      	mov	r0, r1
 80055ca:	602b      	str	r3, [r5, #0]
 80055cc:	f7fb fd9c 	bl	8001108 <_sbrk>
 80055d0:	1c43      	adds	r3, r0, #1
 80055d2:	d102      	bne.n	80055da <_sbrk_r+0x1a>
 80055d4:	682b      	ldr	r3, [r5, #0]
 80055d6:	b103      	cbz	r3, 80055da <_sbrk_r+0x1a>
 80055d8:	6023      	str	r3, [r4, #0]
 80055da:	bd38      	pop	{r3, r4, r5, pc}
 80055dc:	200003f0 	.word	0x200003f0

080055e0 <memcpy>:
 80055e0:	440a      	add	r2, r1
 80055e2:	4291      	cmp	r1, r2
 80055e4:	f100 33ff 	add.w	r3, r0, #4294967295
 80055e8:	d100      	bne.n	80055ec <memcpy+0xc>
 80055ea:	4770      	bx	lr
 80055ec:	b510      	push	{r4, lr}
 80055ee:	f811 4b01 	ldrb.w	r4, [r1], #1
 80055f2:	f803 4f01 	strb.w	r4, [r3, #1]!
 80055f6:	4291      	cmp	r1, r2
 80055f8:	d1f9      	bne.n	80055ee <memcpy+0xe>
 80055fa:	bd10      	pop	{r4, pc}

080055fc <_realloc_r>:
 80055fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005600:	4680      	mov	r8, r0
 8005602:	4615      	mov	r5, r2
 8005604:	460c      	mov	r4, r1
 8005606:	b921      	cbnz	r1, 8005612 <_realloc_r+0x16>
 8005608:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800560c:	4611      	mov	r1, r2
 800560e:	f7ff b9d9 	b.w	80049c4 <_malloc_r>
 8005612:	b92a      	cbnz	r2, 8005620 <_realloc_r+0x24>
 8005614:	f7ff f96a 	bl	80048ec <_free_r>
 8005618:	2400      	movs	r4, #0
 800561a:	4620      	mov	r0, r4
 800561c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005620:	f000 f81a 	bl	8005658 <_malloc_usable_size_r>
 8005624:	4285      	cmp	r5, r0
 8005626:	4606      	mov	r6, r0
 8005628:	d802      	bhi.n	8005630 <_realloc_r+0x34>
 800562a:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 800562e:	d8f4      	bhi.n	800561a <_realloc_r+0x1e>
 8005630:	4629      	mov	r1, r5
 8005632:	4640      	mov	r0, r8
 8005634:	f7ff f9c6 	bl	80049c4 <_malloc_r>
 8005638:	4607      	mov	r7, r0
 800563a:	2800      	cmp	r0, #0
 800563c:	d0ec      	beq.n	8005618 <_realloc_r+0x1c>
 800563e:	42b5      	cmp	r5, r6
 8005640:	462a      	mov	r2, r5
 8005642:	4621      	mov	r1, r4
 8005644:	bf28      	it	cs
 8005646:	4632      	movcs	r2, r6
 8005648:	f7ff ffca 	bl	80055e0 <memcpy>
 800564c:	4621      	mov	r1, r4
 800564e:	4640      	mov	r0, r8
 8005650:	f7ff f94c 	bl	80048ec <_free_r>
 8005654:	463c      	mov	r4, r7
 8005656:	e7e0      	b.n	800561a <_realloc_r+0x1e>

08005658 <_malloc_usable_size_r>:
 8005658:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800565c:	1f18      	subs	r0, r3, #4
 800565e:	2b00      	cmp	r3, #0
 8005660:	bfbc      	itt	lt
 8005662:	580b      	ldrlt	r3, [r1, r0]
 8005664:	18c0      	addlt	r0, r0, r3
 8005666:	4770      	bx	lr

08005668 <_init>:
 8005668:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800566a:	bf00      	nop
 800566c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800566e:	bc08      	pop	{r3}
 8005670:	469e      	mov	lr, r3
 8005672:	4770      	bx	lr

08005674 <_fini>:
 8005674:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005676:	bf00      	nop
 8005678:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800567a:	bc08      	pop	{r3}
 800567c:	469e      	mov	lr, r3
 800567e:	4770      	bx	lr
